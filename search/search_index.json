{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#skyscraper-enhanced-and-reloaded","title":"Skyscraper Enhanced and Reloaded","text":"<p>The powerful and highly customizable scraping-tool to maintain your gamelists!</p> <p>This repo is the official successor of Lars Muldjord's Skyscraper.</p>"},{"location":"#key-new-features-at-a-glance","title":"Key New Features at a Glance","text":"<ul> <li>Verified to compile and run on Linux, macOS and Windows</li> <li>Commandline Bash completion on Linux systems</li> <li>Platforms to scrape can be added via configuration files</li> <li>Several more platforms added and supported out-of-the-box</li> <li>Support for EmulationStation Desktop Edition (ES-DE) Gamelist format</li> <li>Scraping of game manuals as PDF</li> <li>Welcoming the 10th scraping module: Ingest GameBase DB data</li> <li>Support for XDG Base Directory standard</li> <li>Various configuration options added to fine-tune scraping and Gamelist   creation</li> <li>The extensive Skyscraper documentation is available in mkdocs/material layout and can be easily searched</li> </ul> <p>See also all new features</p>"},{"location":"#backstory","title":"Backstory","text":"<p>This fork is based on commit <code>654a31b</code> (2022-10-26) from Detain's fork, which was a short-lived fork of Skyscraper project after Lars retired his project.</p> <p>Skyscraper focuses on RetroPie integration but it can also be used without RetroPie. However, the RetroPie-Setup has a scriptmodule to install this Skyscraper fork.</p> <p>In essence Skyscraper only relies on a Std-C++17 toolchain and the Qt framework (Version 5 onwards).</p> <p>Ready? Let's dive in or use the navigation pane on the left.</p>"},{"location":"ARTWORK/","title":"Artwork & Layout","text":""},{"location":"ARTWORK/#artwork-look-and-effects","title":"Artwork Look and Effects","text":"<p>Skyscraper allows you to fully customize how you want the final frontend artwork to appear by editing the file <code>/home/&lt;USER&gt;/.skyscraper/artwork.xml</code>. Each piece of artwork can be composited from one or more of the other artwork resources and you can even apply several effects to them.</p> <ul> <li>Each <code>&lt;output&gt;</code> node exports a single piece of artwork.</li> <li>If no <code>&lt;layer&gt;</code> nodes are nested in an output node, it will simply export the defined type as raw unmanipulated artwork.</li> <li>All layer nodes and their nested effects (outmost to innermost) are rendered / applied top-to-bottom.</li> </ul> <p>Read on for an example <code>artwork.xml</code> and a more thorough description of the <code>&lt;output&gt;</code>, <code>&lt;layer&gt;</code> and the various available effect nodes.</p> <p>Warning</p> <p>Some users seem to have a habbit of editing the <code>/home/&lt;USER&gt;/skysource/artwork.xml</code> file. This is not the correct file! Please re-read the first paragraph. :)</p> <p>Tip</p> <p>Every time you change the artwork configuration, remember to regenerate the game list. Your changes won't take effect until you do so. Read more about this in the outlined usecase.</p> <p>Watch a video demonstrating the artwork compositing features. The video is quite old and only demonstrates a fraction of the possibilities you have with the Skyscraper compositor. It's all thoroughly documented below.</p>"},{"location":"ARTWORK/#example-artworkxml","title":"Example artwork.xml","text":"<p>An example could look something like this:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;artwork&gt;\n  &lt;output type=\"screenshot\" width=\"640\" height=\"480\"&gt;\n    &lt;layer resource=\"screenshot\" x=\"20\" width=\"520\" height=\"390\" align=\"center\" valign=\"middle\"&gt;\n      &lt;rounded radius=\"10\"/&gt;\n      &lt;stroke width=\"5\"/&gt;\n    &lt;/layer&gt;\n    &lt;layer resource=\"cover\" height=\"250\" x=\"0\" y=\"-10\" valign=\"bottom\"&gt;\n      &lt;gamebox side=\"wheel\" rotate=\"90\"/&gt;\n      &lt;shadow distance=\"5\" softness=\"5\" opacity=\"70\"/&gt;\n    &lt;/layer&gt;\n    &lt;layer resource=\"wheel\" width=\"250\" x=\"-10\" align=\"right\"&gt;\n      &lt;shadow distance=\"5\" softness=\"5\" opacity=\"70\"/&gt;\n    &lt;/layer&gt;\n  &lt;/output&gt;\n&lt;/artwork&gt;\n</code></pre> <p>Which results in a screenshot being exported to look like this:</p> <p> </p> Artwork example"},{"location":"ARTWORK/#xml-definitions","title":"XML Definitions","text":"<p>Click the following links to quickly go to a desired section.</p> <ul> <li>Nodes: XML Preamble, Artwork node, Output node, Layer node</li> <li>Effects: Blur effect, Balance effect, Brightness effect, Color balance effect, Colorize effect, Contrast effect, Frame effect, Gamebox effect, Hue effect, Mask effect, Opacity effect, Rotate effect, Rounded effect, Saturation effect, Scanlines effect, Shadow effect, Stroke effect.</li> <li>Other: Custom image resources.</li> </ul> <p>You can also find a XML schema file named <code>artwork.xsd</code> sibling to the <code>artwork.xml</code> file in the configuration folder of Skyscraper. The schema file may come in handy for validation of your artwork file with your favorite XML editor.</p> <p>Notation in this guide</p> <p>This guide uses [m] in the headings for any node or node attribute that is mandatory in your artwork XML file. An [o] indicates an optional node or node attribute.</p>"},{"location":"ARTWORK/#xml-preamble-m","title":"XML Preamble [m]","text":"<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n</code></pre> <p>This is a special node used to describe the XML language used in the document. Don't change it.</p>"},{"location":"ARTWORK/#artwork-node-m","title":"'artwork' node [m]","text":"<pre><code>&lt;artwork&gt;\n...\n&lt;/artwork&gt;\n</code></pre> <p>This node is the document base node. It contains all other nodes. Don't change or delete it.</p>"},{"location":"ARTWORK/#output-nodes-o","title":"'output' node(s) [o]","text":"<pre><code>&lt;output type=\"screenshot\" resource=\"wheel\" mpixels=\"0.1\" width=\"640\" height=\"400\"&gt;\n...\n&lt;output&gt;\n</code></pre> <p>The output node describes a single piece of artwork to be exported when scraping. You can have as many (or few) output nodes as you like.</p> <p>An output node with no nested 'layer' nodes will export the type with no compositing.</p>"},{"location":"ARTWORK/#type-attribute-m","title":"'type' attribute [m]","text":"<p>The type to be exported. Can be:</p> <ul> <li>screenshot</li> <li>cover</li> <li>wheel</li> <li>marquee</li> <li>texture</li> </ul>"},{"location":"ARTWORK/#resource-attribute-o","title":"'resource' attribute [o]","text":"<p>The resource attribute can be set to one of the following:</p> <ul> <li>screenshot</li> <li>cover</li> <li>wheel</li> <li>marquee</li> <li>texture</li> </ul> <p>Why type and resource? For instance, if you wish to export a 'marquee' image but want it to make use of the 'wheel' resource instead, you can set <code>&lt;output type=\"marquee\" resource=\"wheel\"/&gt;</code>. It will then export a 'marquee' but use the raw unmanipulated 'wheel' image when doing so. So if your frontend theme, such as some EmulationStation themes, makes use of the 'marquee' artwork, it will then be using the 'wheel' for it. If this attribute is left out, 'resource' will be set to the same as 'type'.</p> <p>Info</p> <p>The <code>screenshot</code>, <code>cover</code>, <code>wheel</code>, <code>marquee</code> and <code>texture</code> types are hardcoded. It's not currently possible to create custom types.</p>"},{"location":"ARTWORK/#mpixels-attribute-o","title":"'mpixels' attribute [o]","text":"<p>Set the desired area size for the image resource in mega pixels (eg '0.1'). This can be used as an alternative to setting width or height and is useful in cases where images vary a lot in size. 'width' and 'height' attributes will be ignored if this is set.</p>"},{"location":"ARTWORK/#width-and-height-attributes-o","title":"'width' and 'height' attributes [o]","text":"<p>Sets the width and height of the artwork export. If both are left out it will use the original size of the scraped artwork. If one is left out, it will keep the aspect ratio relative to that.</p>"},{"location":"ARTWORK/#aspect-attribute-o","title":"'aspect' attribute [o]","text":"<p>Can be applied. See description in layer</p>"},{"location":"ARTWORK/#transform-attribute-o","title":"'transform' attribute [o]","text":"<p>Can be applied. See description in layer</p>"},{"location":"ARTWORK/#layer-nodes-o","title":"'layer' node(s) [o]","text":"<pre><code>&lt;layer resource=\"cover\" mode=\"overlay\" opacity=\"50\" x=\"5\" y=\"5\"\n       mpixels=\"0.1\" width=\"10\" height=\"10\" align=\"center\" valign=\"middle\"/&gt;\n...\n&lt;/layer&gt;\n</code></pre> <p>Like layers in GIMP or almost any other respectable photo manipulation software, you can add as many of these nodes as you like. You can even nest them inside of each other, in which case the child layer will be anchored to the topleft corner of the parent layer, making it easier to align.</p> <p>Note</p> <p>Layer and effect nodes are rendered from top to bottom.</p>"},{"location":"ARTWORK/#resource-attribute-o_1","title":"'resource' attribute [o]","text":"<p>The artwork resource to be used by the layer. It can be:</p> <ul> <li>screenshot</li> <li>cover</li> <li>wheel</li> <li>marquee</li> <li>texture</li> </ul> <p>If the resource attribute is left out the layer will simply be transparent. This is useful when aligning nested layers that differ in size across games.</p>"},{"location":"ARTWORK/#mode-attribute-o","title":"'mode' attribute [o]","text":"Mode examples (note the in-image captions or table below) <p>Sets the layer render mode. It can be:</p> Fig. Col. 1 Fig. Col. 2 Fig. Col. 3 Fig. Col. 4 Fig. Col. 5 Fig. Col. 6 multiply screen overlay darken lighten difference colordodge colorburn hardlight softlight exclusion xor sourcein destinationin sourceout destinationout sourceatop destinationatop <p>If left out the layer is simply rendered as is on top of the parent layer.</p>"},{"location":"ARTWORK/#opacity-attribute-o","title":"'opacity' attribute [o]","text":"<p>Defines the opacity of the layer. 100 is completely visible. 0 is completely transparent.</p>"},{"location":"ARTWORK/#x-and-y-attributes-o","title":"'x' and 'y' attributes [o]","text":"<p>X and Y coordinates for placement. Relative to 'align' and 'valign' and the parent layer. Either can be left out in which case it will be set to 0.</p>"},{"location":"ARTWORK/#mpixels-attribute-o_1","title":"'mpixels' attribute [o]","text":"<p>Set the desired area size for the image resource in mega pixels (eg '0.1'). This can be used as an alternative to setting width or height and is useful in cases where images vary a lot in size. 'width' and 'height' attributes will be ignored if this is set.</p>"},{"location":"ARTWORK/#width-and-height-attributes-o_1","title":"'width' and 'height' attributes [o]","text":"<p>Sets the width and height of the layer. If either is left out it will keep the aspect ratio relative to the other. If both are left out it will use the original dimensions of the scraped resource.</p>"},{"location":"ARTWORK/#aspect-attribute-o_1","title":"'aspect' attribute [o]","text":"From left to right: source image, ignore, keep, keepexpand(aspect=... combined with align=\"center\" and valign=\"middle\") <p>When you have set width and height you can control with this attribute how the image is fit into the defined dimensions. Possible values for the attribute are <code>aspect=\"ignore\"</code>, <code>aspect=\"keep\"</code> or <code>aspect=\"keepexpand\"</code> (see figure). If the attribute is absent the default is <code>\"ignore\"</code>. Setting this a non default value comes in handy if you have for example a more complex artwork definition and you want the available space best used while maintaining the aspect ratio and don't care about possible blank space (e.g., letterboxing, pillarboxing) as you may have put an extra mask layer. For more information see the Qt documentation on this topic.</p> <p>This attribute can also be applied on 'mask', 'frame' and 'output' nodes.</p>"},{"location":"ARTWORK/#transform-attribute-o_1","title":"'transform' attribute [o]","text":"Transformation mode: transform=\"fast\" (l.), transform=\"smooth\" (r.) applied to resource=\"screenshot\"(images 200% enlarged from original size) <p>Controls the how the scaling of an image is done. Two values are recognized: Value <code>\"fast\"</code> does not apply an extra processing step after scaling whereas value <code>\"smooth\"</code> does apply bilinear filtering to the scaled image. When this attribute is unset, the default is smooth transformation. Setting this attribute to <code>\"fast\"</code> may result in preferrable screenshots when upscaling a small source image from a pixel game (see figure). However, Skyscraper does not deal with potential compression artifacts from the scraping source.</p> <p>This attribute can also be applied on 'output' nodes.</p>"},{"location":"ARTWORK/#align-attribute-o","title":"'align' attribute [o]","text":"<p>The horizontal alignment of the layer. It can be:</p> <ul> <li>left</li> <li>center</li> <li>right</li> </ul> <p>The alignment is relative to the parent layer.</p>"},{"location":"ARTWORK/#valign-attribute-o","title":"'valign' attribute [o]","text":"<p>The vertical alignment of the layer. It can be:</p> <ul> <li>top</li> <li>middle</li> <li>bottom</li> </ul> <p>The alignment is relative to the parent layer.</p>"},{"location":"ARTWORK/#balance-effect-node-o","title":"'balance' effect node [o]","text":"Balance effect sample <pre><code>&lt;layer&gt;\n  &lt;balance red=\"10\" green=\"20\" blue=\"30\"/&gt;\n&lt;/layer&gt;\n</code></pre> <p>Must be nested inside a layer node. Adjusts the color balance of the parent layer.</p>"},{"location":"ARTWORK/#red-attribute-o","title":"'red' attribute [o]","text":"<p>The red color adjustment. Can be -255 to 255.</p>"},{"location":"ARTWORK/#green-attribute-o","title":"'green' attribute [o]","text":"<p>The green color adjustment. Can be -255 to 255.</p>"},{"location":"ARTWORK/#blue-attribute-o","title":"'blue' attribute [o]","text":"<p>The blue color adjustment. Can be -255 to 255.</p>"},{"location":"ARTWORK/#blur-effect-node-o","title":"'blur' effect node [o]","text":"Blur effect sample <pre><code>&lt;layer&gt;\n  &lt;blur softness=\"5\"/&gt;\n&lt;/layer&gt;\n</code></pre> <p>Must be nested inside a layer node. Blurs the parent layer.</p>"},{"location":"ARTWORK/#softness-attribute-m","title":"'softness' attribute [m]","text":"<p>Defines the radius of the blur. Higher means blurrier.</p>"},{"location":"ARTWORK/#brightness-effect-node-o","title":"'brightness' effect node [o]","text":"Brightness effect sample <pre><code>&lt;layer&gt;\n  &lt;brightness value=\"10\"/&gt;\n&lt;/layer&gt;\n</code></pre> <p>Must be nested inside a layer node. Adjusts the brightness of the parent layer.</p>"},{"location":"ARTWORK/#value-attribute-m","title":"'value' attribute [m]","text":"<p>The difference value for the adjustment. Can be -255 to 255.</p>"},{"location":"ARTWORK/#colorize-effect-node-o","title":"'colorize' effect node [o]","text":"Colorize effect sample <pre><code>&lt;layer&gt;\n  &lt;colorize hue=\"180\" saturation=\"-50\"/&gt;\n&lt;/layer&gt;\n</code></pre> <p>Must be nested inside a layer node. Colorizes the parent layer with a single hue.</p>"},{"location":"ARTWORK/#hue-attribute-m","title":"'hue' attribute [m]","text":"<p>Sets the hue in degrees. Can be 0 to 360.</p>"},{"location":"ARTWORK/#saturation-attribute-o","title":"'saturation' attribute [o]","text":"<p>Sets the saturation delta value of the colorize effect. Can be -127 to 127.</p>"},{"location":"ARTWORK/#contrast-effect-node-o","title":"'contrast' effect node [o]","text":"Contrast effect sample <pre><code>&lt;layer&gt;\n  &lt;contrast value=\"10\"/&gt;\n&lt;/layer&gt;\n</code></pre> <p>Must be nested inside a layer node. Adjusts the contrast of the parent layer.</p>"},{"location":"ARTWORK/#value-attribute-m_1","title":"'value' attribute [m]","text":"<p>The difference value for the adjustment. Can be -255 to 255.</p>"},{"location":"ARTWORK/#frame-effect-node-o","title":"'frame' effect node [o]","text":"Frame effect sample <pre><code>&lt;layer&gt;\n  &lt;frame file=\"[custom image resource]\" x=\"0\" y=\"0\" width=\"100\" height=\"100\"/&gt;\n&lt;/layer&gt;\n</code></pre> <p>Must be nested inside a layer node. This applies a frame to the parent layer.</p> <p>Tip</p> <p>You can get some cool results by first applying a mask, then applying a frame. This is useful for frames that aren't square.</p>"},{"location":"ARTWORK/#file-attribute-m","title":"'file' attribute [m]","text":"<p>The filename of the custom image resource to be used as frame.</p>"},{"location":"ARTWORK/#width-attribute-o","title":"'width' attribute [o]","text":"<p>Sets the width of the frame in pixels. If left out it will be set to the width of the parent layer.</p>"},{"location":"ARTWORK/#height-attribute-o","title":"'height' attribute [o]","text":"<p>Sets the height of the frame in pixels. If left out it will be set to the height of the parent layer.</p>"},{"location":"ARTWORK/#x-attribute-o","title":"'x' attribute [o]","text":"<p>Sets the x coordinate of the frame relative to the parent layer. If left out it will be set to 0.</p>"},{"location":"ARTWORK/#y-attribute-o","title":"'y' attribute [o]","text":"<p>Sets the y coordinate of the frame relative to the parent layer. If left out it will be set to 0.</p>"},{"location":"ARTWORK/#aspect-attribute-o_2","title":"'aspect' attribute [o]","text":"<p>Can be applied. See description in layer</p>"},{"location":"ARTWORK/#gamebox-effect-node-o","title":"'gamebox' effect node [o]","text":"Gamebox effect sample <p>Left image shows the result with the wheel artwork applied to the side. Right image shows the original cover layer.</p> <pre><code>&lt;layer resource=\"cover\" height=\"200\"&gt;\n  &lt;gamebox side=\"[custom image resource]\" rotate=\"90\" sidescaling=\"both\"/&gt;\n&lt;/layer&gt;\n</code></pre> <p>Must be nested inside a layer node. Renders a nifty looking 3D game box. It uses the parent layer image on the front of the box.</p>"},{"location":"ARTWORK/#side-attribute-o","title":"'side' attribute [o]","text":"<p>The filename of the custom image resource to be used on the side of the box.</p>"},{"location":"ARTWORK/#rotate-attribute-o","title":"'rotate' attribute [o]","text":"<p>Defines the rotation of the side image in degrees.</p>"},{"location":"ARTWORK/#sidescaling-attribute-o","title":"'sidescaling' attribute [o]","text":"<p>Defines how to scale the side / spine image. If left out, it will autoscale depending on the size of the artwork resource. Can be 'width', 'height' or 'both'.</p>"},{"location":"ARTWORK/#hue-effect-node-o","title":"'hue' effect node [o]","text":"Hue effect sample <pre><code>&lt;layer&gt;\n  &lt;hue value=\"100\"/&gt;\n&lt;/layer&gt;\n</code></pre> <p>Must be nested inside a layer node. Rotates the hue of the parent layer.</p>"},{"location":"ARTWORK/#value-attribute-m_2","title":"'value' attribute [m]","text":"<p>The difference value for the adjustment. Can be 0 to 359.</p>"},{"location":"ARTWORK/#mask-effect-node-o","title":"'mask' effect node [o]","text":"Masking sample <p>Left image shows the result. Right image shows the mask used. The white part of the mask is transparent.</p> <pre><code>&lt;layer&gt;\n  &lt;mask file=\"[custom image resource]\" x=\"0\" y=\"0\" width=\"100\" height=\"100\"/&gt;\n&lt;/layer&gt;\n</code></pre> <p>Must be nested inside a layer node. This applies a mask to the parent layer.</p>"},{"location":"ARTWORK/#file-attribute-m_1","title":"'file' attribute [m]","text":"<p>The filename of the custom image resource to be used as mask. The alpha channel of the mask will blind out the underlying parts of the parent layer.</p>"},{"location":"ARTWORK/#width-attribute-o_1","title":"'width' attribute [o]","text":"<p>Sets the width of the mask in pixels. If left out it will be set to the width of the parent layer.</p>"},{"location":"ARTWORK/#height-attribute-o_1","title":"'height' attribute [o]","text":"<p>Sets the height of the mask in pixels. If left out it will be set to the height of the parent layer.</p>"},{"location":"ARTWORK/#x-attribute-o_1","title":"'x' attribute [o]","text":"<p>Sets the x coordinate of the mask relative to the parent layer. If left out it will be set to 0.</p>"},{"location":"ARTWORK/#y-attribute-o_1","title":"'y' attribute [o]","text":"<p>Sets the y coordinate of the mask relative to the parent layer. If left out it will be set to 0.</p>"},{"location":"ARTWORK/#aspect-attribute-o_3","title":"'aspect' attribute [o]","text":"<p>Can be applied. See description in layer</p>"},{"location":"ARTWORK/#opacity-effect-node-o","title":"'opacity' effect node [o]","text":"Opacity effect sample <pre><code>&lt;layer&gt;\n  &lt;opacity value=\"50\"/&gt;\n&lt;/layer&gt;\n</code></pre> <p>Must be nested inside a layer node. Adjusts the opacity of the parent layer.</p>"},{"location":"ARTWORK/#value-attribute-m_3","title":"'value' attribute [m]","text":"<p>The opacity of the layer. Can be 0-100 where 0 is completely transparent and 100 is opaque.</p>"},{"location":"ARTWORK/#rotate-effect-node-o","title":"'rotate' effect node [o]","text":"Rotation examples <pre><code>&lt;layer&gt;\n  &lt;rotate degrees=\"45\" axis=\"y\"/&gt;\n&lt;/layer&gt;\n</code></pre> <p>Must be nested inside a layer node. Rotates the parent layer around the x, y or z axis.</p>"},{"location":"ARTWORK/#degrees-attribute-m","title":"'degrees' attribute [m]","text":"<p>Sets how many degrees the parent layer will be rotated. Can be -360 to 360.</p>"},{"location":"ARTWORK/#axis-attribute-o","title":"'axis' attribute [o]","text":"<p>Sets which axis the parent layer should be rotated around. Can be 'x', 'y' or 'z'. If left out it will be set to 'z'.</p>"},{"location":"ARTWORK/#rounded-effect-node-o","title":"'rounded' effect node [o]","text":"Corner rounding sample <pre><code>&lt;layer&gt;\n  &lt;rounded radius=\"10\"/&gt;\n&lt;/layer&gt;\n</code></pre> <p>Must be nested inside a layer node. Rounds the corners of the parent layer.</p>"},{"location":"ARTWORK/#radius-attribute-m","title":"'radius' attribute [m]","text":"<p>Defines the radius of the corners in pixels.</p>"},{"location":"ARTWORK/#saturation-effect-node-o","title":"'saturation' effect node [o]","text":"Saturation effect sample <pre><code>&lt;layer&gt;\n  &lt;saturation value=\"-100\"/&gt;\n&lt;/layer&gt;\n</code></pre> <p>Must be nested inside a layer node. Adjusts the color saturation of the parent layer.</p> <p>Tip</p> <p>If you want to completely greyscale your layer I highly recommend using the 'saturation' attribute of the 'colorize' effect instead. It uses a better estimation of percieved luminance.</p>"},{"location":"ARTWORK/#value-attribute-m_4","title":"'value' attribute [m]","text":"<p>The difference value for the adjustment. Can be -255 to 255.</p>"},{"location":"ARTWORK/#scanlines-effect-node-o","title":"'scanlines' effect node [o]","text":"Scanlines effect sample <pre><code>&lt;layer&gt;\n  &lt;scanlines file=\"scanlines1.png\" scale=\"1.0\" opacity=\"100\" mode=\"overlay\"/&gt;\n&lt;/layer&gt;\n</code></pre> <p>Must be nested inside a layer node. Adds a CRT monitor scanline effect to the parent layer.</p>"},{"location":"ARTWORK/#file-attribute-o","title":"'file' attribute [o]","text":"<p>The filename of the custom image resource to be used as the scanline overlay. If left out it defaults to <code>scanlines1.png</code>.</p>"},{"location":"ARTWORK/#scale-attribute-o","title":"'scale' attribute [o]","text":"<p>Sets the scale factor of the overlay. Can be 0.1 to 2.0. If left out it defaults to 1.0.</p>"},{"location":"ARTWORK/#opacity-attribute-o_1","title":"'opacity' attribute [o]","text":"<p>Sets the opacity of the overlay. Can be 0 to 100. If left out it defaults to 100.</p>"},{"location":"ARTWORK/#mode-attribute-o_1","title":"'mode' attribute [o]","text":"<p>Sets the overlay compositing mode. The values are the same as in the layer 'mode' attribute.</p> <p>If left out the overlay is rendered using the <code>overlay</code> method.</p>"},{"location":"ARTWORK/#shadow-effect-node-o","title":"'shadow' effect node [o]","text":"Dropshadow effect sample <pre><code>&lt;layer&gt;\n  &lt;shadow distance=\"10\" softness=\"5\" opacity=\"50\"/&gt;\n&lt;/layer&gt;\n</code></pre> <p>Must be nested inside a layer node. Renders a dropshadow on the parent layer using the attributes provided. If either of the attributes are left out, the shadow won't be drawn.</p>"},{"location":"ARTWORK/#distance-attribute-m","title":"'distance' attribute [m]","text":"<p>Distance in pixels from the layer. The distance is always down to the right.</p>"},{"location":"ARTWORK/#softness-attribute-m_1","title":"'softness' attribute [m]","text":"<p>Defines how soft (radius) the shadow will appear. A value of 0 is sharpest.</p>"},{"location":"ARTWORK/#opacity-attribute-m","title":"'opacity' attribute [m]","text":"<p>Defines the opacity of the shadow. 100 is completely visible. 0 is completely transparent.</p>"},{"location":"ARTWORK/#stroke-effect-node-o","title":"'stroke' effect node [o]","text":"Stroke effect sample <pre><code>&lt;layer&gt;\n  &lt;stroke width=\"5\" red=\"10\" green=\"20\" blue=\"30\"/&gt;\n&lt;/layer&gt;\n</code></pre> <p>Must be nested inside a layer node. Renders a colored outline on the parent layer. If all color attributes are left out, it averages a suitable color from the parent layer.</p>"},{"location":"ARTWORK/#width-attribute-m","title":"'width' attribute [m]","text":"<p>The width of the outline in pixels.</p>"},{"location":"ARTWORK/#red-attribute-o_1","title":"'red' attribute [o]","text":"<p>The red color value for the outline. Can be 0-255. If left out it is set to 0.</p>"},{"location":"ARTWORK/#green-attribute-o_1","title":"'green' attribute [o]","text":"<p>The green color value for the outline. Can be 0-255. If left out it is set to 0.</p>"},{"location":"ARTWORK/#blue-attribute-o_1","title":"'blue' attribute [o]","text":"<p>The blue color value for the outline. Can be 0-255. If left out it is set to 0.</p>"},{"location":"ARTWORK/#color-attribute-o","title":"'color' attribute [o]","text":"<p>Provides the color to use RGB hexadecimal notation. This can be used instead of the 'red', 'green' and 'blue' attributes described above. An example could be 'color=\"#ff0099\"'. You may also use the shorthand form, thus <code>#f06</code> will be expanded to <code>#ff0066</code>. If the 'color' attribute is provided, then 'red', 'green', 'blue' values are ignored if they are also present.</p>"},{"location":"ARTWORK/#custom-image-resources","title":"Custom image resources","text":"<p>You can also use custom image resources wherever the documentation says so. Place your custom resources in the '<code>/home/&lt;USER&gt;/.skyscraper/resources</code>' folder and use it by adding the filename to the attribute.</p> <p>Example:</p> <pre><code>&lt;gamebox side=\"megadrive_logo.png\" rotate=\"90\"/&gt;\n</code></pre> <p>The file megadrive_logo.png will then be loaded from the '<code>/home/&lt;USER&gt;/.skyscraper/resources/megadrive_logo.png</code>' file. Feel free to create subfolders inside the resources folder. If you do, remember to add the partial path to the filename like so:</p> <pre><code>&lt;gamebox side=\"platform_logos/megadrive_logo.png\" rotate=\"90\"/&gt;\n</code></pre> <p>This will look for the file at '<code>/home/&lt;USER&gt;/.skyscraper/resources/platform_logos/megadrive_logo.png</code>'.</p> <p>Warning</p> <p>All custom image resources are loaded into memory when Skyscraper starts to avoid repeatedly reading them from disc / SD card. So please keep your resources to a minimum - otherwise it might exceed the total memory on the Pi which will cause Skyscraper to get killed by the kernel.</p>"},{"location":"CACHE/","title":"The Cache","text":""},{"location":"CACHE/#resource-cache","title":"Resource Cache","text":"<p>Whenever you scrape any platform with any scraping module, Skyscraper caches each resource internally. A resource can, for instance, be a game <code>description</code> or a game <code>screenshot</code>. Each game can have several versions of each resource cached locally. One of each type per scraping module. This comes in handy when generating the game list and artwork compositions.</p> <p>Think of the resource cache as the cache in an internet browser. Most of the data on webpages don't change much. By caching some of the data locally, it can load parts of a webpage from that data instead of loading it from the remote server. This is exactly how the Skyscraper cache works. It helps keep the online servers healthy by not hammering them whenever you need resources you already downloaded once. And it allows you to re-generate the frontend game lists if you add new games or perhaps want to change the style of the exported artwork.</p> <p>Default resource cache folder</p> <p>The default base folder for all of Skyscrapers' locally cached data is in the <code>/home/&lt;USER&gt;/.skyscraper/cache</code> folder. In this folder you'll find individual platform subfolders. Any of these are selfcontained and contains all of the cached data for that particular platform.</p> <p>Resource and scraping module priorities</p> <p>There is ONE file that you can and should edit inside each of the <code>/home/&lt;USER&gt;/.skyscraper/cache/&lt;PLATFORM&gt;</code> folders. That file is called <code>priorities.xml</code> and decides the scraper priority of resources for each resource type. For instance, if you know that <code>thegamesdb</code> always provides the best <code>descriptions</code> for games, you'd add an <code>&lt;order type=\"description\"&gt;</code> node with a <code>&lt;source&gt;thegamesdb&lt;/source&gt;</code> subnode. You can have multiple <code>&lt;source&gt;</code> nodes, Skyscraper will then prefer the topmost source when generating a game list. If the topmost isn't found it'll prioritize the next one and so forth. Any source that isn't listed with an <code>&lt;order&gt;</code> node will be prioritized using timestamps (newest wins) for when each resource was added to the cache. So you don't have to add all of them.</p> <p>Skyscraper provides the example file <code>/home/&lt;USER&gt;/.skyscraper/cache/priorities.xml.example</code>. Please don't edit this file manually, as it will be overwritten when you update Skyscraper. When a platform is scraped for the first time, it will automatically copy the example file to <code>/home/&lt;USER&gt;/.skyscraper/cache/&lt;PLATFORM&gt;/priorities.xml</code> unless it already exists. You can of course also copy the file yourself before scraping a platform. If you do so, be sure to remove the <code>.example</code> part of the filename so it's just called <code>priorities.xml</code>.</p> <p>Update locally cached data</p> <p>If you wish to update / refresh the locally cached resources for a particular platform and scraping module, Skyscraper provides the <code>--refresh</code> option. If this flag is set on the command line, any data in the resource cache will be updated with the new incoming data.</p> <p>If you wish to just refresh the data for a single rom simply scrape it with <code>-p &lt;PLATFORM&gt; -s &lt;SCRAPING MODULE&gt; &lt;RELATIVE OR FULL ROM PATH AND FILENAME&gt;</code> and the locally cached data for that particular rom will be updated / refreshed. You can add more filenames one after the other if you like. If any filename or paths has spaces in it, remember to double-quote it like so <code>\"relative path/to rom/rom filename.sfc\"</code>. You don't need the <code>--refresh</code> option when updating single files - it is implicit.</p> <p>When you've updated information in the resource cache, always remember to re-generate the game list by simply running <code>Skyscraper -p &lt;PLATFORM&gt;</code> when you're done. The updated resources won't be visible in your frontend until you do.</p>"},{"location":"CACHE/#the-resource-cache-folder-and-file-structures","title":"The Resource Cache Folder and File Structures","text":"<p>Preferred way of editing the cache is via the various <code>--cache</code> commands.</p> <p>Do not edit</p> <p>MOST FILES AND FOLDERS INSIDE THE <code>/home/&lt;USER&gt;/.skyscraper/cache</code> FOLDER ARE NOT MEANT TO BE MANIPULATED BY HAND! It can be done, but don't complain to me about the format of the database. It is NOT meant to be understood by humans. It is meant to be efficient for reading and parsing by Skyscraper itself. Same goes for the media files that reside in the subfolders.</p> <p>Don't leave custom files in here</p> <p>If you decide to add your own files to the subfolders, you risk them being deleted by Skyscraper later on if it is run with one of the cache cleanup command line options. You've been warned!</p> <p>Other cool stuff you CAN DO: Each subfolder in the <code>/home/&lt;USER&gt;/.skyscraper/cache/</code> folder is self-contained and can be copied to other Skyscraper installations at your convenience. Just copy the folder itself over to some other computer that has Skyscraper 1.6.0 or later installed, and you can make use of the data when generating game lists. If you add it at a non-default location, set the custom folder with <code>-d &lt;FOLDER&gt;</code>.</p>"},{"location":"CACHE/#resource-cache-format","title":"Resource Cache Format","text":"<p>I do not recommend editing the <code>db.xml</code> resource cache files manually. But the format is simple, so you certainly can if you want to.</p> <p>Resource id</p> <p>The database consists of resource entries connected to a unique id. The id is calculated from the rom data or, in special cases, the filename (in cases where the file data is a script or a ROM gets changed by the gameplay). An entry can look like this:</p> <pre><code>&lt;resource id=\"&lt;ID KEY&gt;\" \n        type=\"&lt;RESOURCE TYPE&gt;\" \n      source=\"&lt;SCRAPING SOURCE&gt;\"\n   timestamp=\"&lt;UNIX TIMESTAMP IN MSECS&gt;\"&gt;Resource data&lt;/resource&gt;\n</code></pre> <p>Note</p> <p>Pre-3.3.0 versions of Skyscraper used <code>sha1</code> as the name of the unique id key. Later versions use <code>id</code>.</p>"},{"location":"CACHE/#resource-types","title":"Resource Types","text":""},{"location":"CACHE/#title","title":"title","text":"<p>A game title</p>"},{"location":"CACHE/#platform","title":"platform","text":"<p>A game platform</p>"},{"location":"CACHE/#description","title":"description","text":"<p>A game description</p>"},{"location":"CACHE/#publisher","title":"publisher","text":"<p>The publisher of a game</p>"},{"location":"CACHE/#developer","title":"developer","text":"<p>The developer of a game</p>"},{"location":"CACHE/#players","title":"players","text":"<p>How many players are supported by a game</p>"},{"location":"CACHE/#tags","title":"tags","text":"<p>List of game tags, most often genre related</p>"},{"location":"CACHE/#releasedate","title":"releasedate","text":"<p>The release date of a game</p>"},{"location":"CACHE/#ages","title":"ages","text":"<p>Game age rating, defined as youngest allowed age in years</p>"},{"location":"CACHE/#rating","title":"rating","text":"<p>Game rating, real number between 0 and 1</p>"},{"location":"CACHE/#cover","title":"cover","text":"<p>A cover image filename for a game (file exists in <code>covers</code> subfolder)</p>"},{"location":"CACHE/#screenshot","title":"screenshot","text":"<p>A screenshot image filename for a game (file exists in <code>screenshots</code> subfolder)</p>"},{"location":"CACHE/#wheel","title":"wheel","text":"<p>A wheel (logo) image filename for a game (file exists in <code>wheels</code> subfolder)</p>"},{"location":"CACHE/#marquee","title":"marquee","text":"<p>A marquee image filename for a game (file exists in <code>marquees</code> subfolder)</p>"},{"location":"CACHE/#texture","title":"texture","text":"<p>A texture image (disc/cartridge) filename for a game (file exists in <code>textures</code> subfolder)</p>"},{"location":"CACHE/#video","title":"video","text":"<p>A video file filename for a game (file exists in <code>videos</code> subfolder)</p>"},{"location":"CACHE/#manual","title":"manual","text":"<p>A manual (PDF) file filename for a game (file exists in <code>manuals</code> subfolder)</p>"},{"location":"CHANGELOG/","title":"Changelog","text":""},{"location":"CHANGELOG/#changes","title":"Changes","text":"<p>This page summarizes the changes of each Skyscraper release, a changlog for humans.</p>"},{"location":"CHANGELOG/#version-3180-2025-tba","title":"Version 3.18.0 (2025-TBA)","text":"<ul> <li>Added: Allow more relaxed extension syntax in config options. In addition to   <code>'*.ext'</code> also allow <code>'.ext'</code> and <code>'ext'</code></li> <li>Updated: macOS installation instructions to use Qt6</li> <li>Updated: Docker uses Ubuntu 24.04 and Qt6</li> <li>Updated: Documentation, added usage level for configuration options. See   config options   overview, plus many   smaller edits</li> <li>Fixed: Various edge cases remediated, esp. #166, #167 and #169, thanks to all   reporters!</li> </ul>"},{"location":"CHANGELOG/#version-3170-2025-05-04","title":"Version 3.17.0 (2025-05-04)","text":"<ul> <li>Changed: Handling of relative path in configuration options adapted to enable   that gamelist, ROM folder and media folder can be moved easier around or can   be moved to other devices. Also, the config INI file can be provided with a   relative path, as all other path options. See details in the path handling   doc. Thanks to @cameronhimself for nudging me.</li> <li>Added: Artwork finetuning, added option to control aspect ratio when   scaling images. Thanks to   @joyrider3774 for the suggestion.</li> <li>Added: More Artwork finetuning, added option to disable smoothing of   screenshots (and other   images). Thanks to @moritzauge for the idea.</li> <li>Added: XML schema file <code>artwork.xsd</code> for XML artwork validation, beneficial   for use in your favorite XML editor.</li> <li>Updated: Query keyword <code>romnom=</code> in <code>--query='...'</code> for scraper Screenscraper   is now optional. It gets added automagically when no other query keyword is   applied.</li> <li>Updated: <code>mamemap.csv</code> for MAME 0.275</li> <li>Fixed: (#150) Enable MobyGames scraper usage with personal API key. Thanks,   @risalt and to the constructive support at MobyGames.</li> <li>Fixed: (#122) Updated ZX-Spectrum scraper module. It uses now the site   <code>zxinfo.dk</code> and a web API. The API provides at least the same information as   the defunct search on <code>worldofspectrum.org</code>. Check out the added <code>--query=</code>   options for the ZXInfo scraper. Thanks for the   hint to @pobulous and to @thomasheckmann for the API access.</li> <li>Fixed: (#136) TGDB scraper now tries harder to get wheel/logo mediafiles.   Thanks for reporting, @joyrider3774.</li> </ul>"},{"location":"CHANGELOG/#version-3160-2025-03-10","title":"Version 3.16.0 (2025-03-10)","text":"<ul> <li>Added: Support for local GameBase DB scraping. See the module   description and the config   setting for details. To the RetroPie users:   Please update the scriptmodule in the RetroPie-Setup first before updating   Skyscraper.</li> <li>Added: Documentation on scraper modules supplied with scraper   capabilities.</li> <li>Added: Documentation on options for <code>--query</code> parameter per scraper modules.   See the recognized query keywords per scraping   module.</li> <li>Added: IGDB scraper now supports Screenshot and Cover scraping, plus it   allows querying with game ID <code>--query=\"id=...\"</code>.</li> <li>Updated: ArcadeDB scraper now downloads HD video if present, failsafes to   default video.</li> <li>Updated: Tip of the day is now word-wrapped and uses specific paths instead of   <code>/home/USER/...</code></li> <li>Changed: Backward compability limited to Qt 5.11 (Debian Buster), earlier Qt   versions are no longer supported. However, Skyscraper is fully compatible to   Qt6 on Linux, macOS and Windows.</li> <li>Fixed: Various edge cases.</li> </ul>"},{"location":"CHANGELOG/#version-3150-2025-01-24","title":"Version 3.15.0 (2025-01-24)","text":"<ul> <li>Added: Separate local Platform configuration from upstream Platform   configuration. Details in the platform config   documentation. For the   RetroPie users: Please update the scriptmodule in the RetroPie-Setup first   before updating via <code>retropie_setup.sh</code>, otherwise you have to install the   script named in the documentation above manually. Thanks for the nudge,   @s1eve-mcdichae1.</li> <li>Added: Configuration option <code>gameListFilename</code>. See   documentation, there is also a command line   option. Thanks #1, @Leukhos for the   submission.</li> <li>Added: Support \"all platform selection\" for cache commands within one   Skyscraper run. See respective documentation for cache   report:missing,   cache validate, cache   vacuum and cache   purge. Thanks #2, @Leukhos   the addition is very appreciated.</li> <li>Fixed: Improvements to the Pegasus frontend, to avoid inconsistency with   existing aliases in the frontend output for the keywords <code>command/launch</code> and   <code>workdir/cwd</code>. Thanks, @Leukhos for your third submission.</li> <li>Fixed: Some edge case bugs wiped out, thanks to all reporters!</li> </ul>"},{"location":"CHANGELOG/#version-3140-2024-12-08","title":"Version 3.14.0 (2024-12-08)","text":"<ul> <li>Added: Support for XDG Base Directories, thanks for the suggestion   @ASHGOLDOFFICIAL.</li> <li>Added: Option to allow any delimiter between consecutive brackets and   parentheses in gamelist title. See   <code>innerBracketsReplace</code> for examples.   Thanks for the suggestion, @retrobit.</li> <li>Added: Option to retain disc numbering from game filename, when no other   bracket information is requested. See   <code>keepDiscInfo</code> for details. Thanks, @maxexcloo!</li> <li>Added: Option to override year comparison during scraping, if year is present   in game filename. See   <code>ignoreYearInFilename</code>.</li> <li>Added: Platform 'Fujitsu   FM-Towns'. Manually update   your <code>peas.json</code> and <code>platformid_map.csv</code> to make use of it.</li> <li>Added: Option <code>--hint</code>, it shows a random Tip of the Day.</li> <li>Updated: Skyscraper's hardcoded <code>/home/&lt;USER&gt;</code> replaced with the actual user's   home directory in messages. Thanks for highlighting it on the Mac,   @cdaters</li> <li>Changed: When an invalid scrape module is provided with <code>-s</code> Skyscraper now   exits. Before this change Skyscraper failed back to cache scraping silently.</li> <li>Updated: Check on RetroPie if an existing Skyscraper installation is updated   at least with RetroPie-Setup 4.8.6 onwards to have the configurable platform   information deployed (<code>peas.json</code>) and provide a remediation to the user, if   this is violated</li> <li>Updated: A downloaded <code>whdload.xml</code> file for platform Amiga will be not   downloaded again until the server indicates. However, manually removing   <code>/home/&lt;USER&gt;/.skyscraper/whdload_cached_etag.txt</code> will force a new download.</li> <li>Fixed: Performing Ctrl-C in <code>--cache edit</code> mode will now dismiss any changes   made instead of persisting them</li> <li>Fixed: Game rating calculation in Openretro scraping module</li> </ul>"},{"location":"CHANGELOG/#version-3130-2024-11-06","title":"Version 3.13.0 (2024-11-06)","text":"<ul> <li>Added: Option to provide user file <code>peas_local.json</code> (same format as   <code>peas.json</code>), to extend platform information or overwrite existing platform   information</li> <li>Updated: <code>*_platform.json</code> files as reference for supported platforms of   various scrapers</li> <li>Added: Support for Vircon32 platform in <code>peas.json</code>. Thanks for hinting,   @vircon32</li> <li>Removed: <code>scrapers</code> entries in <code>peas.json</code>, as it did not provide any use.</li> <li>Removed: Deprecated flags and options: <code>includeFiles</code> superseded by   <code>includePattern</code>; <code>excludeFiles</code> superseded by <code>excludePattern</code>;   <code>gamelistFolder</code> superseded by <code>gameListFolder</code>; <code>fromfile</code> superseded by   <code>includefrom</code>. These were deprecated since v3.7.0.</li> </ul>"},{"location":"CHANGELOG/#version-3120-2024-07-01","title":"Version 3.12.0 (2024-07-01)","text":"<ul> <li>Added: Support for scraping of PDF manuals (for scrape modules screenscraper,   import and esgamelist) and gamelist output with these manuals for frontends   (ES-DE Frontend and some EmulationStation variants). See configurations   options <code>manuals=true</code> and   <code>gameListVariants=enable-manuals</code>. Thanks for   the initial PR, @pandino</li> <li>Added: For frontend ES-DE, evaluate environment variable <code>ESDE_APPDATA_DIR</code> if   present. Thanks for the hint, @ASHGOLDOFFICIAL</li> <li>Added: Use also release year as hint on user interaction. This is useful when   in interactive mode and more than one game with the same name is found.   Skyscraper can be guided to prefer a specific game when the release year is   added in parenthesis as part of the ROM name (or alias in <code>aliasMap.csv</code>).   Verbose info in #59. Thanks,   @mjkaye</li> <li>Changed: Persistent config option <code>onlymissing</code> for counting and scraping only   games which do not have any game data in the cache. This is a commodity config   option to the already existing flag with the same name. Plus: If you use a   scraper with a scraping limit for games to be scraped at once (e.g. MobyGames)   you may stay below that limit. See also documentation of   onlymissing. Thanks for the suggestion,   @s1eve-mcdichae1</li> <li>Update: Valid extensions (= <code>formats</code> in Skyscraper's <code>peas.json</code> file) with   info from RetroPie's <code>platform.cfg</code> (commit   <code>5e0ab1f</code>)</li> <li>Fixed: The update   script   for recent macOS versions. Thanks, @calumbrodie</li> </ul>"},{"location":"CHANGELOG/#version-3110-2024-04-15","title":"Version 3.11.0 (2024-04-15)","text":"<ul> <li>Added: Support for EmulationStation Desktop Edition (ES-DE Frontend). Use   <code>frontend=esde</code> in <code>config.ini</code> and see   documentation on the   default settings. Thanks for the hints and for testing, @maxexcloo, @Nargash</li> <li>Added: Entries in   <code>aliasMap.csv</code>   are now also applicable for Screenscraper. Thanks, @retrobit.</li> <li>Added: Enhanced game name detection for ScummVM platform.</li> <li>Changed: In module Screenscraper, in some cases if multiple media types are   queried (NB: most queries are single-typed), now the first type is selected   with the first matching region. Only if this does exists in any provided   region, try the next type with all provided regions (in short: type has   precedence over region). Previously the regions have been tried to match on   any media type (=region had precedence over type), which resulted in picking   the alternative type. This approach gave less suitable media files, especially   for screenshots (type:<code>ss</code>) and screenshot from title screen (type:   <code>sstitle</code>).</li> <li>Fixed: Some corner-case bugs fixed, thanks to all reporters!</li> </ul>"},{"location":"CHANGELOG/#version-3100-2024-02-10","title":"Version 3.10.0 (2024-02-10)","text":"<ul> <li>Feature: Preserve existing <code>&lt;folder/&gt;</code> nodes in gamelist or create skeleton   <code>&lt;folder/&gt;</code> nodes when ROMs are stored in subfolders within a system folder,   see frontend documentation and the gamelist   specification.</li> <li>Feature: Bash Completion on Linux   installations. Use Tab twice for   completion of Skyscraper options. On RetroPie the scriptmodule will handle   the installation. On non-RetroPie-Linux put the file   <code>supplementary/bash-completion/Skyscraper.bash</code> into   <code>$XDG_DATA_HOME/bash-completion/completions/</code> (<code>$XDG_DATA_HOME</code> is   equivalent to <code>$HOME/.local/share</code>). Open a new bash -- et voila!</li> <li>Feature: Customizable installation folder when running <code>make install</code>. See   <code>PREFIX</code> in <code>skyscraper.pro</code>.</li> <li>Feature: Improved macOS support. Unified update script   <code>update_skyscraper.sh</code> (thanks, @jeantichoc) and Docker support via Dev   Container (kudos, @retrobit).</li> <li>Fix: Various minor fixes reported from the community on different setups,   thanks!</li> </ul>"},{"location":"CHANGELOG/#2023-12-01-version-392","title":"2023-12-01 (Version 3.9.2)","text":"<ul> <li>Feature: Import of data in XML format is now more lax (does not rely on   strict identical indention). Read also the hint in the   import scraper module</li> <li>Feature: Configuration option <code>tidyDesc</code> added. See config   documentation</li> <li>Feature: Documentation reviewed and hosted with mkdocs for ease of access at   https://gemba.github.io/skyscraper</li> <li>Update: Added index of configuration parameters to <code>CONFIGINI.md</code>. Find   details at the top of the config   documentation</li> <li>Update: Refactored <code>skyscraper.cpp</code> class. Factorised configuration settings   into <code>settings.cpp</code></li> <li>Update: Various other refactorings to remove duplicated code</li> <li>Fix: Quit Skyscraper when neither <code>-p &lt;PLATFORM&gt;</code> nor <code>--cache help</code> nor   <code>--flags help</code> is provided</li> <li>Fix: Warning remediated when NULL image was applied in composer/gamebox   rendering</li> </ul>"},{"location":"CHANGELOG/#2023-10-22-version-391","title":"2023-10-22 (Version 3.9.1)","text":"<ul> <li>Feature: Mobygames scraper genres limited to two most relevant genre   categories ('Basic Genre' and 'Gameplay')</li> <li>Update: Removed legacy and unused code</li> <li>Update: Code formatting (LLVM)</li> <li>Fix: TGDB scraper retrieves screens from <code>screenshot/</code> and as well   <code>screenshots/</code> URL path as some platforms (supported since configurable   platforms) have their screenshots served from <code>screenshots/</code>.</li> </ul>"},{"location":"CHANGELOG/#2023-10-20-version-390","title":"2023-10-20 (Version 3.9.0)","text":"<ul> <li>Feature: Mobygames scraper respects game id from mobygames.com website via   <code>--query=&lt;gameid&gt;</code>. Handy to hint to the right game information when usual   search returns false positives.</li> <li>Feature: Scrapers which provide an web API (Screenscraper, Mobygames, The   Games DB (tgdb)) have the full platform information shipped with this release   (see <code>&lt;scraper&gt;_platforms.json</code> files). These files are used as reference.</li> <li>Feature: Less 'aliases' maintenance needed in former <code>platforms.json</code>.</li> <li>Update: Streamlined external platform configuration. File <code>platforms.json</code> is   replaced by <code>peas.json</code> (platforms, extensions/formats, aliases and scrapers).   Precise platform determination for Screenscraper, Mobygames and TGDB via   <code>platform_idmap.csv</code> See platforms documentation for   details.</li> <li>Fix: Failed media download when TGDB provides PNG files instead of JPG files   and vice versa.</li> <li>Update: Scriptmodule for this Skyscraper now official part of RetroPie.</li> </ul>"},{"location":"CHANGELOG/#2023-09-23-version-3812309","title":"2023-09-23 (Version 3.8.1.2309)","text":"<ul> <li>Feature: OpenRetro scraper retrieves now also score/rating, if available for a   game. Precedence is to use reviews from external websites first (right   header), then the Score label (above the game details). See this   example</li> <li>Feature: Additionally to the existing import with rating values of 0, 0.5, 1,   1.5 ... 5 (\"Star rating\") it is possible to use 0.1 ... 1.0 scale for rating   in import files (EmulationStation <code>gamelist.xml</code> internal rating range). See   also import formats</li> <li>Fix: Wrong score/rating calculation from Mobygames scraper / Mobygames API.   See also this   gist on how   to update your existing Skyscraper <code>db.xml</code> files.</li> <li>Fix: Use of <code>--query</code> free-text search in OpenRetro scraper fixed. This bug   did not occur when the switch is ommitted and an Amiga WHDLoad file is provided   to Skyscraper.</li> <li>Fix: RetroPie Scriptmodule, removed surplus boolean negation (Thanks   @s1eve-mcdichae1)</li> <li>Fix: RetroPie Scriptmodule, fixed use of legacy option <code>--unattend</code> (Thanks   @windg)</li> <li>Update: RetroPie Scriptmodule, relaxed the remove function of the scriptmodule   to not zap the Skyscraper cache. Plus various cleanups.</li> </ul>"},{"location":"CHANGELOG/#2023-09-15-version-3802309","title":"2023-09-15 (Version 3.8.0.2309)","text":"<ul> <li>updated <code>mamemap.csv</code> from MAME 0.240 (Arcade).dat, fbneo.dat,   mame2003-plus.xml and cleanup of surplus device information</li> <li>update script for make <code>mamemap.csv</code> does no longer rely on mame binary</li> <li>removed discontinued <code>*.php</code> scripts</li> <li><code>platforms.json</code> sorted and formatted</li> <li>updated documentation especially to reflect the supported platforms</li> <li>scriptmodule file for RetroPie aligned to their naming convention</li> <li>Mobygames platform information refactored from hardwired <code>mobygames.cpp</code>.to   <code>mobygames.json</code></li> </ul>"},{"location":"CHANGELOG/#included-pull-requests-from-parent-skyscraper-repos","title":"Included Pull Requests from Parent Skyscraper Repos","text":"<p>These pull requests from other repos have been merged into this fork.</p> <ul> <li>muldjord #362</li> <li>detain #14 (extensions only)</li> <li>detain #16</li> <li>detain #18</li> <li>detain #21</li> <li>detain #22</li> <li>detain #23</li> <li>detain #24</li> </ul>"},{"location":"CLIHELP/","title":"Command Line Options","text":""},{"location":"CLIHELP/#overview","title":"Overview","text":"<p>Look below to find a thorough description of all command line options available when using Skyscraper. These options should be used with the <code>Skyscraper</code> command.</p> <p>Also consider that almost all of these options are set at a useful default (and can therefore be left out) and should only be used / changed if your use case requires it.</p> <p>Most of the options can also be set in the <code>/home/&lt;USER&gt;/.skyscraper/config.ini</code> file thus removing the need to type them on command line all the time. Check the configuration documentation for more info on this. The command line options control basic and advanced features. To fully harness the capabilities of Skyscraper you may also want to explore the additional expert options available when using a configuration file.</p>"},{"location":"CLIHELP/#programmable-completion","title":"Programmable Completion","text":"<p>From version 3.9.3 onwards Skyscraper provides Bash Tab completion (aka programmable completion). </p> <p>On RetroPie the scriptmodule will handle the installation. For the curious: It lands in <code>/etc/bash_completion.d/</code>.</p> <p>On non RaspiOS-based RetroPie-Installments put the file from <code>supplementary/bash-completion/Skyscraper.bash</code> to <code>$XDG_DATA_HOME/bash-completion/completions/</code> (respective to <code>$HOME/.local/share/bash-completion/completions/</code>). </p> <p>In either case: Open a new bash and press Tab key twice to see it in action.</p>"},{"location":"CLIHELP/#short-options","title":"Short Options","text":"<p>The most prevalent short options you will use are most likely <code>-s</code> and <code>-p</code>. But you will information about the other options and flags here too.</p>"},{"location":"CLIHELP/#-a-filename","title":"-a &lt;FILENAME&gt;","text":"<p>Sets a non-default XML file to use when setting up the artwork compositing. By default Skyscraper uses the file <code>/home/&lt;USER&gt;/.skyscraper/artwork.xml</code>. If you provide a relative filepath it will be expanded relative to the current working directory. Consider setting this in <code>config.ini</code> instead. Read more about the artwork.xml format and customization options.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes -a \"/path/to/artwork.xml\"\n</code></pre>"},{"location":"CLIHELP/#-c-filename","title":"-c &lt;FILENAME&gt;","text":"<p>Sets a non-default config file. By default Skyscraper uses the file <code>/home/&lt;USER&gt;/.skyscraper/config.ini</code>. A relative filepath will be prepended with the current working directory. If you provide a config file that does not exist, Skyscraper will print a warning and will continue by using built-in default values for the configuration. </p> <p>Example(s)</p> <pre><code>Skyscraper -p snes -c \"/path/to/config.ini\"\n</code></pre>"},{"location":"CLIHELP/#-d-path","title":"-d &lt;PATH&gt;","text":"<p>Sets a non-default location for the storing and loading of cached game resources. This is what is referred to in the docs as the resource cache. By default this folder is set to <code>/home/&lt;USER&gt;/.skyscraper/cache/&lt;PLATFORM&gt;</code>. Don't change this unless you have a good reason to. The folder pointed to should be a folder with a Skyscraper <code>db.xml</code> file and its required subfolders inside of it (<code>covers</code>, <code>screenshots</code> etc.). You may provide also a relative path, which is resolved to an absolute path as documented in the path handling.</p> <p>Note</p> <p>If you wish to always use a certain location as base folder for your resource cache ((for instance if you want your cache to reside on a USB drive), it is strongly recommended to set this in the <code>config.ini</code> file instead. Read more about the relevant <code>config.ini</code> option.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes -d \"/custom/cache/path\"\n</code></pre>"},{"location":"CLIHELP/#-e-string","title":"-e &lt;STRING&gt;","text":"<p>This sets the extra command (or emulator command) for some frontends.</p> <p>Info</p> <p>This option is applicable only when using the <code>-f attractmode</code> or the <code>-f pegasus</code> option.</p> <p>When using <code>-f attractmode</code> it is required to set the emulator to be used when generating the <code>attractmode</code> game list. On RetroPie the emulator name is mostly the same as the platform. Consider setting this in <code>config.ini</code> instead.</p> <p>The extra command can optionally be used with <code>-f pegasus</code> to set the launch command used by the Pegasus game list. On RetroPie this defaults to the RetroPie launch command which works with RetroPie, if this parameter is unset. Consider setting this in <code>config.ini</code> instead.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes -f attractmode -e snes\n# On RetroPie\nSkyscraper -p snes -f pegasus -e \"/opt/retropie/supplementary/runcommand/runcommand.sh 0 _SYS_ snes\"\n</code></pre>"},{"location":"CLIHELP/#-f-frontend","title":"-f &lt;FRONTEND&gt;","text":"<p>Sets the frontend you wish to export a game list for. By default Skyscraper will export an EmulationStation game list, but other frontends are supported as well. If exporting for example for the <code>attractmode</code> frontend, please also take note of the required <code>-e</code> option that goes along with using the <code>attractmode</code> frontend. Consider setting this in <code>config.ini</code> instead.</p> <p>Check all supported frontends with '--help' and read a more about the details concerning each of them in the frontend documentation.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes -f pegasus\nSkyscraper -p snes -f attractmode -e snes\n</code></pre>"},{"location":"CLIHELP/#-g-path","title":"-g &lt;PATH&gt;","text":"<p>Sets the game list export folder. By default Skyscraper exports the game list to the same directory as the rom input folder. This enables you to change that to a non-default location. You may provide also a relative path, which is resolved to an absolute path as documented in the path handling with this limitation. Consider setting this in <code>config.ini</code> instead.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes -s screenscraper -g \"/your/desired/game list/export/path\"\n</code></pre>"},{"location":"CLIHELP/#-h-help","title":"-h, --help","text":"<p>Outputs the help text for all command line options to the terminal.</p> <p>Example(s)</p> <pre><code>Skyscraper --help\nSkyscraper -h\n</code></pre>"},{"location":"CLIHELP/#-i-path","title":"-i &lt;PATH&gt;","text":"<p>Sets the rom input folder. By default Skyscraper will look for roms in the <code>/home/&lt;user&gt;/RetroPie/roms/&lt;PLATFORM&gt;</code> folder. If your roms are located in a non-default location, you can set the input path using this option. You may provide also a relative path, which is resolved to an absolute path as documented in the path handling. Consider setting this in <code>config.ini</code> instead. </p> <p>Example(s)</p> <pre><code>Skyscraper -p snes -i \"/path/to/your/snes/roms\"\n</code></pre>"},{"location":"CLIHELP/#-l-0-10000","title":"-l &lt;0-10000&gt;","text":"<p>Sets the maximum length of returned game descriptions. This is a convenience option if you feel like game descriptions are too long. By default it is set to 2500 (which is approx. two-thirds of a typewriter page). Consider setting this in <code>config.ini</code> instead.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes -l 500\n</code></pre>"},{"location":"CLIHELP/#-m-0-100","title":"-m &lt;0-100&gt;","text":"<p>Some scraping modules are based on a filename or title based search. This option sets the minimum percentage any returned results need to match with in order for it to be accepted. For instance, the game <code>Wonderboy in Monsterland</code> might return the title <code>Wonder Boy in Monster Land</code> which is clearly a match. But it's not a 100% match. So it needs to be set relatively high, while still ignoring bad matches. By default it is set to 65 which has been tested to be a good middle-ground. Consider setting this in <code>config.ini</code> instead.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes -s thegamesdb -m 50\n</code></pre>"},{"location":"CLIHELP/#-o-path","title":"-o &lt;PATH&gt;","text":"<p>Sets the artwork / media output folder. By default Skyscraper outputs the composited artwork files to the game list export folder + <code>/media</code>. This allows you to change that to a non-default location. Read more about the artwork compositing. You may provide also a relative path, which is resolved to an absolute path as documented in the path handling#by-using-current-working-directory. Consider setting this in <code>config.ini</code> instead.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes -s screenscraper -o \"/path/to/where/you/want/the/artwork/files\"\n</code></pre>"},{"location":"CLIHELP/#-p-platform","title":"-p &lt;PLATFORM&gt;","text":"<p>Sets the platform you wish to scrape. Supported platforms can be seen using the <code>--help</code> option described above.</p> <p>Running the following commands will scrape from all cached resources and generate a game list and composite artwork using the recipe in <code>/home/&lt;USER&gt;/.skyscraper/artwork.xml</code> (check the artwork documentation for more info on this.</p> <p>Before running these commands you need to first gather some data into the cache. Please read the description of <code>-s &lt;MODULE&gt;</code> below.</p> <p>Example(s)</p> <pre><code>Skyscraper -p amiga\nSkyscraper -p snes\n</code></pre>"},{"location":"CLIHELP/#-s-module","title":"-s &lt;MODULE&gt;","text":"<p>Sets which scraping module you wish to gather data from. All data scraped from any of the modules will be cached in the resource cache and can then later be used to generate a game list for your frontend. Read more about this in the <code>-p &lt;PLATFORM&gt;</code> description above.</p> <p>To generate a game list from the resource cache, just leave out the <code>-s</code> option entirely.</p> <p>Example(s)</p> <pre><code>Skyscraper -p amiga -s openretro\nSkyscraper -p snes -s screenscraper\nSkyscraper -p amiga -s esgamelist\nSkyscraper -p snes -s import\n</code></pre> <p>Read more about each scraping module.</p>"},{"location":"CLIHELP/#-t-1-8","title":"-t &lt;1-8&gt;","text":"<p>Sets the desired number of parallel threads to be run when scraping. By default it is set to 4.</p> <p>Note</p> <p>Some modules have maximum allowed threads. If you set this higher than the allowed value, it will be auto-adjusted.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes -s thegamesdb -t 5\n</code></pre>"},{"location":"CLIHELP/#-u-key-or-useridpassword","title":"-u &lt;KEY or USERID:PASSWORD&gt;","text":"<p>Some scraping modules require a user key or a user id + password to work. Check the scraping module overview to see the specific requirements for each module. Consider setting this in <code>config.ini</code> instead.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes -s screenscraper -u &lt;userid:password&gt;\n</code></pre>"},{"location":"CLIHELP/#long-options","title":"Long Options","text":""},{"location":"CLIHELP/#-addext-extension","title":"--addext &lt;EXTENSION&gt;","text":"<p>If you have a rom that Skyscraper doesn't even try to gather data for, it might be because it has a file extension that isn't currently supported. This option allows you to temporarily add support for any file extension. If you feel like you are using a file extension that ought to be supported by default, please report it so it can be added in a later version of Skyscraper. Consider setting this in <code>config.ini</code> instead.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes -s thegamesdb --addext '*.ext'\nSkyscraper -p snes -s thegamesdb --addext '*.ext1 *.ext2'\n# or even\nSkyscraper -p snes -s thegamesdb --addext '.ext1 ext2'\n</code></pre>"},{"location":"CLIHELP/#-cache","title":"--cache  <p>This is the cache master option. It contains several subcommands that allows you to manipulate the cached data for the selected platform.</p>  <p>Tip</p> <p>For any of these commands you can set a non-default resource cache folder with the <code>-d</code> option. The folder pointed to should be a folder with a Skyscraper <code>db.xml</code> file and its required subfolders inside of it (<code>covers</code>, <code>screenshots</code> etc.).</p>  <p>Read more about the resource cache at the cache documentation.</p>","text":""},{"location":"CLIHELP/#-cache-help","title":"--cache help","text":"<p>Outputs a description of all available <code>--cache</code> functions.</p>"},{"location":"CLIHELP/#-cache-editnewtype","title":"--cache edit[:new=&lt;TYPE&gt;]","text":"<p>Allows editing of any cached resources connected to your roms. The editing mode will go through each of the files in the queue one by one, allowing you to add and remove resources as needed. Any resource you add manually will be prioritized above all others.</p> <p>You can provide one or more filenames to the end of the command line or use the <code>--includefrom</code> option to edit the resources for just those files. You can use the <code>--startat</code> and <code>--endat</code> options to edit a span of roms. If none of those options are used, it will edit all of the roms in the input folder one by one.</p> <p>For efficiency, when adding a lot of resources of the same type, you can also add the optional <code>new=&lt;TYPE&gt;</code> which will make it very easy to batch insert resources of the defined type to all the files you are editing. <code>&lt;TYPE&gt;</code> can be any of the known textual resources: <code>title</code>, <code>platform</code>, <code>releasedate</code>, <code>developer</code>, <code>publisher</code>, <code>players</code>, <code>ages</code>, <code>genres</code>, <code>rating</code>, <code>description</code>.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes --cache edit &lt;FILENAME 1&gt; &lt;FILENAME 2&gt;\nSkyscraper -p snes --cache edit --startat &lt;FILENAME&gt; --endat &lt;FILENAME&gt;\nSkyscraper -p snes --cache edit:new=developer --startat &lt;FILENAME&gt; --endat &lt;FILENAME&gt;\nSkyscraper -p snes --cache edit\nSkyscraper -p snes --cache edit --includefrom \"/home/pi/.skyscraper/reports/report-snes-missing_developer-20190708.txt\"\nSkyscraper -p snes --cache edit:new=ages --includefrom \"/home/pi/.skyscraper/reports/report-snes-missing_ages-20190708.txt\"\n</code></pre>"},{"location":"CLIHELP/#-cache-mergepath","title":"--cache merge:&lt;PATH&gt;","text":"<p>This option allows you to merge two resource caches together. It will merge the cache located at the <code>&lt;PATH&gt;</code> location into the default cache for the chosen platform. The path specified must be a path containing the <code>db.xml</code> file. You can also set a non-default destination to merge to with the <code>-d</code> option.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes --cache merge:\"path to/source/cache/snes\"\nSkyscraper -p snes --cache merge:\"path to/source/cache/snes\" -d \"/path to/nondefault/destination/cache/snes\"\n</code></pre>"},{"location":"CLIHELP/#-cache-purgekeywordmodule-andor-type","title":"--cache purge:&lt;KEYWORD|MODULE and/or TYPE&gt;","text":"<p>This is a powerful option that allows you to purge the requested resources from the resource cache connected to the selected platform.</p> <p>You can purge all resources from the cache for the chosen platform using the keyword <code>all</code>.</p> <p>If no platform is specified, the <code>purge:all</code> operation will apply to all existing platforms stored in the cache. In this scenario, any platform-specific configurations defined in the config.ini file will be disregarded.</p> <p>You can purge specific resources from a certain module with <code>m=&lt;MODULE&gt;</code> or of a certain type with <code>t=&lt;TYPE&gt;</code> or a combination of the two separated by a <code>,</code>.</p> <p>Supported modules can be seen under <code>-s</code> when using the <code>--help</code> option. Supported types are: <code>title</code>, <code>platform</code>, <code>description</code>, <code>publisher</code>, <code>developer</code>, <code>ages</code>, <code>tags</code>, <code>rating</code>, <code>releasedate</code>, <code>cover</code>, <code>screenshot</code>, <code>wheel</code>, <code>marquee</code>, <code>video</code>.</p> <p>Possible dangerous command</p> <p>Purging anything from the cache cannot be undone, so please consider making a backup.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes --cache purge:all\nSkyscraper -p snes --cache purge:m=thegamesdb\nSkyscraper -p snes --cache purge:t=cover\nSkyscraper -p snes --cache purge:m=thegamesdb,t=cover\nSkyscraper --cache purge:all\n</code></pre>"},{"location":"CLIHELP/#-cache-refresh","title":"--cache refresh","text":"<p>Same as --refresh.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes -s screenscraper --cache refresh\n</code></pre>"},{"location":"CLIHELP/#-cache-reportmissingall-textual-artwork-media-or-resource1resource2","title":"--cache report:missing=&lt;all, textual, artwork, media or RESOURCE1,RESOURCE2,...&gt;","text":"<p>Will create report(s) containing all filenames of games missing the selected resource type(s). File(s) will be exported to <code>/home/&lt;USER&gt;/.skyscraper/reports/report-&lt;PLATFORM&gt;-missing_&lt;RESOURCE&gt;-yyyymmdd.txt</code></p> <p>You can use any of the following:</p> <ul> <li><code>all</code>: Creates reports for all resource types</li> <li><code>textual</code>: Creates reports for all textual resource types</li> <li><code>artwork</code>: Creates reports for all artwork related resource types excluding 'video'</li> <li><code>media</code>: Creates reports for all media resource types including 'video'</li> <li><code>type1</code>,<code>type2</code>,<code>type3</code>,...:</li> </ul> <p>Supported resource types are: <code>title</code>, <code>platform</code>, <code>description</code>, <code>publisher</code>, <code>developer</code>, <code>ages</code>, <code>tags</code>, <code>rating</code>, <code>releasedate</code>, <code>cover</code>, <code>screenshot</code>, <code>wheel</code>, <code>marquee</code>, <code>video</code>.</p> <p>If no platform is specified, reports will be generated for all existing platforms stored in the cache. In this scenario, any platform-specific configurations defined in the config.ini file will be disregarded.</p> <p>Tip</p> <p>The reports can be fed back into Skyscraper using the <code>--includefrom &lt;REPORTFILE&gt;</code> option, which tells Skyscraper to only work on the files contained in the report. This is useful in combination with, for instance, the <code>--cache edit</code> option or the <code>--cache refresh</code>/<code>--refresh</code> (they are the same) option(s).</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes --cache report:missing=textual\nSkyscraper -p snes --cache report:missing=artwork\nSkyscraper -p snes --cache report:missing=publisher,screenshot\nSkyscraper --cache report:missing=video   # Generates a report for all platforms with missing video cache data\n</code></pre>"},{"location":"CLIHELP/#-cache-show","title":"--cache show","text":"<p>Shows the cache stats for the chosen platform. It will list how many resources of each type you currently have cached for each scraping module.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes --cache show\n</code></pre>"},{"location":"CLIHELP/#-cache-vacuum","title":"--cache vacuum","text":"<p>You can purge all resources that don't have any connection to your current romset for the selected platform by using the <code>vacuum</code> command. This is extremely useful if you've removed a bunch of roms from your collection and you wish to purge any cached data you don't need anymore.</p> <p>If no platform is specified, the vacuum operation will apply to all existing platforms stored in the cache. In this scenario, any platform-specific configurations defined in the config.ini file will be disregarded.</p> <p>Possible dangerous command</p> <p>Vacuuming the cache cannot be undone, so please consider making a backup.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes --cache vacuum  # one platform\nSkyscraper --cache vacuum          # all platforms\n</code></pre>"},{"location":"CLIHELP/#-cache-validate","title":"--cache validate","text":"<p>This will test the integrity of the resource cache connected to the chosen platform. It will remove / clean out any stray files that aren't connected to an entry in the cache and vice versa. It's not really necessary to use this option unless you have manually deleted any of the cached files or entries in the <code>db.xml</code> file connected to the platform.</p> <p>If no platform is specified, the validate operation will apply to all existing platforms stored in the cache. In this scenario, any platform-specific configurations defined in the config.ini file will be disregarded.</p> <p>Note</p> <p>This option doesn't clean up your game list media folders. You will need to do that yourself since Skyscraper has no idea what files you might keep in those folders. This option only relates to the resource cache database and related files.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes --cache validate  # one platform\nSkyscraper --cache validate          # all platforms\n</code></pre>"},{"location":"CLIHELP/#-endat-filename","title":"--endat &lt;FILENAME&gt; <p>If you wish to work on a subset of your roms you can use this option to set the rom to end at given the lexically ordered games in a folder. Use it in conjunction with the <code>--startat</code> option described above to further narrow the subset of files. You may provide also a relative path, which is resolved to an absolute path as documented in the path handling. </p>  <p>Note</p> <p>Enabling this option automatically sets the <code>--refresh</code> option and enables the <code>nosubdirs</code> flag.</p>   <p>Tip</p> <p>Instead of using this option, if you just want to gather resources for one or two roms, you can provide the filename(s) directly on the command like so: <code>$ Skyscraper -p snes -s thegamesdb \"/abs/or/relative/path/to/rom.zip\"</code>. For a more specific control on which games to scrape, you may use the <code>--includefrom</code> option.</p>  <p>Example(s)</p> <pre><code>Skyscraper -p snes --cache edit --endat \"rom name.zip\"\nSkyscraper -p snes -s thegamesdb --endat \"relative/path/to/rom name.zip\"\n</code></pre>","text":""},{"location":"CLIHELP/#-excludefrom-filename","title":"--excludefrom &lt;FILENAME&gt; <p>Tells Skyscraper to exclude the files listed in FILENAME: One filename per line as absolute path, eg. <code>/home/pi/RetroPie/roms/snes/subdir/somefile.zip</code>. You may provide also a relative path, which is resolved to an absolute path as documented in the path handling.</p> <p>This file can be generated with the <code>--cache report:missing</code> option or made manually.</p>  <p>Tip</p> <p>You might also want to check out the <code>excludepattern</code> option.</p>  <p>Example(s)</p> <pre><code>Skyscraper -p snes -s screenscraper --excludefrom \"/home/pi/.skyscraper/excludes.txt\"\n</code></pre>","text":""},{"location":"CLIHELP/#-excludepattern-pattern-1-pattern-2","title":"--excludepattern &lt;PATTERN 1, PATTERN 2&gt; <p>Per platform Skyscraper have default file extensions that it will accept. This option allows you to exclude certain files within that scope. The pattern is a simple asterisk type pattern. You can add several patterns by separating them with ','. In cases where you need to match for a comma you need to escape it as '\\,' (see last example).</p>  <p>Info</p> <p>Remember to double-quote the pattern as seen in the examples to avoid odd behaviour.</p>   <p>Tip</p> <ol> <li>You might also want to check out the file extension options.</li> <li>You might also want to check out the <code>--excludefrom</code> option.</li> <li>If you create a file named <code>.skyscraperignore</code> within any subfolder of the input dir, all files from that directory will be ignored by Skyscraper.</li> </ol>  <p>Example(s)</p> <pre><code>Skyscraper -p snes -s screenscraper --excludepattern \"*[BIOS]*\"\nSkyscraper -p amiga --excludepattern \"AGA*\"\nSkyscraper -p amiga --excludepattern \"*AGA*,Super*\"\nSkyscraper -p amiga --excludepattern \"*AGA*,Super*,*\\, The\"\n</code></pre>","text":""},{"location":"CLIHELP/#-flags","title":"--flags  <p>From Skyscraper 3.5.0 all command-line options that change the scraping behaviour have been combined into this option. Check below for a complete list of all the available flags and what they do. You can also get this list by using <code>--flags help</code>.</p> <p>To enable multiple flags separate them by commas (eg. <code>--flags FLAG1,FLAG2</code>) or apply <code>--flags</code> option multiple times.</p>","text":""},{"location":"CLIHELP/#forcefilename","title":"forcefilename","text":"<p>This flag forces Skyscraper to use the filename (excluding extension) instead of the cached titles when generating a game list. Consider setting this in <code>config.ini</code> instead.</p> <p>Note</p> <p>If <code>nameTemplate</code> is set in <code>config.ini</code> this flag is ignored.</p>"},{"location":"CLIHELP/#interactive","title":"interactive","text":"<p>When gathering data from any of the scraping modules many potential entries will be returned. Normally Skyscraper chooses the best entry for you. But should you wish to choose the best entry yourself, you can enable this flag. Skyscraper will then list the returned entries and let you choose which one is the best one.</p>"},{"location":"CLIHELP/#manuals","title":"manuals","text":"<p>By default Skyscraper doesn't scrape and cache game manuals resources because not all scraping sites provide this data and also only some frontends support PDF display of these game manuals. You can enable it by using this flag. Consider setting this in <code>config.ini</code> instead.</p>"},{"location":"CLIHELP/#nobrackets","title":"nobrackets","text":"<p>Use this flag to disable any bracket notes when generating the game list. It will disable notes such as <code>(Europe)</code> and <code>[AGA]</code> completely. This flag is only relevant when generating the game list. It makes no difference when gathering data into the resource cache. Consider setting this in <code>config.ini</code> instead.</p> <p>Note</p> <p>If <code>nameTemplate</code> is set in <code>config.ini</code> this flag is ignored.</p>"},{"location":"CLIHELP/#nocovers","title":"nocovers","text":"<p>Disables the caching of the resource type <code>cover</code> when scraping with any module. If you never use covers in your artwork configuration, this flag can save you some space. Consider setting this in <code>config.ini</code> instead.</p>"},{"location":"CLIHELP/#nocropblack","title":"nocropblack","text":"<p>Disables cropping away the black borders around screenshot resources when compositing the final frontend artwork.</p>"},{"location":"CLIHELP/#nohints","title":"nohints","text":"<p>Disables the \"Did you know\" hints when running Skyscraper. Consider setting this in <code>config.ini</code> instead.</p>"},{"location":"CLIHELP/#nomarquees","title":"nomarquees","text":"<p>Disables the caching of the resource type <code>marquee</code> when scraping with any module. If you never use marquees in your artwork configuration, this flag can save you some space. Consider setting this in <code>config.ini</code> instead.</p>"},{"location":"CLIHELP/#noresize","title":"noresize","text":"<p>By default, to save space, Skyscraper resizes large pieces of artwork before adding them to the resource cache. Adding this flag will disable this and save the artwork files exactly as they are retrieved from the scraping module. Consider setting this in <code>config.ini</code> instead.</p> <p>Note</p> <p>This is not related to the artwork compositing that happens when generating a game list. This is only related to how Skyscraper handles artwork when adding it to the resource cache while gathering data from the scraping modules.</p>"},{"location":"CLIHELP/#noscreenshots","title":"noscreenshots","text":"<p>Disables the caching of the resource type <code>screenshot</code> when scraping with any module. If you never use screenshots in your artwork configuration, this flag can save you some space. Consider setting this in <code>config.ini</code> instead.</p>"},{"location":"CLIHELP/#nosubdirs","title":"nosubdirs","text":"<p>By default Skyscraper will include roms located in subfolders. By adding this flag Skyscraper will only scrape the roms located directly in the input folder. See <code>-i &lt;PATH&gt;</code> above to read more about the rom input folder. Consider setting this in <code>config.ini</code> instead.</p>"},{"location":"CLIHELP/#notextures","title":"notextures","text":"<p>Disables the caching of the resource type <code>texture</code> when scraping with any module. If you never use textures (disc/cartridge) in your artwork configuration, this flag can save you some space. Consider setting this in <code>config.ini</code> instead.</p>"},{"location":"CLIHELP/#notidydesc","title":"notidydesc","text":"<p>Disables clean up some misformatting in scraped description:</p> <ol> <li>Heading and trailing spaces are stripped</li> <li>Multiple spaces between sentences are reduced to one space</li> <li>Bulletpoint beginning with * or \u25cf are replaced with a dash</li> <li>Stylized ellipsis (\u2026 Unicode:<code>&amp;#8230;</code>) is replace with three dots</li> <li>Multiple exclamation marks are reduced to one, unless for games titles are explicitly typed like that, like 'Super Punch-Out!!'.</li> </ol> <p>Consider setting this in <code>config.ini</code> instead.</p>"},{"location":"CLIHELP/#nowheels","title":"nowheels","text":"<p>Disables the caching of the resource type <code>wheel</code> when scraping with any module. If you never use wheels in your artwork configuration, this flag can save you some space. Consider setting this in <code>config.ini</code> instead.</p>"},{"location":"CLIHELP/#onlymissing","title":"onlymissing","text":"<p>This flag tells Skyscraper to skip all files which already have any piece of data from any source in the cache. This is useful if you just scraped almost all files from a platform succesfully with one source, and then want to only scrape the remaining games with a different source to fill in the holes. Normally Skyscraper will scrape all files again with the second source.</p>"},{"location":"CLIHELP/#pretend","title":"pretend","text":"<p>This flag is only relevant when generating a game list (by leaving out the <code>-s &lt;MODULE&gt;</code> option). It disables the game list generator and artwork compositor and only outputs the results of the potential game list generation to the terminal. It can be very useful to check exactly what and how the data will be combined from the resource cache.</p>"},{"location":"CLIHELP/#relative","title":"relative","text":"<p>Only relevant when generating an EmulationStation, a Retrobat or a Pegasus game list, with the <code>-f</code> option. Emulationstation is the default frontend when the <code>-f</code> option is left out. The <code>relative</code> flag forces the rom and any media paths (if they are the same as the input folder) inside the game list to be relative to the rom input folder. Consider setting this in <code>config.ini</code> instead.</p>"},{"location":"CLIHELP/#skipexistingcovers","title":"skipexistingcovers","text":"<p>When generating gamelists, skip processing covers that already exist in the media output folder.</p>"},{"location":"CLIHELP/#skipexistingmanuals","title":"skipexistingmanuals","text":"<p>When generating gamelists, skip copying manuals that already exist in the media output folder.</p>"},{"location":"CLIHELP/#skipexistingmarquees","title":"skipexistingmarquees","text":"<p>When generating gamelists, skip processing marquees that already exist in the media output folder.</p>"},{"location":"CLIHELP/#skipexistingscreenshots","title":"skipexistingscreenshots","text":"<p>When generating gamelists, skip processing screenshots that already exist in the media output folder.</p>"},{"location":"CLIHELP/#skipexistingvideos","title":"skipexistingvideos","text":"<p>When generating gamelists, skip copying videos that already exist in the media output folder.</p>"},{"location":"CLIHELP/#skipexistingwheels","title":"skipexistingwheels","text":"<p>When generating gamelists, skip processing wheels that already exist in the media output folder.</p>"},{"location":"CLIHELP/#skipped","title":"skipped","text":"<p>If a rom has no resources attached to it in the cache, it will be left out when generating a game list file. It will still show up in the frontend (at least it does for EmulationStation) but it won't exist in the game list file. You can safely leave out this flag unless you need the empty entries for some reason. Consider setting this in <code>config.ini</code> instead.</p>"},{"location":"CLIHELP/#symlink","title":"symlink","text":"<p>Enabling this flag is currently only relevant while also using the <code>videos</code> flag. It basically means that Skyscraper will create a link to the cached videos instead of copying them when generating the game list media files. This will save a lot of space, but has the caveat that if you somehow remove the videos from the cache, the links will be broken and the videos then won't show anymore. Consider setting this in <code>config.ini</code> instead.</p>"},{"location":"CLIHELP/#theinfront","title":"theinfront","text":"<p>Game titles are returned from the scraping sources sometimes as 'The Game' and other times as 'Game, The'. Enabling this flag will force Skyscraper to always try and move 'The' to the front of the titles. If it is not enabled, Skyscraper will always try and move it to the end of the title, regardless of how it was originally returned by the scraping sources.</p> <p>Note</p> <p>When generating gamelists Skyscraper will still sort the games as if the game titles didn't have 'The' at the beginning.</p>"},{"location":"CLIHELP/#unattend","title":"unattend","text":"<p>Before a game list creation Skyscraper will check if it already exists and ask if you want to overwrite it, when neither <code>unattend</code> nor <code>unattendskip</code> are set. By setting this flag or <code>unattendskip</code> Skyscraper will overwrite an existing game list without confirmation question. This is useful when scripting Skyscraper to avoid the need for user input. Additionally, if this flag or <code>unattendskip</code> is set on the cache operations <code>purge:all</code> and <code>vacuum</code> you will not get a confirmation question. Consider setting this in <code>config.ini</code> instead.</p>"},{"location":"CLIHELP/#unattendskip","title":"unattendskip","text":"<p>Before a game list creation Skyscraper will ask if you want to skip existing game entries (i.e. not recreate from cache) in an existing game list, when neither <code>unattend</code> nor <code>unattendskip</code> are set. By setting this flag and not having set <code>unattend</code> Skyscraper will skip existing entries. This is useful when scripting Skyscraper to avoid the need for user input. This flag has no effect (i.e. an existing game list entry will be always recreated) when either</p> <ul> <li><code>unattend</code> is set or</li> <li>you use the <code>--query</code> parameter or</li> <li>the frontend generator does not support preserving a complete gameentry.</li> </ul> <p>If this flag or <code>unattend</code> is set on the cache operations <code>purge:all</code> and <code>vacuum</code> you will not get a confirmation question. Consider setting this in <code>config.ini</code> instead.</p>"},{"location":"CLIHELP/#unpack","title":"unpack","text":"<p>Some scraping modules use file checksums to identify the game in their databases. If you've compressed your roms to zip or 7z files yourself, this can pose a problem in getting a good result. You can then try to use this flag. Doing so will extract the rom and do the file checksum on the rom itself instead of the compressed file.</p> <p>Info</p> <p>Only use this flag if you are having problems getting the roms identified from the compressed files. It slows down the scraping process significantly and should therefore be avoided if possible.</p>"},{"location":"CLIHELP/#videos","title":"videos","text":"<p>By default Skyscraper doesn't scrape and cache video resources because of the significant disk space required to save them. You can enable videos using this flag. Consider setting this in <code>config.ini</code> instead.</p> <p>Example(s)</p> <pre><code>Skyscraper -p amiga --flags forcefilename,nosubdirs,skipexistingwheels\nSkyscraper -p nes --flags videos,nomarquees\n</code></pre>"},{"location":"CLIHELP/#-gamelistfilename-filename","title":"--gamelistfilename &lt;FILENAME&gt; <p>Overrides the default gamelist filename of the frontend. If you are using a variant of a frontend, this switch may come in handy. Consider setting this in <code>config.ini</code> instead.</p> <p>Example(s)</p> <pre><code>Skyscraper -p megadrive -f pegasus --gamelistfilename metadata.txt   # default for pegasus frontend is metadata.pegasus.txt\n</code></pre>","text":""},{"location":"CLIHELP/#-hint","title":"--hint <p>Displays one of Skyscrapers's 'Did you know?' tips and exits.</p>","text":""},{"location":"CLIHELP/#-includefrom-filename","title":"--includefrom &lt;FILENAME&gt; <p>Tells Skyscraper to exclude the files listed in FILENAME: One filename per line as absolute path, eg. <code>/home/pi/RetroPie/roms/snes/subdir/somefile.zip</code>. You may provide also a relative path, which is resolved to an absolute path as documented in the path handling.</p> <p>The option is the equivalent to adding a bunch of filenames to work on directly on the commandline. It reads one line at a time from <code>&lt;FILENAME&gt;</code> and adds them to the queue of files to work on. This is very useful in combination with the <code>--cache edit</code> option or if you want to refresh data for just those files using <code>-s &lt;SCRAPING MODULE&gt;</code>.</p> <p>This file can be generated with the '--cache report:missing' option or made manually.</p>  <p>Tip</p> <p>You might also want to check out the <code>includepattern</code> option.</p>  <p>Example(s)</p> <pre><code>Skyscraper -p snes -s screenscraper --includefrom \"/home/pi/.skyscraper/includes.txt\"\n# After running --cache report:missing\nSkyscraper -p snes --cache edit --includefrom \"/home/pi/.skyscraper/reports/report-snes-missing_developer-20190708.txt\"\nSkyscraper -p snes -s screenscraper --includefrom \"/home/pi/.skyscraper/reports/report-snes-missing_developer-20190708.txt\"\n</code></pre>","text":""},{"location":"CLIHELP/#-includepattern-pattern-1pattern-2","title":"--includepattern &lt;PATTERN 1,PATTERN 2&gt; <p>Per platform Skyscraper have default file extensions that it will accept. This option allows you to only include certain files within that scope. The pattern is a simple asterisk type pattern. You can add several patterns by separating them with ','. In cases where you need to match for a comma you need to escape it as '\\,' (see last example).</p>  <p>Info</p> <p>Remember to double-quote the pattern as seen in the examples to avoid odd behaviour.</p>   <p>Tip</p> <p>You might also want to check out the file extension options.</p>  <p>Example(s)</p> <pre><code>Skyscraper -p snes -s screenscraper --includepattern \"Super*\"\nSkyscraper -p amiga --includepattern \"*AGA*\"\nSkyscraper -p amiga --includepattern \"*AGA*,Super*\"\nSkyscraper -p amiga --includepattern \"*AGA*,Super*,*\\, The\"\n</code></pre>","text":""},{"location":"CLIHELP/#-lang-code","title":"--lang &lt;CODE&gt; <p>Adds the specified language to the top of the existing default internal language priority list. Read more about it in the languages documentation. Only one language is supported with this configuration. For a permanent setup you should consider setting this in <code>config.ini</code> instead.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes -s screenscraper --lang es\n</code></pre>","text":""},{"location":"CLIHELP/#-maxfails-1-200","title":"--maxfails &lt;1-200&gt; <p>Not all scraping modules support all platforms. This means that you can potentially start a scraping run with a module and a platform that is incompatible. This will hammer the servers for potentially hundreds of roms but provide 0 results for any of them. To avoid this Skyscraper has a builtin limit for initially allowed failed rom lookups. If this is reached it will quit. Setting this option allows you to set this limit yourself, but not above a maximum of 200. The default limit is 42. Don't change this unless you have a very good reason to do so.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes -s thegamesdb --maxfails 75\n</code></pre>","text":""},{"location":"CLIHELP/#-query-string","title":"--query &lt;STRING&gt; <p>For most modules a search query is sent to the scraping module in an URL format. This means that a filename such as \"Rick Dangerous.lha\" becomes \"rick+dangerous\". The '+' here means a space. You could probably also use the URL encoded space \"rick%20dangerous\" but my tests show that most modules expect spaces as '+'. And it is the \"rick+dangerous\" part that you, as the user, can pass as the query, like so:</p> <pre><code>$ Skyscraper -p &lt;PLATFORM&gt; -s &lt;MODULE&gt; --query \"rick+dangerous\" &lt;FILENAME&gt;\n</code></pre> <p>Remember to also add exactly one filename that you wish to use the override with. Otherwise the query will be ignored.</p> <p>If you apply the query option with a game filename, the flag <code>--refresh</code> (see below) is automatically set.</p> <p>Not all of the scraping modules are search name based. For instance, the <code>screenscraper</code> module can use a variety of different search methods. So for screenscraper you also have the option of overriding the checksums it uses to search for a game. This is especially convenient in cases where a filename exists multiple times in their database and your own local file doesn't match with any of the connected checksums (maybe you've compressed the rom yourself). In this case you can look up one of the working checksums on the Screenscraper website (screenscraper.fr) and override the checksum.</p> <p>You can use any combination of <code>crc=&lt;CHECKSUM&gt;</code>, <code>md5=&lt;CHECKSUM&gt;</code>, <code>sha1=&lt;CHECKSUM&gt;</code> and <code>romnom=&lt;FILENAME&gt;</code> (without the <code>&lt;</code> and <code>&gt;</code>! Also \"romnom\" is \"rom name\" in French - Screenscraper is operated from France). From Skyscraper 3.17 onwards you can also omit the <code>romnom=</code> search keyword when using the title search. Most times you only need one of these, but you can combine them by separating them with a <code>&amp;</code>.</p> <p>The <code>mobygames</code> scraper supports the romname directly in the <code>--query</code> parameter, but also accepts the game id from the mobygames site which you can find when manually looking up a game in the \"_Identifiers\"_ section of the game details page (lower third of page).</p> <p>The <code>zxinfo</code> (formerly <code>worldofspectrum</code>) scraper supports the romname directly in the <code>--query</code> parameter, but also accepts the game id from the ZXInfo site in URL of the detail page of a game. E.g., <code>https://zxinfo.dk/details/0001303</code>, has the id <code>1303</code> in the URL path, valid queries with id are either <code>--query=\"id=1303\"</code> or <code>--query=\"01303\"</code>. Note the heading <code>0</code> in the latter case, if it is missing Skyscraper will search with a game title containing 1303. Also you can search by MD5 or SHA512 (sic!) hash of your local ZX-Spectrum game file. To do so, provide either the 32 character hexstring of <code>md5sum &lt;gamefile&gt;</code> hash or the 128 character hexstring of <code>sha512sum &lt;gamefile&gt;</code>.</p> <p>For other scraping module's query capabilities see the overview page.</p>  <p>Tip</p> <p>The <code>--query</code> option is an advanced option, but it's very useful to get results for those last difficult roms missing in your gamelist. You may also want to add <code>--flags interactive</code> to overrule the automatic matching of gametitle and gamefile of Skyscraper.</p>  <p>Example(s)</p> <pre><code>$ Skyscraper -p snes -s thegamesdb --query \"rick+dangerous\" /absolute/or/relative/path/to/rom.zip\n$ Skyscraper -p snes -s screenscraper --query \"md5=&lt;CHECKSUM&gt;\" /absolute/or/relative/path/to/rom.zip\n$ Skyscraper -p snes -s screenscraper --query \"&lt;game title&gt; or &lt;romfile&gt;\" /absolute/or/relative/path/to/rom.zip\n$ Skyscraper -p snes -s screenscraper --query \"sha1=&lt;CHECKSUM&gt;&amp;romnom=yaddayadda\" /absolute/or/relative/path/to/rom.zip\n# 14576 is the MobyGames Game Id\n$ Skyscraper -p ports -s mobygames --query \"14576\" \"~/RetroPie/roms/ports/Head over Heels.sh\"\n$ Skyscraper -p zxspectrum -s gamebase --query \"*Deathc*\" --verbosity 3 \"~/RetroPie/roms/zxspectrum/game.tzx\n# 1303 is the ZXInfo / World of Spectrum Game Id\n$ Skyscraper -p zxspectrum -s zxinfo --query \"01303\" \"~/RetroPie/roms/zxspectrum/Deathchase.zip\n# 4443397... is the MD5 hashsum of Deathchase.zip for example\n$ Skyscraper -p zxspectrum -s zxinfo --query \"4443397ad973cc066e06d9854cc69035\" \"~/RetroPie/roms/zxspectrum/Deathchase.zip\n</code></pre>","text":""},{"location":"CLIHELP/#-refresh","title":"--refresh <p>Skyscraper has a resource cache which works just like the browser cache in Firefox. If you scrape and gather resources for a platform with the same scraping module twice, it will grab the data from the cache instead of hammering the online servers again. This has the advantage in the case where you scrape a rom set twice, only the roms that weren't recognized the first time around will be fetched from the online servers. Everything else will be loaded from the cache.</p> <p>You can force all data to be refetched from the servers by setting this option, effectively updating the cached data with new data from the source.</p>  <p>Note</p> <p>Only use this option if you know data has changed for several roms at the source. Otherwise you are hammering the servers for no reason.</p>  <p>Example(s)</p> <pre><code>Skyscraper -p snes -s screenscraper --refresh\n</code></pre>","text":""},{"location":"CLIHELP/#-region-code","title":"--region &lt;CODE&gt; <p>Adds the specified region to the top of the existing default internal region priority list. Only one region is supported with this configuration. For a permanent setup you should consider setting this in <code>config.ini</code> instead.</p> <p>Read more about how regions are handled in general in this user manual.</p>  <p>Info</p> <p>Setting this will overwrite any region auto-detected from the file name.</p>  <p>Example(s)</p> <pre><code>Skyscraper -p snes -s screenscraper --region jp\n</code></pre>","text":""},{"location":"CLIHELP/#-startat-filename","title":"--startat &lt;FILENAME&gt; <p>If you wish to work on a subset of your roms you can use this option to set the starting rom file in the lexically sorted games in a folder. Use it in conjunction with the <code>--endat</code> option described below to further narrow the subset of files. You may provide also a relative path, which is resolved to an absolute path as documented in the path handling.</p>  <p>Note</p> <p>Enabling this option automatically sets the <code>--refresh</code> option and enables the <code>nosubdirs</code> flag.</p>   <p>Tip</p> <p>Instead of using this option, if you just want to gather resources for one ROM at a time, you can provide the filename(s) directly on the command like so: <code>Skyscraper -p snes -s thegamesdb \"/abs/or/relative/path/to/rom.zip\"</code>. For a more specific control on which games to scrape, you may use the <code>--includefrom</code> option.</p>  <p>Example(s)</p> <pre><code>Skyscraper -p snes --cache edit --startat \"rom name.zip\"\nSkyscraper -p snes -s thegamesdb --startat \"relative/path/to/rom name.zip\"\n</code></pre>","text":""},{"location":"CLIHELP/#-verbosity-0-3","title":"--verbosity &lt;0-3&gt; <p>Sets how verbose Skyscraper should be when running. Default level is 0. The higher the value, the more info Skyscraper will output to the terminal while running. Maximum value is 3. Consider setting this in <code>config.ini</code> instead.</p> <p>Example(s)</p> <pre><code>Skyscraper -p snes -s screenscraper --verbosity 3\n</code></pre>","text":""},{"location":"CONFIGINI/","title":"The config.ini File","text":""},{"location":"CONFIGINI/#configini-options","title":"config.ini Options","text":"<p>Look below to find a thorough description of all options and sections available in the <code>/home/&lt;USER&gt;/.skyscraper/config.ini</code> configuration file. These options will then be applied whenever running Skyscraper with the <code>Skyscraper</code> command.</p> <p>Almost all of these options are set at a useful default as documented here (and can therefore be left out) and should only be set if your use case requires it.</p> <p>Warning</p> <p>Some users seem to have a habbit of editing the <code>/home/&lt;USER&gt;/skysource/config.ini</code> file. This is not the correct file! Please read the first paragraph. :)</p> <p>Options can be set on four levels; either <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code> or <code>[&lt;SCRAPER&gt;]</code>.</p> <p>Settings in the <code>[main]</code> section will always be set regardless of selected platform, frontend and module.</p> <p><code>&lt;PLATFORM&gt;</code> can be any of the supported platforms (check list with <code>--help</code> under the <code>-p</code> option), in which case the settings will only be applied while scraping that particular platform.</p> <p><code>&lt;FRONTEND&gt;</code> can be any of the supported frontends (check list with <code>--help</code> under the <code>-f</code> option), in which case the settings will only be applied while scraping for that particular frontend.</p> <p><code>&lt;SCRAPER&gt;</code> can be any of the supported scraping modules (check list with <code>--help</code> under the <code>-s</code> option), in which case the settings will only be applied while scraping with that particular scraping module.</p>"},{"location":"CONFIGINI/#order-of-precedence","title":"Order of Precedence","text":"<p>Each section can have overlapping parameters. In case where a certain option exists in several sections they are prioritized as scraping module first, then frontend, then platform and lastly main. Any commandline (CLI) option which relates to an configuration setting in <code>config.ini</code> has highest precedence, regardless of the other four levels respective sections.</p> <p>You can find an example config file at <code>/home/&lt;USER&gt;/.skyscraper/config.ini.example</code>. This file contains all available options. Just copy the file to <code>config.ini</code> and uncomment and edit the ones you wish to use by removing the <code>#</code> or <code>;</code> in front of the variables. Remember to also uncomment the section the option relates to such as <code>[main]</code> or <code>[amiga]</code>.</p> <p>Note</p> <p>You can set a custom configuration file with the <code>-c &lt;FILENAME&gt;</code> command line option. Read more about all available command line options.</p> <p>Example <code>config.ini</code>:</p> <pre><code>[main]\ninputFolder=\"/path/to/your/roms\"\ncacheFolder=\"/path/to/your/desired/db/cache/base/folder\"\ngameListBackup=\"true\"\nvideos=\"true\"\nunattend=\"true\"\nverbosity=\"1\"\nlang=\"ja\"\nregion=\"jp\"\ncacheMarquees=\"false\"\n\n[amiga]\ninputFolder=\"/specific/path/just/for/amiga/roms\"\ncacheFolder=\"/specific/path/just/for/amiga/cache\"\nminMatch=\"50\"\nmaxLength=\"200\"\n\n[pegasus]\nartworkXml=\"artwork-pegasus.xml\"\nmaxLength=\"10000\"\n\n[screenscraper]\nuserCreds=\"USER:PASSWORD\"\n</code></pre>"},{"location":"CONFIGINI/#index-of-options-with-applicable-sections","title":"Index of Options with Applicable Sections","text":"<p>This is an alphabetical index of all configuration options their usage level and their sections they may be applied to.</p> Section \u2192Parameter \u2193 UsageLevel <code>[main]</code> <code>[&lt;PLATFORM&gt;]</code> <code>[&lt;FRONTEND&gt;]</code> <code>[&lt;SCRAPER&gt;]</code> addExtensions Advanced Y Y addFolders Expert Y artworkXml Advanced Y Y Y brackets Basic Y Y Y cacheCovers Basic Y Y Y cacheFolder Basic Y Y cacheMarquees Basic Y Y Y cacheRefresh Basic Y Y cacheResize Basic Y Y Y cacheScreenshots Basic Y Y Y cacheTextures Basic Y Y Y cacheWheels Basic Y Y Y cropBlack Basic Y Y Y emulator Advanced Y Y Y endAt Advanced Y Y excludeFrom Advanced Y Y excludePattern Advanced Y Y Y extensions Expert Y forceFilename Advanced Y Y Y frontend Basic Y gameBaseFile Expert Y gameListBackup Basic Y Y gameListFilename Advanced Y gameListFolder Advanced Y Y Y gameListVariants Advanced Y hints Basic Y ignoreYearInFilename Expert Y Y importFolder Advanced Y Y includeFrom Advanced Y Y includePattern Advanced Y Y Y innerBracketsReplace Expert Y innerParenthesesReplace Expert Y inputFolder Advanced Y Y interactive Basic Y Y Y jpgQuality Advanced Y Y Y keepDiscInfo Expert Y Y lang Basic Y Y langPrios Expert Y Y launch Advanced Y Y Y manuals Basic Y Y maxFails Advanced Y maxLength Basic Y Y Y Y mediaFolder Advanced Y Y Y mediaFolderHidden Basic Y minMatch Basic Y Y Y nameTemplate Advanced Y Y onlyMissing Advanced Y Y Y platform Basic Y pretend Basic Y Y region Basic Y Y regionPrios Expert Y Y relativePaths Basic Y Y scummIni Advanced Y skipped Advanced Y Y Y spaceCheck Basic Y startAt Advanced Y Y subdirs Basic Y Y symlink Basic Y Y Y theInFront Basic Y Y Y threads Basic Y Y Y tidyDesc Basic Y Y Y unattend Basic Y Y Y Y unattendSkip Basic Y Y Y Y unpack Advanced Y Y userCreds Basic Y verbosity Basic Y Y Y videoConvertCommand Expert Y Y videoConvertExtension Advanced Y Y videoPreferNormalized Advanced Y videos Basic Y Y Y Y videoSizeLimit Basic Y Y Y"},{"location":"CONFIGINI/#inputfolder","title":"inputFolder","text":"<p>Sets the rom input folder. By default Skyscraper will look for roms in the <code>/home/&lt;USER&gt;/RetroPie/roms/&lt;PLATFORM&gt;</code> folder. If your roms are located in a non-default location, you can set the input path using this option.</p> <p>Note</p> <p>If this is set in the <code>[main]</code> section it will automatically add <code>/&lt;PLATFORM&gt;</code> to the end of the path. If you want better control consider adding it to a <code>[&lt;PLATFORM&gt;]</code> section instead where it will be used as is.</p> <p>Default value: <code>/home/&lt;USER&gt;/RetroPie/roms/&lt;PLATFORM&gt;</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code></p>"},{"location":"CONFIGINI/#gamelistfolder","title":"gameListFolder","text":"<p>Sets the game list export folder. By default Skyscraper exports the game list to the same directory as the rom input folder. This enables you to change that to a non-default location.</p> <p>Note</p> <p>If this is set in the <code>[main]</code> or <code>[&lt;FRONTEND&gt;]</code> section it will automatically add <code>/&lt;PLATFORM&gt;</code> to the end of the path. If you want better control consider adding it to a <code>[&lt;PLATFORM&gt;]</code> section instead where it will be used as is.</p> <p>Default value: <code>/home/&lt;USER&gt;/RetroPie/roms/&lt;PLATFORM&gt;</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code></p>"},{"location":"CONFIGINI/#gamelistfilename","title":"gameListFilename","text":"<p>Override the game list filename. This enables you to set a filename different from the default provided by the frontend modules. For example you can specify a custom filename for the gamelist, which is particularly useful if you are using EmuDeck with the Pegasus frontend: This enhancement helps prevent duplicate entries in Pegasus by allowing users to generate a <code>metadata.txt</code> file instead of the default <code>metadata.pegasus.txt</code>.</p> <p>Default value: depends on frontend Allowed in sections: <code>[&lt;FRONTEND&gt;]</code></p>"},{"location":"CONFIGINI/#gamelistbackup","title":"gameListBackup","text":"<p>When set to true Skyscraper will create a backup of the existing game list each time it is run in game list generation mode (this mode is enabled by leaving out the <code>-s MODULE</code> option). The filename and path of the backup will be equal to the existing game list but have a timestamp appended to the name of the format <code>-yyyyMMdd-hhmmss</code> (eg. <code>gamelist.xml-20200530-115900</code>).</p> <p>Default value: <code>false</code> Allowed in sections: <code>[main]</code>, <code>[&lt;FRONTEND&gt;]</code></p>"},{"location":"CONFIGINI/#mediafolder","title":"mediaFolder","text":"<p>Sets the artwork / media output folder. By default (ie. if the option <code>mediaFolder</code> is not explicitly set or pre-defined by the frontend) Skyscraper outputs the composited artwork files to the game list export folder concatenated with <code>/media</code>. The <code>mediaFolder</code> setting enables you to change that to a non-default location.</p> <p>Read more about the artwork compositing.</p> <p>Note</p> <p>If this is set in the <code>[main]</code> or <code>[&lt;FRONTEND&gt;]</code> section it will automatically add <code>/&lt;PLATFORM&gt;</code> to the end of the path. If you want better control consider adding it to a <code>[&lt;PLATFORM&gt;]</code> section instead where it will be used as is.</p> <p>Default value: <code>/home/&lt;USER&gt;/RetroPie/roms/&lt;PLATFORM&gt;/media</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code></p>"},{"location":"CONFIGINI/#mediafolderhidden","title":"mediaFolderHidden","text":"<p>By default Skyscraper uses the <code>&lt;PLATFORM&gt;/media</code> folder when generating EmulationStation media. Setting this option will change that to <code>&lt;PLATFORM&gt;/.media</code>. Notice the <code>.</code> which hides the folder, which can speed up the initial EmulationStation loading sequence when using slow storage such as network file systems.</p> <p>This option is ignored if you set the media folder manually.</p> <p>Note</p> <p>Remember to remove your old <code>&lt;PLATFORM&gt;/media</code> folders if you enable this option.</p> <p>Default value: <code>false</code> Allowed in sections: Only for frontends <code>[emulationstation]</code> or <code>[retrobat]</code></p>"},{"location":"CONFIGINI/#cachefolder","title":"cacheFolder","text":"<p>Sets a non-default location for the storing and loading of cached game resources. This is what is referred to in the docs as the resource cache. By default this folder is set to <code>/home/&lt;USER&gt;/.skyscraper/cache/&lt;PLATFORM&gt;</code>. Don't change this unless you have a good reason to (for instance if you want your cache to reside on a USB drive).</p> <p>Note</p> <p>If this is set in the <code>[main]</code> section (recommended) it will automatically add <code>/&lt;PLATFORM&gt;</code> to the end of the path. If you want better control consider adding it to a <code>[&lt;PLATFORM&gt;]</code> section instead where it will be used as is.</p> <p>Default value: <code>/home/&lt;USER&gt;/.skyscraper/cache/&lt;PLATFORM&gt;</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code></p>"},{"location":"CONFIGINI/#cacheresize","title":"cacheResize","text":"<p>By default, to save space, Skyscraper resizes large pieces of artwork before adding them to the resource cache. Setting this option to <code>\"false\"</code> will disable this and save the artwork files with their original resolution. Beware that Skyscraper converts all artwork resources to lossless PNG's when saving them. High resolution images such as covers will take up a lot of space! So set this to <code>\"false\"</code> with caution.</p> <p>Note</p> <p>This is not related to the artwork compositing that happens when generating a game list. This is only related to how Skyscraper handles artwork when adding it to the resource cache while gathering data from the scraping modules.</p> <p>To read about artwork compositing see the artwork documentation instead.</p> <p>Default value: <code>true</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#cacherefresh","title":"cacheRefresh","text":"<p>Skyscraper has a resource cache which works just like the browser cache in Firefox. If you scrape and gather resources for a platform with the same scraping module twice, it will grab the data from the cache instead of hammering the online servers again. This has the advantage in the case where you scrape a rom set twice, only the roms that weren't recognized the first time around will be fetched from the online servers. Everything else will be loaded from the cache.</p> <p>You can force all data to be refetched from the servers by setting this option to <code>cacheRefresh=\"true\"</code>, effectively updating the cached data with new data from the source.</p> <p>Warning</p> <p>Only set this option to true if you know data has changed for several roms at the source. Otherwise you are hammering the servers for no reason.</p> <p>Default value: <code>false</code> Allowed in sections: <code>[main]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#nametemplate","title":"nameTemplate","text":"<p>By default Skyscraper uses just the title as the game name when generating gamelists for any frontend. You can change this to suit your personal preference by setting this option. It works by replacing certain tokens in the name template with the corresponding data. The valid tokens are:</p> <ul> <li><code>%t</code>: The game title as returned by the scraping sources without bracket information (see <code>%b</code> and <code>%B</code> below)</li> <li><code>%f</code>: The game filename without extension and bracket information (see <code>%b</code> and <code>%B</code> below)</li> <li><code>%b</code>: The game <code>()</code> parentheses information. This information often comes from the filename, but can also come from the scraping source title (eg. <code>(USA)</code> or <code>(en,fr,de)</code>)</li> <li><code>%B</code>: The game <code>[]</code> bracket information. This information often comes from the filename, but can also come from the scraping source title (eg. <code>[disk 1 of 2]</code> or <code>[AGA]</code>)</li> <li><code>%a</code>: The age restriction as returned by the scraping sources (eg. <code>16+</code>)</li> <li><code>%d</code>: The game developer as returned by the scraping sources</li> <li><code>%p</code>: The game publisher as returned by the scraping sources</li> <li><code>%r</code>: The game rating as returned by the scraping sources (<code>0.0</code> to <code>5.0</code>)</li> <li><code>%P</code>: The number of players as returned by the scraping sources</li> <li><code>%D</code>: The game release date with format <code>yyyy-mm-dd</code></li> </ul> <p>This option also support template groups separated by <code>;</code> within the template. The template parser will go over each group. If a group only has empty variables it will not be included in the final game name. So for a template such as <code>%t;, %P player(s)</code> where the <code>%P</code> is empty because no scraping source has provided the info, it will leave out the <code>, %P player(s)</code> part entirely resulting in the title <code>Game Name</code>. If this was not separated by <code>;</code> the resulting game name would end up being <code>Game Name, player(s)</code>.</p> <p>Example(s)</p> <pre><code>nameTemplate=\"%t [%f];, %P player(s)\"\n</code></pre> <p>Will result in: <code>1945k III [1945kiii], 2 player(s)</code></p> <p>Default value: unset Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code></p>"},{"location":"CONFIGINI/#tidydesc","title":"tidyDesc","text":"<p>Cleans up some misformatting in scraped description:</p> <ol> <li>Heading and trailing spaces are stripped</li> <li>Multiple spaces between sentences are reduced to one space</li> <li>Bulletpoint beginning with * or \u25cf are replaced with a dash</li> <li>Stylized ellipsis (\u2026 Unicode:<code>&amp;#8230;</code>) is replaced with three dot characters</li> <li>Multiple exclamation marks are reduced to one, unless for game titles are explicitly typed like that, like 'Super Punch-Out!!'.</li> </ol> <p>Quote</p> <p>'Multiple exclamation marks,' he went on, shaking his head, 'are a sure sign of a diseased mind.' -- Eric by Terry Pratchett</p> <p>Default value: <code>true</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#jpgquality","title":"jpgQuality","text":"<p>Sets the default jpg quality when saving image resources to the cache. This will be ignored if <code>--flags noresize</code> is set. Default is 95.</p> <p>All screenshots and any image resource that uses transparency will always be saved as PNG images. In those cases this setting will be ignored as PNG format is lossless.</p> <p>Default value: <code>95</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#cachecovers","title":"cacheCovers","text":"<p>Enables/disables the caching of the resource type <code>cover</code> when scraping with any module. If you never use covers in your artwork configuration, setting this to <code>\"false\"</code> can save you some space.</p> <p>Default value: <code>true</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#cachetextures","title":"cacheTextures","text":"<p>Enables/disables the caching of the resource type <code>cover</code> when scraping with any module. If you never use covers in your artwork configuration, setting this to <code>\"false\"</code> can save you some space.</p> <p>Default value: <code>true</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#cachescreenshots","title":"cacheScreenshots","text":"<p>Enables/disables the caching of the resource type <code>screenshot</code> when scraping with any module. If you never use screenshots in your artwork configuration, setting this to <code>\"false\"</code> can save you some space.</p> <p>Default value: <code>true</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#cropblack","title":"cropBlack","text":"<p>Enables/disables cropping away the black borders around the screenshot resources when compositing the final frontend gamelist artwork.</p> <p>Default value: <code>true</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code></p>"},{"location":"CONFIGINI/#cachewheels","title":"cacheWheels","text":"<p>Enables/disables the caching of the resource type <code>wheel</code> when scraping with any module. If you never use wheels in your artwork configuration, setting this to <code>\"false\"</code> can save you some space.</p> <p>Default value: <code>true</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#cachemarquees","title":"cacheMarquees","text":"<p>Enables/disables the caching of the resource type <code>marquee</code> when scraping with any module. If you never use marquees in your artwork configuration, setting this to <code>\"false\"</code> can save you some space.</p> <p>Default value: <code>true</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#importfolder","title":"importFolder","text":"<p>Sets a non-default folder when scraping using the <code>-s import</code> module. By default this is set to <code>/home/&lt;USER&gt;/.skyscraper/import</code> and will also look for a <code>/&lt;PLATFORM&gt;</code> inside of the chosen folder. Read more about the <code>-s import</code> module.</p> <p>Default value: <code>/home/&lt;USER&gt;/.skyscraper/import/&lt;PLATFORM&gt;</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code></p>"},{"location":"CONFIGINI/#unpack","title":"unpack","text":"<p>Some scraping modules use file checksums to identify the game in their databases. If you've compressed your roms to zip or 7z files yourself, this can pose a problem in getting a good result. You can then try setting this option to <code>\"true\"</code>. Doing so will extract the rom and do the file checksum on the rom itself instead of the compressed file.</p> <p>Info</p> <p>Only enable this option if you are having problems getting the roms identified from the compressed files. It slows down the scraping process significantly and should therefore be avoided if possible.</p> <p>Default value: <code>false</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code></p>"},{"location":"CONFIGINI/#frontend","title":"frontend","text":"<p>Sets the frontend you wish to export a game list for. By default Skyscraper will export an EmulationStation game list, but other frontends are supported as well.</p> <p>If exporting for the <code>attractmode</code> frontend, please also take note of the required <code>emulator=\"\"</code> option that goes along with using the <code>attractmode</code> frontend.</p> <p>If exporting for the <code>pegasus</code> frontend, please also take note of the optional <code>launch=\"\"</code> option that allows you to set the launch parameter used by Pegasus.</p> <p>Use as value for the frontend option the frontend name in all lowercase and with alphabetical characters only: <code>emulationstation</code>, <code>esde</code>, <code>pegasus</code>, <code>retrobat</code>, <code>attractmode</code>, aso. Check all supported frontends with '--help' and read a more about the details concerning each of them.</p> <p>Default value: <code>emulationstation</code> Allowed in sections: <code>[main]</code></p>"},{"location":"CONFIGINI/#emulator","title":"emulator","text":"<p>This option is only applicable when also setting the <code>frontend=\"attractmode\"</code> option. It sets the emulator to be used when generating the <code>attractmode</code> game list. On RetroPie the emulator name is mostly the same as the platform.</p> <p>Default value: unset Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code></p>"},{"location":"CONFIGINI/#launch","title":"launch","text":"<p>This option is only applicable when also setting the <code>frontend=\"pegasus\"</code> option. It sets the launch command to be used when generating the <code>pegasus</code> game list. This is optional. It defaults to the RetroPie launch options which works on RetroPie.</p> <p>Default value: unset Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code></p>"},{"location":"CONFIGINI/#videos","title":"videos","text":"<p>By default Skyscraper doesn't scrape and cache video resources because of the significant disk space required to save them. You can enable videos using this option.</p> <p>Default value: <code>false</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#videosizelimit","title":"videoSizeLimit","text":"<p>If video scraping is enabled you can set the maximum allowed video file size with this variable. The size is in Megabytes (1.000.000 bytes). If this size is exceeded the video file won't be saved to the cache.</p> <p>Default value: <code>100</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#videoconvertcommand","title":"videoConvertCommand","text":"<p>Some scraping modules deliver videos that use a codec or color format that some frontends don't support. In those cases it can be useful to convert the videos before saving them in the Skyscraper resource cache.</p> <p>This setting allows you to set a command that will be run on each video after it has been downloaded from the selected scraping module. See the examples below for inspiration.</p> <p>The <code>%i</code> and <code>%o</code> are required and will be replaced with the internally used video input (original) and output (converted) filenames as needed by Skyscraper.</p> <p>If your command / script always converts to a videofile with a specific extension, you also need to set <code>videoConvertExtension</code>.</p> <p>Tip</p> <p>Set <code>--verbosity 3</code> to route all output from your command / script to the terminal while Skyscraper runs. This will help you ensure everything is working as intended.</p> <p>The first example below makes use of the excellent <code>ffmpeg</code> tool. If you want to use this specific example you need to install <code>ffmpeg</code> first. On RetroPie and other Debian-derived distros you can install it with <code>sudo apt install ffmpeg</code>. If you want to use a script for the video conversion and run it directly without path, you need to place it in the <code>/home/&lt;USER&gt;/.skyscraper</code> folder.</p> <p>Tip</p> <p>If you create a script that includes checks on the input video and it sometimes decides not to convert them, you should simply let the script copy the video with <code>cp %i %o</code>. The <code>%i</code> is a temporary file created internally by Skyscraper. And the <code>%o</code> file is the file used by the cache. Both files should exist after a successful conversion. Skyscraper removes the temporary <code>%i</code> file automatically.</p> <p>Example(s)</p> <pre><code>videoConvertCommand=\"ffmpeg -i %i -y -pix_fmt yuv420p -t 00:00:10 -c:v libx264 -crf 23 -c:a aac -b:a 64k -vf scale=640:480:force_original_aspect_ratio=decrease,pad=640:480:(ow-iw)/2:(oh-ih)/2,setsar=1 %o\"\nvideoConvertCommand=\"videoconvert.sh %i %o\"\n</code></pre> <p>Default value: unset Allowed in sections: <code>[main]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#videoconvertextension","title":"videoConvertExtension","text":"<p>If you want to force an extension for the converted video file created by the <code>videoConvertCommand</code> command, you need to set this option. The converted file will then automatically have this extension no matter what the input file extension is.</p> <p>For instance, if a scraping module delivers the file <code>videofile.avi</code> and you always want the converted files to be <code>mp4</code> files, you simply set this option to <code>videoConvertExtension=\"mp4\"</code>.</p> <p>It is up to you to make sure that the command you provide in <code>videoConvertCommand</code> actually converts to a video file using the selected extension. For some conversion tools such as <code>ffmpeg</code> this is handled simply by setting the extension of the output file. But for other tools you might have to provide additional options to the <code>videoConvertCommand</code> above.</p> <p>Default value: unset Allowed in sections: <code>[main]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#videoprefernormalized","title":"videoPreferNormalized","text":"<p>This option is only applicable when scraping with the <code>-s screenscraper</code> module. ScreenScraper offers two versions of some of their videos. A normalized version, which adheres to some defined standard they made, and the originals. If you prefer converting or standardizing the videos yourself (see <code>videoConvertCommand</code> above) then you can set this to <code>false</code>. If you do so Skyscraper will fetch the original videos from ScreenScraper instead of the normalized ones.</p> <p>Be aware that the original videos often vary a lot in codec, color format and size. So it is recommended to convert them afterwards using the <code>videoConvertCommand</code>.</p> <p>Example(s)</p> <pre><code>[screenscraper]\nvideoPreferNormalized=\"false\"\n</code></pre> <p>Default value: <code>true</code> Allowed in sections: Only for scraper <code>[screenscraper]</code></p>"},{"location":"CONFIGINI/#symlink","title":"symlink","text":"<p>Enabling this option is only relevant while also setting the <code>videos=\"true\"</code> option. It basically means that Skyscraper will create a link to the cached videos instead of copying them when generating the game list media files. This will save a lot of space, but has the caveat that if you somehow remove the videos from the cache, the links will be broken and the videos then won't show anymore.</p> <p>Default value: <code>false</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code></p>"},{"location":"CONFIGINI/#theinfront","title":"theInFront","text":"<p>Game titles are returned from the scraping sources sometimes as 'The Game' and other times as 'Game, The'. Enabling this option will force Skyscraper to always try and move 'The' to the front of the titles. If it is not enabled, Skyscraper will always try and move it to the end of the title, regardless of how it was originally returned by the scraping sources.</p> <p>Info</p> <p>When generating gamelists Skyscraper will still sort the games as if the game titles didn't have 'The' at the beginning.</p> <p>Default value: <code>false</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code></p>"},{"location":"CONFIGINI/#brackets","title":"brackets","text":"<p>Disable this option to remove any bracket notes when generating the game list. It will disable notes such as <code>(Europe)</code> and <code>[AGA]</code> completely. This option is only relevant when generating the game list. It makes no difference when gathering data into the resource cache. Default (true) will keep brackets in the game title.</p> <p>Default value: <code>true</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code></p>"},{"location":"CONFIGINI/#innerbracketsreplace","title":"innerBracketsReplace","text":"<p>Only in use when the option <code>brackets</code> is set to <code>true</code> for gamelist creation: This replaces consecutive brackets <code>][</code> in the game title with whatever is defined in this option. This setting has no effect, if there is only one bracket present in the game filename. Use the option <code>innerParenthesesReplace</code> for the same effect on round brackets <code>)(</code> (aka. parentheses).</p> <p>Example(s)</p> <p>Filename: <code>Oddworld - Abe's Exoddus [NTSC-U] [SLUS-00710].m3u</code></p> <ul> <li><code>innerBracketsReplace=\"\"</code> (unset), gamelist game title output: <code>Oddworld - Abe's Exoddus [NTSC-U][SLUS-00710]</code></li> <li><code>innerBracketsReplace=\"] [\"</code>, gamelist game title output (note the space.): <code>Oddworld - Abe's Exoddus [NTSC-U] [SLUS-00710]</code></li> <li><code>innerBracketsReplace=\",\"</code>, gamelist game title output: <code>Oddworld - Abe's Exoddus [NTSC-U,SLUS-00710]</code></li> </ul> <p>Default value: unset Allowed in sections: <code>[main]</code></p>"},{"location":"CONFIGINI/#innerparenthesesreplace","title":"innerParenthesesReplace","text":"<p>Same as innerBracketsReplace but for parentheses <code>)(</code> (aka. round brackets).</p>"},{"location":"CONFIGINI/#keepdiscinfo","title":"keepDiscInfo","text":"<p>Only in use when the option <code>brackets</code> is set to <code>false</code> for gamelist creation: If you set <code>keepDiscInfo=\"true\"</code>, Skyscraper attempts to retain the \"Disc N (of M)\" part in the resulting game title in the gamelist. Currently the term 'disc' is identified in the filename in English. German, French, Italian. Any disc information is first searched in parentheses e.g., (Disc 1 of 4) and then in brackets e.g., [Disc 1]. Any suffix after the disc number like \"of 4\" is also kept.</p> <p>Tip</p> <p>If the emulator supports multi disc loading with an <code>*.m3u</code> or <code>*.cue</code> file you should use it, as it will remove gamelist clutter. Another option is to define a custom game title for each of the filenames with disc information via Skyscraper's import function. The latter option allows you to define any \"Disc N of M\" display style in your gamelist. </p> <p>Note</p> <p>The option keepDiscInfo is not applicable if you use a name template.</p> <p>Example(s)</p> <p>Filename: <code>Stupid Invaders v1.001 (2001)(Ubi Soft)(US)(Disc 1 of 2)[!].chd</code> Resulting game title: <code>Stupid Invaders (Disc 1 of 2)</code></p> <p>Default value: <code>false</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code></p>"},{"location":"CONFIGINI/#maxlength","title":"maxLength","text":"<p>Sets the maximum length of returned game descriptions. This is a convenience option if you feel like game descriptions are too long. By default it is set to 2500.</p> <p>Default value: <code>2500</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#minmatch","title":"minMatch","text":"<p>Some scraping modules are based on a file name or title based search. This option sets the minimum percentage any returned results need to match with in order for it to be accepted. For instance, the game <code>Wonderboy in Monsterland</code> might return the title <code>Wonder Boy in Monster Land</code> which is clearly a match. But it's not a 100% match. So it needs to be set relatively high, while still ignoring bad matches. By default it is set to 65 which has been tested to be a good middle-ground.</p> <p>Default value: <code>65</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#threads","title":"threads","text":"<p>Sets the desired number of parallel threads to be run when scraping. Some modules have maximum allowed threads. If you set this higher than the allowed value, it will be auto-adjusted. By default it is set to 4.</p> <p>Default value: <code>4</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#pretend","title":"pretend","text":"<p>This option is only relevant when generating a game list (by leaving out the <code>-s &lt;SCRAPER&gt;</code> command line option). It disables the game list generator and artwork compositor and only outputs the results of the potential game list generation to the terminal. It is mostly useful when used as a command line flag with <code>--flags pretend</code>. It makes little sense to set it here, but you can if you want to.</p> <p>Default value: <code>false</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code></p>"},{"location":"CONFIGINI/#unattend","title":"unattend","text":"<p>Before a game list creation Skyscraper will check if it already exists and ask if you want to overwrite it, when neither the <code>unattend</code> nor the <code>unattendskip</code> option is set true. By setting this option or <code>unattendskip</code> to true Skyscraper will overwrite an existing game list without confirmation question. This is useful when scripting Skyscraper to avoid the need for user input. Additionally, if this option or <code>unattendskip</code> is set to true, the cache operations <code>purge:all</code> and <code>vacuum</code> will not prompt you with a confirmation question.</p> <p>Default value: <code>false</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#unattendskip","title":"unattendSkip","text":"<p>Before a game list creation Skyscraper will ask if you want to skip existing game entries (i.e. not recreate from cache) in an existing game list, when the <code>unattend</code> and the <code>unattendskip</code> option are set false. By setting this option to true and having <code>unattend</code> set to false, Skyscraper will skip existing entries without prompting you. This is useful when scripting Skyscraper to avoid the need for user input. This option has no effect (i.e. an existing game list entry will be always recreated) when either</p> <ul> <li><code>unattend</code> is set to true or</li> <li>you use the <code>--query</code> parameter or</li> <li>the frontend generator does not support preserving a complete gameentry.</li> </ul> <p>If this option or the <code>unattend</code> option is true, the cache operations <code>purge:all</code> and <code>vacuum</code> will not prompt you with a confirmation question.</p> <p>Default value: <code>false</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#interactive","title":"interactive","text":"<p>When gathering data from any of the scraping modules many potential entries will be returned. Normally Skyscraper chooses the best entry for you. But should you wish to choose the best entry yourself, you can enable this option. Skyscraper will then list the returned entries and let you choose which one is the best one. It is recommended to use the command line flag <code>--flags interactive</code> instead in the (hopefully) rare cases where this mode is necessary.</p> <p>Default value: <code>false</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#forcefilename","title":"forceFilename","text":"<p>Enable this option to force Skyscraper to use the file name (excluding extension) instead of the cached scraping module titles when generating a game list.</p> <p>Tip</p> <p>If you set <code>forceFilename=\"true\"</code> and your filenames contain bracket notes such as <code>(this)</code> or <code>[that]</code> at the end, these will be combined with whatever bracket notes are at the end of the titles returned from the sources. This can cause some confusion. For instance, if you have the filename <code>Gran Turismo 2 (USA) (Arcade Mode)</code> and the cached title is <code>Gran Turismo 2 (Arcade Mode)</code>, then the gamelist name will become <code>Gran Turismo 2 (Arcade Mode)(USA)(Arcade Mode)</code>. You can disable them altogether with the <code>brackets=\"false\"</code> option.</p> <p>Default value: <code>false</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code></p>"},{"location":"CONFIGINI/#verbosity","title":"verbosity","text":"<p>Sets how verbose Skyscraper should be when running. Default level is 0. The higher the value, the more info Skyscraper will output to the terminal while running. Anything higher than 3 does not further increase the verbosity of the output.</p> <p>Default value: <code>0</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code></p>"},{"location":"CONFIGINI/#skipped","title":"skipped","text":"<p>Only has an effect if a rom has no resources attached to it in the cache. If false (default) the rom will be left out when generating a game list file. However, it will still show up in the frontend (at least it does for EmulationStation), but it won't exist in the game list file. If unsure leave it to false, unless you need generic gamelist entries, consisting of <code>&lt;path/&gt;</code> and <code>&lt;name/&gt;</code>, for some reason. In other words: If skipped is set to false and no entry for a rom is found in the cache nothing will be added to the gamelist for that rom. If skipped is true and no entry for a rom is found in the cache a generic entry will be added to the gamelist file for that rom. If a rom has data in Skyscraper's cache then this flag has no effect.</p> <p>Note</p> <p>When skipped is set true, any generic added game entry is not eligible for formatting with a nameTemplate.</p> <p>Default value: <code>false</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code></p>"},{"location":"CONFIGINI/#maxfails","title":"maxFails","text":"<p>Not all scraping modules support all platforms. This means that you can potentially start a scraping run with a module and a platform that is incompatible. This will hammer the servers for potentially hundreds of roms but provide 0 results for any of them. To avoid this Skyscraper has a builtin limit for initially allowed failed rom lookups. If this is reached it will quit. Setting this option allows you to set this limit yourself, but not above a maximum of 200. The default limit is 42. Don't change this unless you have a very good reason to do so.</p> <p>Default value: <code>42</code> Allowed in sections: <code>[main]</code></p>"},{"location":"CONFIGINI/#region","title":"region","text":"<p>Adds the specified region to the top of the existing default internal region priority list. Only one region is supported with this configuration. To overwrite the internal default region priority list entirely use the setting regionprios. Read more about how regions are handled in general.</p> <p>Info</p> <p>Setting the region will overwrite any region auto-detected from the file name.</p> <p>Default value: unset Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code></p> <p>Example(s)</p> <pre><code>[main]\nregion=\"de\"\n</code></pre> <p>or</p> <pre><code>[snes]\nregion=\"de\"\n</code></pre>"},{"location":"CONFIGINI/#regionprios","title":"regionPrios","text":"<p>Completely overwrites the internal region priority list inside of Skyscraper. Multiple regions can be configured here separated by commas. Read more about how regions are handled in general.</p> <p>Info</p> <p>Any region auto-detected from the file name will still be added to the top of this list.</p> <p>Default value: <code>eu, us, ss, uk, wor, jp, au, ame, de, cus, cn, kr, asi, br, sp, fr, gr, it, no, dk, nz, nl, pl, ru, se, tw, ca</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code></p> <p>Example(s)</p> <pre><code>[main]\nregionPrios=\"de,us,jp\"\n</code></pre> <p>or</p> <pre><code>[megadrive]\nregionPrios=\"de,us,jp\"\n</code></pre>"},{"location":"CONFIGINI/#lang","title":"lang","text":"<p>Adds the specified language to the top of the existing default internal language priority list. Only one language is supported with this configuration. Read more about how languages are handles in general.</p> <p>Default value: unset Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code></p> <p>Example(s)</p> <pre><code>[main]\nlang=\"it\"\n</code></pre> <p>or</p> <pre><code>[snes]\nlang=\"it\"\n</code></pre>"},{"location":"CONFIGINI/#langprios","title":"langPrios","text":"<p>Completely overwrites the internal language priority list inside of Skyscraper. Multiple languages can be configured here separated by commas. Read more about how languages are handles in general.</p> <p>Default value: <code>en, de, fr, es</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code></p> <p>Example(s)</p> <pre><code>[main]\nlangPrios=\"it,en\"\n</code></pre> <p>or</p> <pre><code>[megadrive]\nlangPrios=\"it,en\"\n</code></pre>"},{"location":"CONFIGINI/#artworkxml","title":"artworkXml","text":"<p>Sets a non-default xml file to use when setting up the artwork compositing. By default Skyscraper uses the file <code>/home/&lt;USER&gt;/.skyscraper/artwork.xml</code>. If you provide a relative filepath it will be expanded to <code>/home/&lt;USER&gt;/.skyscraper/&lt;artworkXml&gt;</code>, respective to <code>$XDG_CONFIG_HOME/skyscraper/&lt;artworkXml&gt;</code>, if you use Skyscraper in XDG mode. Read more about the artwork.xml format and customization options.</p> <p>Tip</p> <p>It can be very useful to set this in any platform section or frontend section where you want a specific artwork setup / look.</p> <p>Default value: <code>artwork.xml</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code></p>"},{"location":"CONFIGINI/#relativepaths","title":"relativePaths","text":"<p>Enabling this forces the rom and any media paths inside the game list to be relative to the path of the gamelist file. Currently only relevant when generating an EmulationStation, a Retrobat or a Pegasus game list (see also frontend option).</p> <p>Info</p> <p>This setting has no effect when the frontend is set to attractmode.</p> <p>Default value: <code>false</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code></p>"},{"location":"CONFIGINI/#extensions","title":"extensions","text":"<p>Completely overwrites the rom extensions Skyscraper allows for the chosen platform. Use a space between each extension (e.g., <code>*.abc *.def</code>).</p> <p>Info</p> <p>If you feel like you are using a file extension that ought to be supported by default, please report it so it can be added in a later version of Skyscraper.</p> <p>Default value: unset. If set it ignores <code>\"formats\": [ ... ]</code> in <code>peas.json</code> file Allowed in sections: <code>[&lt;PLATFORM&gt;]</code></p>"},{"location":"CONFIGINI/#addextensions","title":"addExtensions","text":"<p>Adds the rom extensions to the ones that are already supported by the platform, use a space between each extension. You may omit the <code>*</code> or even <code>*.</code> when providing an extension.</p> <p>Info</p> <p>If you feel like you are using a file extension that ought to be supported by default, please report it so it can be added in a later version of Skyscraper.</p> <p>Default value: <code>*.zip *.7z *.ml</code> (if and only if <code>extensions</code> parameter is unset) Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code></p>"},{"location":"CONFIGINI/#hints","title":"hints","text":"<p>If set to false it disables the \"Did you know\" hints when running Skyscraper.</p> <p>Default value: <code>true</code> Allowed in sections: <code>[main]</code></p>"},{"location":"CONFIGINI/#subdirs","title":"subdirs","text":"<p>By default Skyscraper will include roms located in subfolders. By disabling this option Skyscraper will only scrape the roms located directly in the input folder. See <code>inputFolder=\"&lt;PATH&gt;\"</code> further up to read more about the rom input folder.</p> <p>Default value: <code>true</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code></p>"},{"location":"CONFIGINI/#onlymissing","title":"onlyMissing","text":"<p>This flag, when set true, will only scrape game information for ROMs that do not have any data in Skyscraper's cache. The cache information of a ROM that has a cache hit will not be updated or extended when 'only missing' is true. A use case could be that you want to exclude already scraped games from a scraping process and you are using a scraping module which has a limit on how many ROMs may be scraped: With 'only missing' enabled the ROMs with cache data are subtracted from all ROMs to be scraped for a platform, thus the remaining ROM count may be below the scrape module's limit.</p> <p>Tip</p> <p>Please consider using the command line flag option <code>--flags onlymissing</code> instead. It makes little sense to set this permanently in your configuration unless you always want to use the cached data for already cached game entries. Also when 'only missing' is set and the cache has any data for a game entry, the refresh option has no effect. But you still can use the 'only missing' in the config file if you absolutely want to.</p> <p>Default value: false Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#startat","title":"startAt","text":"<p>If you only ever wish to gather data for a subset of your roms from the scraping modules you can use this option to set the starting rom. It will then scrape alphabetically from that rom and onwards.</p> <p>Tip</p> <p>Please consider using the command line option <code>--startat &lt;FILENAME&gt;</code> instead. It makes little sense to set this permanently in your configuration unless you always want it to only ever scrape from a certain file and onward. But you can if you absolutely want to.</p> <p>Default value: unset Allowed in sections: <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code></p>"},{"location":"CONFIGINI/#endat","title":"endAt","text":"<p>If you only ever wish to gather data for a subset of your roms from the scraping modules you can use this option to set the rom to end at. It will then scrape alphabetically until it reaches this rom, then stop.</p> <p>Tip</p> <p>Please consider using the command line option <code>--endat &lt;FILENAME&gt;</code> instead. It makes little sense to set this permanently in your configuration unless you always want it to only ever scrape up until it reaches a certain file. But you can if you absolutely want to.</p> <p>Default value: unset Allowed in sections: <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code></p>"},{"location":"CONFIGINI/#includepattern","title":"includePattern","text":"<p>Per platform Skyscraper have default file extensions that it will accept. This option allows you to only include certain files within that scope. The pattern is a simple asterisk type pattern. In cases where you need to match for a comma you need to escape it as <code>\\,</code>.</p> <p>Note</p> <p>You might also want to check out the file extension options and the the 'includeFrom' option.</p> <p>Default value: unset Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code></p>"},{"location":"CONFIGINI/#excludepattern","title":"excludePattern","text":"<p>Per platform Skyscraper have default file extensions that it will accept. This option allows you to exclude certain files within that scope. The pattern is a simple asterisk type pattern. In cases where you need to match for a comma you need to escape it as <code>\\,</code>.</p> <p>Note</p> <p>You might also want to check out the file extension options and the 'excludeFrom' option.</p> <p>Tip</p> <p>If you create a file named <code>.skyscraperignore</code> within any subfolder of the input dir, all files from that directory will be ignored by Skyscraper. Additionally, if you put an empty file <code>.skyscraperignoretree</code> in a folder, all files in that directory and all subdirectories are ignored.</p> <p>Default value: unset Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code>, <code>[&lt;FRONTEND&gt;]</code></p>"},{"location":"CONFIGINI/#includefrom","title":"includeFrom","text":"<p>Tells Skyscraper to only include the files listed in FILENAME. One filename per line (with FULL path, eg. '/home/pi/RetroPie/roms/snes/subdir/somefile.zip').</p> <p>This file can be generated with the '--cache report:missing' option or made manually.</p> <p>Note</p> <p>You might also want to check out the 'includePattern' option.</p> <p>Default value: unset Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code></p>"},{"location":"CONFIGINI/#excludefrom","title":"excludeFrom","text":"<p>Tells Skyscraper to exclude the files listed in FILENAME. One filename per line (with FULL path, eg. '/home/pi/RetroPie/roms/snes/subdir/somefile.zip').</p> <p>This file can be generated with the '--cache report:missing' option or made manually.</p> <p>Note</p> <p>You might also want to check out the 'excludePattern' option.</p> <p>Tip</p> <p>If you create a file named '.skyscraperignore' within any subfolder of the input dir, all files from that directory will be ignored by Skyscraper. Additionally, if you put an empty file <code>.skyscraperignoretree</code> in a folder, all files in that directory and all subdirectories are ignored.</p> <p>Default value: unset Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code></p>"},{"location":"CONFIGINI/#usercreds","title":"userCreds","text":"<p>Some scraping modules require a <code>key</code> or <code>user:password</code> to work. You can create a <code>[&lt;SCRAPER&gt;]</code> section and add a <code>userCreds=\"user:pass\"</code> or <code>userCreds=\"key\"</code> line beneath it. Doing this will always use these credentials when scraping from the module in question. Check the scraping module overview to see the specific requirements for each module.</p> <p>Example(s)</p> <pre><code>[screenscraper]\nuserCreds=\"&lt;account&gt;:&lt;password&gt;\"\n</code></pre> <p>or</p> <pre><code>[igdb]\nuserCreds=\"&lt;Client-ID&gt;:&lt;Client-Secret&gt;\"\n</code></pre> <p>Default value: unset Allowed in sections: <code>[&lt;SCRAPER&gt;]</code></p>"},{"location":"CONFIGINI/#spacecheck","title":"spaceCheck","text":"<p>Skyscraper will continuously check if you are running low on disk space. If you go below 200 MB in either the game list export folder or the resource cache folder, it will quit to make sure your system doesn't become unstable. Some types of file systems provide a faulty result to Skyscraper when it comes to these checks and thus it can be necessary to disable it altogether. You can use this option to do just that.</p> <p>Default value: <code>true</code> Allowed in sections: <code>[main]</code></p>"},{"location":"CONFIGINI/#scummini","title":"scummIni","text":"<p>Allows you to set a non-default path of the <code>scummvm.ini</code> file. This file is used whenever scraping the <code>scummvm</code> platform and has the highest precedence compared to the default values (see below). It converts the shortname such as <code>monkey2</code> (the ScummVM Game ID) to the more search-friendly name <code>Monkey Island 2: LeChuck's Revenge</code> (the value of the <code>description=</code> in the <code>scummvm.ini</code> file) whenever using one of the file name search based scraping modules. Always provide an absolute path as value for this parameter.</p> <p>Default values: <code>~/.scummvmrc</code> and <code>/opt/retropie/configs/scummvm/scummvm.ini</code>. If <code>~/.scummvmrc</code> is present, it has precedence over <code>/opt/retropie/configs/scummvm/scummvm.ini</code> (RetroPie path). Allowed in sections: <code>[main]</code></p>"},{"location":"CONFIGINI/#platform","title":"platform","text":"<p>Allows you to set a platform, which is applied when no command line switch <code>-p</code> is given.</p> <p>Default value: unset Allowed in sections: <code>[main]</code></p>"},{"location":"CONFIGINI/#addfolders","title":"addFolders","text":"<p>If you arrange your ROMs in directories below a platform directory, this flag comes into play. The gamelist specification allows you to define also metadata for directories. This metadata is held in <code>&lt;folder/&gt;</code> elements in the gamelist XML file. In minimum a <code>&lt;folder/&gt;</code> has a <code>&lt;path/&gt;</code> and a <code>&lt;name/&gt;</code> inner element. If no <code>&lt;name/&gt;</code> is given, the last subdirectory of the path element is taken as name. Which additionally subelements are interpreted and rendered is dependent on the frontend, for example EmulationStation for RetroPie supports these elements to be used inside a folder element.</p> <p>If this flag set to true, Skyscraper will create generic folder elements in the gamelist file, containing path and name for each directory found. If false, no folder elements will be created for the directories with ROM(s) (example).</p> <p>In both cases the existing <code>&lt;folder/&gt;</code> elements of a gamelist will be preserved. However, folder data is not cached by Skyscraper, which means if you delete your <code>gamelist.xml</code> Skyscraper can not restore the edited folder elements.</p> <p>EmulationStation 2.11.2rp and earlier</p> <p>EmulationStation 2.11.2 (RetroPie) and earlier have a bug that adds a <code>&lt;folder/&gt;</code> element everytime you edit and save metadata for the same folder within EmulationStation. The last edit will be the latest folder element in the gamelist file, i.e. it adds a <code>&lt;folder/&gt;</code> element at the end. Skyscraper in contrast expects in maximum only one <code>&lt;folder/&gt;</code> element per each path. If you regenerate a gamelist with Skyscraper, you will lose the latest edit of the folder metadata. This bug is described here and is fixed in the next release of EmulationStation respective is fixed already in the EmulationStation-dev version.</p> <p>Default value: false Allowed in sections: Only for frontends <code>[emulationstation]</code>, <code>[esde]</code> or <code>[retrobat]</code></p>"},{"location":"CONFIGINI/#manuals","title":"manuals","text":"<p>By default Skyscraper doesn't scrape and cache game manuals resources because not all scraping sites provide this data and also only some frontends support PDF display of these game manuals. If enabled Skyscraper will collect game manuals for the scraping modules that provide this data. For frontend ES-DE no further option must be set to enable the output of the PDF manuals to the appropriate folder. For other EmulationStation forks see also option gameListVariants.</p> <p>Default value: false Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code></p>"},{"location":"CONFIGINI/#gamelistvariants","title":"gameListVariants","text":"<p>This is a comma separated list of options for the different gamelist variants used by the various EmulationStation forks. Currently only <code>enable-manuals</code> is evaluated as variant: It generates <code>&lt;manual/&gt;</code> entries in the gamelist for the game manuals scraped or found in the cache, if also the <code>manuals</code> configuration option is enabled. However, the <code>gameListVariants</code> option is not not needed for the ES-DE frontend to output game manuals.</p> <p>Example(s)</p> <pre><code>[emulationstation]\ngameListVariants=\"enable-manuals\"\n</code></pre> <p>Default value: unset Allowed in sections: Only for frontend <code>[emulationstation]</code></p>"},{"location":"CONFIGINI/#ignoreyearinfilename","title":"ignoreYearInFilename","text":"<p>During scraping, if and only if a year information is identified in parentheses in the ROM filename, this information is compared against the release year in the scraper database. If the years are different the game information from the scraper database is discarded. If no year information is in the ROM filename any match for the game from the scraper is accepted. To allow a less strict comparision without having to remove or adjust the year information from the filename, you can set this option to true.</p> <p>Example(s)</p> <p>Filename: <code>Statix (1995)(Black Legend)[h TRSi - HLM].zip</code> Release year from scrape source: 1994 <code>ignoreYearInFilename=true</code>: Scraper match is accepted <code>ignoreYearInFilename=false</code>: Scraper match is discarded, may end up in result Game 'Statix (1995)(Black Legend)[h TRSi - HLM]' not found :(</p> <p>Default value: <code>false</code> Allowed in sections: <code>[main]</code>, <code>[&lt;PLATFORM&gt;]</code></p>"},{"location":"CONFIGINI/#gamebasefile","title":"gameBaseFile","text":"<p>You must set this filepath if you want to use the GameBase scraper. As a prerequisite you obviously need the GameBase DB for your platform. Search the internet for it. The most popular and longest maintained GameBase DB is for the Commodore 64 (GB64), but you can also find a GameBase for other platforms. The guys at the GB64 are maintaining a list of GameBase projects for the various platforms/systems. Currently it lists over 100 platforms with GameBases.</p> <p>Once you have downloaded a GameBase DB, unpack it and put it in a folder accessible to Skyscraper. For example <code>~/GameBases/GBC_v18/</code>. In this folder you will find a <code>*.mdb</code> file (Microsoft Access DB). Note it.</p> <p>Also do obtain the script from Skyscraper's <code>supplementary/scraperdata</code> folder. The script is named <code>mdb2sqlite.sh</code>. RetroPie users may find the script in <code>/opt/retropie/supplementary/skyscraper</code>. Run it with the path to the <code>*.mdb</code> file, e.g. <pre><code>./mdb2sqlite.sh ~/GameBases/GBC_v18/GBC_v18.mdb\n</code></pre> After a short while you should end up with an GameBase DB in SQLite format <code>GBC_v18.sqlite3</code>, sibling to the <code>GBC_v18.mdb</code>. Leave it there. Now you are done with the one-time preparation.</p> <p>While you can use only the <code>GBC_v18.sqlite3</code> standalone, you will not be able to collect the screenshots and available covers when the <code>GBC_v18.sqlite3</code> is moved away from the unpacked GameBase DB as this image data is held in folders relative to the mdb (sqlite3) file and not in the database file itself.</p> <p>Finally, use the absolute file path of the <code>GBC_v18.sqlite3</code> in the configuration platform section and you are ready to scrape the GameBase DB.</p> <pre><code>[c64]\ngameBaseFile=\"/path/to/GBC_v18.sqlite3\"\n</code></pre> <p>Default value: unset Allowed in sections: Only in <code>[&lt;PLATFORM&gt;]</code>, must be an absolute filepath</p> <p>Tips for Scraping a GameBase DB</p> <ol> <li>You will get the most reliable automatic match when your game files are using the same basefile stem as in the GameBase DB, for example: The game filename on your filesystem is <code>.../c64/BIGTIMEB.d64</code>, the stem would be <code>BIGTIMEB</code>, this will provide the match to the filename used in GameBase DB (<code>BIGTIMEB_29819_01.zip</code>) for the title \"Big Time Bugger\".</li> <li>For static mapping between game filename and title to search for you can utilize, as always, the alias map which is located sibling to the <code>config.ini</code>.</li> <li>In contrast, with the <code>--query</code> parameter you can use globbing wildcards (<code>*</code> and <code>?</code>) for the filename or game title. You may also finetune the <code>minMatch</code> / <code>-m</code> match score when using the query parameter. Keep in mind, that multiple uses of <code>?</code> will reduce the search match score. The results of a query are limited to 25 games, Skyscraper will issue a warning when this maximum is reached.</li> <li>When providing a CRC as query parameter no wildcards are allowed.</li> </ol>"},{"location":"CONTRIBUTING/","title":"Contributing","text":""},{"location":"CONTRIBUTING/#source-code","title":"Source Code","text":"<ol> <li>Fork this repo</li> <li>It is appreciated (but not required) if you raise an issue first</li> <li>Create your feature branch (<code>git checkout -b my-new-feature</code>)</li> <li>Code, test, commit, repeat</li> <li>Apply code formatting (e.g. <code>clang-format-15 -i src/&lt;changedfiles&gt;</code>)</li> <li>Squash your commits to one commit (e.g. <code>git rebase --keep-base -i master</code>)</li> <li>Push to the branch (<code>git push origin my-new-feature</code>)</li> <li>Create new Pull Request</li> </ol>"},{"location":"CONTRIBUTING/#documentation","title":"Documentation","text":"<p>Found something missing, or an existing section confusing or outdated? Any documentation fix is also appreciated.</p>"},{"location":"FAQ/","title":"FAQ","text":""},{"location":"FAQ/#the-official-skyscraper-frequently-asked-questions","title":"The official Skyscraper Frequently Asked Questions","text":"<p>A quick note before I let you loose on the questions:</p> <ul> <li>You can get a list of all available command-line options by running <code>Skyscraper --help</code></li> <li>For a more thorough description of the command-line options see the command line options documentation</li> <li>You can read all about the available configuration settings in the <code>config.ini</code> documentation</li> <li>If you are using Skyscraper with RetroPie search their forum or raise a question there if you are puzzled</li> <li>If still can not wrap your head around something, please file an issue. </li> </ul> <p>And now for the questions (with answers)...</p> I ran Skyscraper and it scraped a lot of artwork and game data, but no data is showing up in my gamelists. What's going on? <p>You probably forgot to generate the gamelist. Skyscraper has two modes; resource gathering mode and gamelist generation mode. First you gather data into Skyscraper's resource cache by scraping the platform with any of the supported scraping modules (eg. <code>Skyscraper -p snes -s thegamesdb</code>). When you feel like you have gathered all the resources that you need, you then generate the gamelist by simply leaving out the <code>-s &lt;MODULE&gt;</code> option (eg. <code>Skyscraper -p snes</code>). Read more about the resource cache.</p> Skyscraper keeps quitting on me with errors about request limits or similar. What's going on? <p>Almost all of the scraping modules, such as ScreenScraper and TheGamesDb, have restrictions applied to avoid users overloading their servers. These restrictions are set by them, not Skyscraper. Some modules even require you to log in to use them. Read more about the restrictions and how to deal with them in the scraping modules documentation. If you've created a user at ScreenScraper and want to use your credentials with Skyscraper, just add the following section to <code>/home/&lt;USER&gt;/.skyscraper/config.ini</code>. Type it exactly like this, but with your own user and pass. <pre><code>[screenscraper]\nuserCreds=\"USER:PASS\"\n</code></pre></p> Skyscraper by default generates a composited screenshot that combines both boxart, screenshot and wheel. I just want it to export the raw artwork, how do I do that? <p>Skyscraper includes a powerful artwork compositor you can set up any way you like. Read more about the artwork features. If you just want it to export the raw unmodified screenshot and other pieces of artwork, you can use the <code>/home/&lt;USER&gt;/.skyscraper/artwork.xml.example2</code> and copy it to <code>/home/&lt;USER&gt;/.skyscraper/artwork.xml</code>. Remember to regenerate the gamelists after you've done this to make use of the new artwork configuration. This can be done simply by running Skyscraper with <code>Skyscraper -p PLATFORM</code>. This will regenerate the gamelist for that platform using this new artwork configuration.</p> I've edited the artwork.xml or some other part of Skyscraper's gamelist specific configurations, but the games still show up the same inside my frontend. Why is that? <p>Whenever you make any gamelist specific changes to Skyscraper's configurations, you need to regenerate the gamelists for your chosen frontend afterwards for the changes to take effect. This can be done simply by running Skyscraper with <code>Skyscraper -p PLATFORM</code>. This will regenerate the gamelist for that platform for the default EmulationStation frontend using your new configuration. If you wish to export for one of the other supported frontends, you need to specify this. Read more about the frontends and their specifics.</p> I used Skyscraper to generate EmulationStation gamelists for one or more platforms, but when I restarted the system the gamelist hadn't changed. Why is that? <p>Did you remember to quit EmulationStation before running Skyscraper? EmulationStation writes its current gamelists back to disk when it is closed. If you run Skyscraper while EmulationStation is also running, it will overwrite any gamelists you just generated. You need to quit EmulationStation before generating the gamelists with Skyscraper to avoid this. You can quit EmulationStation by pressing F4 on a connected keyboard, or by selecting quit from the menus.</p> I want to set up different options for different platforms. It's really tiresome setting it all on command-line. Can this be done easier? <p>YES! Absolutely. In addition to taking options from the command-line, Skyscraper also reads the <code>/home/&lt;USER&gt;/.skyscraper/config.ini</code> file, which is where you should set everything up. This file allows you to configure things both globally, per-platform, per-frontend and per-scraping module. Read more about the available configuration options and option priorities.</p> When I try to scrape data or generate gamelists I get all sorts of write permission errors and missing configurations. What's going on? <p>You are probably running, or at some point ran, Skyscraper with <code>sudo Skyscraper</code> instead of just <code>Skyscraper</code>. Doing so will result in all sorts of weird behaviour as Skyscraper was then run as the <code>root</code> user instead of the ordinary user. Depending on what command-line parameters you ran Skyscraper with, this will have caused permission issues for your files in <code>/home/&lt;USER&gt;/RetroPie/roms</code> subfolders and might also have caused permission issues with the <code>/home/&lt;USER&gt;/.skyscraper</code> folder. This is a common problem for new Linux users who are used to working with Windows. In Linux you rarely need Administrator privileges. Running a command with <code>sudo</code> in front of it will run it as the root / Administrator user. And any folders or files being generated while that command runs, will then be owned by root. When you run software as the normal user afterwards and it tries to write to those folders or files, it will fail. You need to reset those permissions back to be owned by your ordinary user. If you are running RetroPie, the following commands might fix your problem (RUN AT YOUR OWN RISK!): <pre><code>$ sudo chown -R pi:pi /home/pi/.skyscraper\n$ sudo chown -R pi:pi /home/pi/RetroPie/roms\n</code></pre> The above commands must be run with <code>sudo</code>, as we need root permission to reset the folders and files (hence the warning). But in general, never run anything with <code>sudo</code> unless you are specifically told to do so.</p> I generated a game list for the Pegasus frontend. When I fire up Pegasus the data is there, but it doesn't look very good. Why is that? <p>Skyscraper contains a powerful artwork compositor that can customize the exported screenshot, boxart etc. any way you like. This is done through the <code>/home/&lt;USER&gt;/.skyscraper/artwork.xml</code> file. The default configuration for this file is made to look good when exporting for the default frontend EmulationStation. When you use a different frontend, you need to customize this file a bit to make it look good. For Pegasus I suggest something like this: <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;artwork&gt;\n  &lt;output type=\"screenshot\" width=\"640\"/&gt;\n  &lt;output type=\"cover\" width=\"640\" height=\"480\"&gt;\n    &lt;layer resource=\"cover\" height=\"480\" align=\"center\" valign=\"middle\"&gt;\n      &lt;gamebox side=\"wheel\" rotate=\"90\"/&gt;\n    &lt;/layer&gt;\n  &lt;/output&gt;\n  &lt;output type=\"wheel\" height=\"200\"/&gt;\n&lt;/artwork&gt;\n</code></pre> Read more about how to set up a custom <code>artwork.xml</code> file.</p> I've changed my <code>artwork.xml</code> configuration and regenerated the game list, but it still looks the same in the frontend. Why is that? <p>Did you perhaps edit <code>/home/&lt;USER&gt;/skysource/artwork.xml</code> instead of <code>/home/&lt;USER&gt;/.skyscraper/artwork.xml</code>? The latter is the one you need to edit. Read more about how to set up a custom <code>artwork.xml</code> file.</p> Skyscraper keeps overwriting my edits in a <code>gamelist.xml</code>. Is there a way to keep my changes in the gamelist file? <p>This is the supposed modus operandi of Skyscraper. A gamelist file should not be edited manually when using Skyscraper, except for the preserved elements which vary from frontend to frontend, review the frontend documentation for details. Skyscraper offers these options: To make your changes permanent between each Skyscraper run use either <code>--cache edit</code> and follow the dialogues or use the import scraping module if your desired changes are more complex.</p> I have a custom game file extension and when using screenscraper as scraping module the games for a system/platform are not found. Is there a solution to this? <p>Yes, from Skyscraper 3.17.5 onwards. The cause is that screenscraper is the only scraping module which by default passes the extension to the server during the scraping information along with other information (checksums, filesize). When scraping a set of games use the <code>--addext</code> option, i.e. <code>--addext '*.&lt;customext&gt;'</code>, that way Skyscraper will explicitly query only for the basename (=filename without file extension) of the game file. Let's assume you are using <code>*.desktop</code> as custom game file extension, then the command would be <code>Skyscraper -s screenscraper -p &lt;platform&gt; --addext '*.desktop'</code>. You may also use the config file counterpart. You may add <code>--verbosity 3</code> to investigate what search term is presented to the screenscraper server. However, when querying for a single game with <code>--query</code> you don't have to specify your custom extension.</p>"},{"location":"FRONTENDS/","title":"Frontends","text":""},{"location":"FRONTENDS/#overview","title":"Overview","text":"<p>When generating a game list with Skyscraper you have the option of generating it for several different frontends. A frontend is the graphical interface that lists and launches your games.</p> <p>Setting a frontend when generating a game list is done by setting the <code>-f &lt;FRONTEND&gt;</code> command-line parameter as explained in the commandline documentation or by setting it in <code>/home/&lt;USER&gt;/.skyscraper/config.ini</code> as explained config file documentation. Use for the <code>&lt;FRONTEND&gt;</code> value the frontend name all lowercase and with alphabetical characters only: <code>emulationstation</code>, <code>esde</code>, <code>pegasus</code>, <code>retrobat</code>, <code>attractmode</code>. Some frontends have further options that are either optional or required. Check the frontend sections below for more information on this.</p> <p>Warning</p> <p>Skyscraper will overwrite your game list (obviously). So if you have spend a lot of time hand-crafting metadata in a game list for any frontend, please remember to create a backup before overwriting it with Skyscraper. You can also tell Skyscraper to auto-backup old game lists prior to overwriting them. Read more about the <code>gamelistbackup</code> config option.</p> <p>When generating a game list for any frontend, Skyscraper will try to preserve certain metadata. Check the frontend sections below for more information on what metadata is preserved per frontend.</p>"},{"location":"FRONTENDS/#emulationstation-default","title":"EmulationStation (default)","text":"<ul> <li>Default game list location: <code>/home/&lt;USER&gt;/RetroPie/roms/&lt;PLATFORM&gt;</code></li> <li>Default game list filename: <code>gamelist.xml</code></li> </ul> <p>This is the default frontend used when generating a game list with Skyscraper. If no frontend is defined on command-line or in <code>config.ini</code> it will fall back to generating for EmulationStation. By default the <code>&lt;USER&gt;</code> is <code>pi</code> on RetroPie setups.</p>"},{"location":"FRONTENDS/#metadata-preservation","title":"Metadata preservation","text":"<p>Skyscraper will preserve the following metadata when re-generating a game list for EmulationStation: <code>favorite</code>, <code>hidden</code>, <code>kidgame</code>, <code>lastplayed</code>, <code>playcount</code>, <code>sortname</code>. Also existing <code>&lt;folder/&gt;</code> elements of a gamelist file will be preserved. The user editable sub-XML elements for a folder are listed in the <code>Metadata.cpp</code> of EmulationStation.</p> <p>Warning</p> <p>Folder data is not cached by Skyscraper, thus if you delete your <code>gamelist.xml</code>, Skyscraper can not restore the edited folder elements from cache.</p> <p>Automatic addition of folder elements if <code>addFolder</code> is true: If at least one ROM is within a subfolder and this subfolder is not yet part of the <code>gamelist.xml</code> file, it will be added with two mandatory subelements:</p> <ul> <li><code>&lt;path/&gt;</code> reflects the relative subpath from the system folder and </li> <li><code>&lt;name/&gt;</code>, which represents the direct parent folder of a ROM by default. However, you may edit this to any name which should be shown in EmulationStation.</li> </ul> <p>Example</p> <p>Consider this folder structure below <code>snes</code>, whereas each lowest folder contains at least one ROM: <pre><code>snes\n\u2514\u2500\u2500 Retail\n    \u251c\u2500\u2500 EUR\n    \u251c\u2500\u2500 JP\n    \u2514\u2500\u2500 USA\n</code></pre> Skyscraper will generate these  elements if not present in <code>gamelist.xml</code> and only if <code>addFolders</code> is set true: <pre><code>[...]\n    &lt;folder&gt;\n        &lt;path&gt;./Retail&lt;/path&gt;\n        &lt;name&gt;Retail&lt;/name&gt;\n    &lt;/folder&gt;\n    &lt;folder&gt;\n        &lt;path&gt;./Retail/USA&lt;/path&gt;\n        &lt;name&gt;USA&lt;/name&gt;\n    &lt;/folder&gt;\n    &lt;folder&gt;\n        &lt;path&gt;./Retail/JP&lt;/path&gt;\n        &lt;name&gt;JP&lt;/name&gt;\n    &lt;/folder&gt;\n    &lt;folder&gt;\n        &lt;path&gt;./Retail/EUR&lt;/path&gt;\n        &lt;name&gt;EUR&lt;/name&gt;\n    &lt;/folder&gt;\n[...]\n</code></pre> The <code>Retail</code> folder is added even if it does not contain a ROM because it is part of the path to the ROMs in the lowest folders.</p>"},{"location":"FRONTENDS/#emulationstation-desktop-edition-es-de","title":"EmulationStation Desktop Edition (ES-DE)","text":"<p>This is very similar to the default EmulationStation. This section only highlights the differences.</p> <ul> <li>Default game list location: <code>/home/&lt;USER&gt;/ES-DE/gamelists/&lt;PLATFORM&gt;</code></li> <li>Default game list filename: <code>gamelist.xml</code></li> </ul> <p>ROMs are expected to be in the input folder <code>/home/&lt;USER&gt;/ROMs/&lt;PLATFORM&gt;</code> for every <code>&lt;PLATFORM&gt;</code> you scrape.</p> <p>Media filepaths (screenshots, marquees, videos, aso.) are not explicitly stored in the gamelist file. This is ES-DE default. However, Skyscraper will put the media files into the <code>downloaded_media</code> folder (e.g. <code>~/ES-DE/downloaded_media/&lt;PLATFORM&gt;/screenshots/</code> for screenshots) from where ES-DE will pick them up. ES-DE does not support textures currently.</p> <p>Tip</p> <p>You may override the default storage folder of ES-DE (<code>/home/&lt;USER&gt;/ES-DE</code>) on a non-Windows build by setting the environment variable <code>ESDE_APPDATA_DIR</code> to a different folder as documented in the ES-DE documentation.</p> <p>All the gory details of ES-DE's gamelist file format you can find in the section \"Gamelist Reference\" in the [ES-DE documentation] (https://gitlab.com/es-de/emulationstation-de/-/blob/master/INSTALL.md?ref_type=heads#gamelistxml).</p>"},{"location":"FRONTENDS/#metadata-preservation_1","title":"Metadata preservation","text":"<p>Skyscraper will, additionally to EmulationStation preserved metadata, retain the following metadata when re-generating a game list for ES-DE: <code>altemulator</code>, <code>broken</code>, <code>collectionsortname</code>, <code>completed</code>, <code>controller</code>, <code>hidemetadata</code>, <code>nogamecount</code>, <code>nomultiscrape</code>. Also existing <code>&lt;folder/&gt;</code> elements of a gamelist file will be preserved: For these on top is the <code>folderlink</code> element is preserved.</p>"},{"location":"FRONTENDS/#retrobat","title":"RetroBat","text":"<ul> <li>Default game list location: <code>/home/&lt;USER&gt;/RetroPie/roms/&lt;PLATFORM&gt;</code></li> <li>Default game list filename: <code>gamelist.xml</code></li> </ul> <p>This is modeled after EmualtionStation as it uses it with slight differences.</p>"},{"location":"FRONTENDS/#attract-mode","title":"Attract-Mode","text":"<ul> <li>Default game list location: <code>/home/&lt;USER&gt;/.attract/romlists</code></li> <li>Default game list filename: <code>&lt;EMULATOR/PLATFORM&gt;.txt</code></li> </ul> <p>Attract-Mode is a bit more abstract when it comes to how it saves its game lists and media. To export for Attract-Mode you need to, in addition to setting the frontend, set <code>-e &lt;EMULATOR&gt;</code> on command-line or in <code>config.ini</code>. The <code>&lt;EMULATOR&gt;</code> is a file that describes the platform / emulator you are generating a game list for. The file contains everything needed to tell Attract-Mode how to launch games for the platform, and even where to find the media files for the games (such as screenshots and videos).</p> <p>If you are running RetroPie most of the <code>&lt;EMULATOR&gt;</code> files will have been auto-generated for you. They are usually named the same as the platform you are generating a game list for. So, if you are generating for <code>snes</code> you simply use <code>Skyscraper -p snes -f attractmode -e snes</code> and that should work just fine. The <code>&lt;EMULATOR&gt;</code> files are usually located at <code>/home/&lt;USER&gt;/.attract/emulators/</code>. Check them out if you are curious.</p>"},{"location":"FRONTENDS/#metadata-preservation_2","title":"Metadata preservation","text":"<p>Skyscraper will preserve the following metadata when re-generating a game list for Attract-Mode: <code>altromname</code>, <code>alttitle</code>, <code>buttons</code>, <code>cloneof</code>, <code>control</code>, <code>displaycount</code>, <code>displaytype</code>, <code>extra</code>, <code>rotation</code>, <code>status</code>.</p>"},{"location":"FRONTENDS/#pegasus","title":"Pegasus","text":"<ul> <li>Default game list location: <code>/home/&lt;USER&gt;/RetroPie/roms/&lt;PLATFORM&gt;</code></li> <li>Default game list filename: <code>metadata.pegasus.txt</code></li> </ul> <p>Pegasus is easy and simple to generate a game list for. Simply do <code>Skyscraper -p &lt;PLATFORM&gt; -f pegasus</code>. If you want to specify a custom launch command (if you are using RetroPie you don't have to, a default one will be used), you can set it on command-line with <code>-e \"&lt;COMMAND&gt;\"</code> or in <code>config.ini</code> with:</p> <pre><code>[pegasus]\nlaunch=\"&lt;COMMAND&gt;\"\n</code></pre> <p>You need to add the individual platform rom directories to Pegasus (if they are not already defined) before any of them will show up! Start the Pegasus frontend, press ESC on the keyboard and choose Settings -&gt; Set game directories. Simply point it to each individual platform sub-directory. For RetroPie you should have a path for each platform (eg. <code>/home/&lt;USER&gt;/RetroPie/roms/snes</code>, <code>/home/&lt;USER&gt;/RetroPie/roms/megadrive</code> etc.).</p> <p>Info</p> <p>If you are generating game lists for Pegasus, it is highly recommended to disable third-party game list data sources! Otherwise you will have a mish-mash or different sources showing up in Pegasus. Start the Pegasus frontend, press ESC on the keyboard and choose Settings -&gt; Enable/disable data sources and disable everything in that submenu. Then reload the game lists or restart Pegasus, and all of the platforms should show up with media and game information generated by Skyscraper.</p>"},{"location":"FRONTENDS/#metadata-preservation_3","title":"Metadata preservation","text":"<p>Skyscraper will preserve any metadata key-value pairs added to the header and / or individual game list entries.</p>"},{"location":"IMPORT/","title":"Import of Game Data","text":""},{"location":"IMPORT/#custom-data-import","title":"Custom Data Import","text":"<p>The following describes how to import your own custom textual, artwork and / or video data into the resource cache for later use when generating game lists (enable game list generation mode simply by leaving out the <code>-s</code> command line option).</p> <p>Tip</p> <p>For any path in the following description, you can also add a platform subfolder. Skyscraper will auto-detect this and use it instead of the base import folder. For instance, you can create the folder <code>/home/&lt;USER&gt;/.skyscraper/import/amiga</code> and it will use that as base instead of <code>/home/&lt;USER&gt;/.skyscraper/import/</code> when importing for the <code>amiga</code> platform.</p> <p>Info</p> <p>Be sure to also check the <code>--cache edit</code> option.</p>"},{"location":"IMPORT/#images-videos-and-game-manuals","title":"Images, Videos and Game Manuals","text":"<p>To import videos or images into the resource cache, use the following procedure:</p> <ul> <li>Name your image or video file with the exact base name of the rom you wish to connect it to. Example: <code>Bubble Bobble.nes</code> will import images with a filename of <code>Bubble Bobble.jpg</code> or <code>Bubble Bobble.png</code> or other well-known image formats. As long as the base name is an exact match. Same goes for video files. I recommend only making use of well-known video formats since Skyscraper imports them directly without conversion (unless you convert them), so they need to be supported directly by the frontend you plan to use.</li> <li>Game manuals are expected to use PDF format and have the extension <code>.pdf</code>. The base name must match the ROM file, thus the game manual of the example is <code>Bubble Bobble.pdf</code>.</li> <li>Place all of your images, videos or game manuals in the <code>/home/&lt;USER&gt;/.skyscraper/import/&lt;PLATFORM&gt;/screenshots</code>, <code>covers</code>, <code>wheels</code>, <code>marquees</code>, <code>videos</code> or <code>manuals</code> folders.</li> <li>Now run Skyscraper with <code>Skyscraper -p &lt;PLATFORM&gt; -s import</code>. If you named your files correctly, they will now be imported. Look for the green 'YES' in the output at the rom(s) you've placed files for. This will tell you if it succeeded or not.</li> <li>The data is now imported into the resource cache. To make use of it read the section How to actually use the data? below.</li> </ul>"},{"location":"IMPORT/#special-note-for-videos","title":"Special Note for Videos","text":"<p>If you are importing videos, you also need to add the command line flag <code>--flags videos</code> for this to work. Videos aren't imported or scraped by default, since it is considered a huge disk space hog. So keep this in mind if you want to import videos into the cache. If you plan on always using videos, consider adding this option to the config.ini instead.</p>"},{"location":"IMPORT/#textual-data-publisher-players-rating","title":"Textual Data (Publisher, Players, Rating, ...)","text":"<p>Skyscraper also allows you to import textual data for any rom you have in your collection. All you need to do is to prepare files for each rom with an exactly matching base name. For instance <code>Bubble Bobble.nes</code> should have a file called <code>Bubble Bobble.txt</code> or <code>Bubble Bobble.xml</code> or whatever suffix you want to use. The suffix is not important. What is important is that you place all of these raw data files into the <code>/home/&lt;USER&gt;/.skyscraper/import/textual</code> folder. And then you need to make a definitions file so Skyscraper has a recipe for these files.</p>"},{"location":"IMPORT/#textual-data-definitions-file","title":"Textual data definitions file","text":"<p>In order for Skyscraper to understand your textual data files, it needs a recipe. Or a definition of your format if you like. The format is completely up to you. The file must be placed at <code>/home/&lt;USER&gt;/.skyscraper/import/definitions.dat</code>. Here follows a few examples with a matching data file for comparison:</p> <p>Example 1</p> <p>Definitions file: <code>/home/&lt;USER&gt;/.skyscraper/import/definitions.dat</code></p> <pre><code>&lt;game&gt;\n  &lt;title&gt;###TITLE###&lt;/title&gt;\n  &lt;description&gt;###DESCRIPTION###&lt;/description&gt;\n  &lt;developer&gt;###DEVELOPER###&lt;/developer&gt;\n  &lt;publisher&gt;###PUBLISHER###&lt;/publisher&gt;\n  &lt;players&gt;###PLAYERS###&lt;/players&gt;\n  &lt;rating&gt;###RATING###&lt;/rating&gt;\n  &lt;ages&gt;###AGES###&lt;/ages&gt;\n  &lt;genre&gt;###TAGS###&lt;/genre&gt;\n  &lt;releasedate&gt;###RELEASEDATE###&lt;/releasedate&gt;\n&lt;/game&gt;\n</code></pre> <p>Import file: <code>/home/&lt;USER&gt;/.skyscraper/import/textual/&lt;EXACT ROM BASE NAME&gt;.xml</code></p> <pre><code>&lt;game&gt;\n  &lt;title&gt;The Game Title&lt;/title&gt;\n  &lt;description&gt;This game is about yada, yada yada.\nYes, the closing element may be on a different line.   \n  &lt;/description&gt;\n  &lt;developer&gt;The game developer&lt;/developer&gt;\n  &lt;publisher&gt;The game publisher&lt;/publisher&gt;\n  &lt;players&gt;Maximum number of players supported (example '4')&lt;/players&gt;\n  &lt;rating&gt;The game star rating 0-5 (example '3.5') or use the percent range 0.1 ... 1.0&lt;/rating&gt;\n  &lt;ages&gt;Minimum age restriction as integer (example '16')&lt;/ages&gt;\n  &lt;genre&gt;Genres, Comma-separated&lt;/genre&gt;\n  &lt;releasedate&gt;The game release date (example '1985-06-01')&lt;/releasedate&gt;\n&lt;/game&gt;\n</code></pre> <p>Tip</p> <p>As with Skyscraper 3.9.2 onwards you are no longer required to have the same indention or whitespace (hard tabs, spaces) as in the XML-like <code>definitions.dat</code>. Matching is solely done via XML elements (e.g. <code>&lt;title&gt;</code>), which saves you headache in identifiying whitespace mismatch between the XML template and your XML import file. Any heading or trailing whitespace of the element value will be chopped off. If you use a custom XML-like <code>definitions.dat</code>: Use it as in the example definition shown above. In your import file assure to use also closing elements (<code>&lt;/title&gt;</code>) and the same caSiNg in the elements between template and import file, i.e. provide a valid XML file.</p> <p>Example 2</p> <p>Definitions file: <code>/home/&lt;USER&gt;/.skyscraper/import/definitions.dat</code></p> <pre><code>Title      : ###TITLE###\nDescription: ###DESCRIPTION###\nDeveloper  : ###DEVELOPER###\nPublisher  : ###PUBLISHER###\nPlayers    : ###PLAYERS###\nRating     : ###RATING###\nRating     : ###AGES###\nGenre      : ###TAGS###\nDate       : ###RELEASEDATE###\n</code></pre> <p>Import file: <code>/home/&lt;USER&gt;/.skyscraper/import/textual/&lt;EXACT ROM BASE NAME&gt;.txt</code></p> <pre><code>Title      : Game Title\nDescription: This game is about yada, yada yada.\nDeveloper  : The game developer\nPublisher  : The game publisher\nPlayers    : Maximum number of players supported (example '4')\nRating     : The game rating 0-5 (example '3.5')\nAges       : Minimum age restriction as integer (example '16')\nGenre      : Genres, Comma-separated\nDate       : The game release date (example '1985-06-01')\n</code></pre> <p>Warning</p> <p>Make sure any line matches exactly with the line in the recipe including white-space characters such as newline characters, spaces and tabs! Otherwise Skyscraper won't recognize it. Especially for newline characters this can be difficult to debug. Newline characters appear the same in an editor so you won't notice the problem until you load it up in a hex editor.</p>"},{"location":"IMPORT/#list-of-known-tags","title":"List of known tags","text":"<p>From the examples above you'll notice the <code>###SOMETHING###</code> tags. This is what Skyscraper recognizes your data from. The supported tags are:</p> <ul> <li><code>###TITLE###</code></li> <li><code>###DESCRIPTION###</code></li> <li><code>###DEVELOPER###</code></li> <li><code>###PUBLISHER###</code></li> <li><code>###PLAYERS###</code></li> <li><code>###AGES###</code></li> <li><code>###RATING###</code></li> <li><code>###TAGS###</code></li> <li><code>###RELEASEDATE###</code></li> </ul>"},{"location":"IMPORT/#resource-formats","title":"Resource formats","text":"<p>For <code>###PLAYERS###</code>, <code>###AGES###</code>, <code>###RELEASEDATE###</code> and <code>###RATING###</code> a certain format is required.</p> <ul> <li>Players must contain just the maximum number of players as an integer such as '4'.</li> <li>Ages must be an integer between 1 and 18 (for instance \"16\" means it is suitable from ages 16 and up).</li> <li> <p>Release date must be of one of the following formats:</p> <ul> <li><code>yyyy</code></li> <li><code>yyyy-MM</code></li> <li><code>yyyy-MM-dd</code> (full ISO 8601 date)</li> <li><code>yyyy-MMM-dd</code> (MMM is Jan, Feb and so on...)</li> <li><code>MM/dd/yyyy</code></li> <li><code>MMM, yyyy</code> (MMM is Jan, Feb and so on...)</li> <li><code>MMM dd, yyyy</code> (MMM is Jan, Feb and so on...)</li> </ul> </li> <li> <p>Rating can be either a number between 0 and 5, use as fraction only .5     (\"Star rating scale\"). Examples: 3 or 4.5, but not 4.25 or 1.0. The value     will be divided by five to match the scale of the rating in a gamelist.     Alternatively, a value between 0.0 and 1.0 (\"Percent scale\") can be used.     This value will not be transformed. If you want to use 0.5 with the percent     scale, provide it as .5 (note the missing zero) or as 0.50 (add redundant     zeros). Also, do add a fraction of zero explicitly when you want to denote a     rating of 1.0 (100%). Without this trailing fraction it will be interpreted     as if it would be of the star rating scale (0 to 5), thus it will be rated     20% for given integer of 1.</p> </li> </ul>"},{"location":"IMPORT/#how-to-actually-use-the-data","title":"How to actually use the data?","text":"<p>When you've imported all of your data into the resource cache, you can make use of it by enabling Skyscrapers game list generation mode simply by leaving out the <code>-s</code> command line option (eg. <code>Skyscraper -p &lt;PLATFORM&gt;</code>). The game list generator will then make use of your imported data and cached data. As the resource cache is a crucial component of Skyscraper you may want to read more about it.</p>"},{"location":"INSTALLATION/","title":"Installation","text":""},{"location":"INSTALLATION/#installation-instructions","title":"Installation Instructions","text":"<p>You can find detailled installation instructions in the respective section in the toplevel README. In particular:</p> <ul> <li>RetroPie on Linux distros with Debian package system (Ubuntu, RaspiOS, aso.)</li> <li>Other unixoid OSes first match the dependencies:<ul> <li>Linux distros with Debian package system (Ubuntu, RaspiOS, aso.), without RetroPie</li> <li>For other Linux distributions assure the package dependencies are met for your distro</li> <li>macOS users can install the dependencies via brew</li> <li>After having the dependencies installed proceed with the install script or use the few manual commands</li> </ul> </li> <li>Docker use</li> <li>Native Windows installation (or use WSL2 with Linux)</li> </ul>"},{"location":"LANGUAGES/","title":"Languages","text":""},{"location":"LANGUAGES/#overview","title":"Overview","text":"<p>Some game information comes in several languages. Skyscraper provides several ways of configuring these for your convenience. It is important to understand the distinction between game region and language. Setting a language is a user-preferred thing and will only affect the game descriptions and tags (genres). The remaining game data is tied to the region instead (artwork (screenshots, marquees, ...) and, in some cases, the game name).</p>"},{"location":"LANGUAGES/#scraping-modules-that-support-languages","title":"Scraping Modules that Support Languages","text":"<ul> <li>screenscraper (game description and tags / genres)</li> </ul> <p>Below follows a general list of supported languages. Not all languages are supported by all modules (the supporting module is noted inside the parenthesis for each language).</p> <p>When configuring languages be sure to use the short-names as shown (eg. 'no' for Norwegian).</p>"},{"location":"LANGUAGES/#list-of-supported-languages","title":"List of Supported Languages","text":"<ul> <li>cz: Czech (screenscraper)</li> <li>da: Danish (screenscraper)</li> <li>de: German (screenscraper)</li> <li>en: English (screenscraper)</li> <li>es: Spanish (screenscraper)</li> <li>fi: Finnish (screenscraper)</li> <li>fr: French (screenscraper)</li> <li>hu: Hungarian (screenscraper)</li> <li>it: Italian (screenscraper)</li> <li>ja: Japanese (screenscraper)</li> <li>ko: Korean (screenscraper)</li> <li>nl: Dutch (screenscraper)</li> <li>no: Norwegian (screenscraper)</li> <li>pl: Polish (screenscraper)</li> <li>pt: Portuguese (screenscraper)</li> <li>ru: Russian (screenscraper)</li> <li>sk: Slovakian (screenscraper)</li> <li>sv: Swedish (screenscraper)</li> <li>tr: Turkish (screenscraper)</li> <li>zh: Chinese (screenscraper)</li> </ul>"},{"location":"LANGUAGES/#default-language-precedence","title":"Default Language Precedence","text":"<p>Skyscraper's default internal language priority list is as follows. Topmost language has highest priority and so forth.</p> <ul> <li>Auto-detected language or language set with <code>--lang LANGUAGE</code> or <code>lang=\"LANGUAGE\"</code></li> <li>en</li> <li>de</li> <li>fr</li> <li>es</li> </ul>"},{"location":"LANGUAGES/#configuring-language","title":"Configuring Language","text":"<p>It is possible to manipulate the default internal language priority list. You can either do this on command-line or through <code>/home/&lt;USER&gt;/.skyscraper/config.ini</code>. It is recommended to set it in <code>config.ini</code> for a permanent setup.</p>"},{"location":"LANGUAGES/#permanent-setting-in-configini","title":"Permanent setting in config.ini","text":"<p>Read this and this.</p>"},{"location":"LANGUAGES/#command-line","title":"Command Line","text":"<p>Read this.</p>"},{"location":"OLDERRELEASES/","title":"OLDERRELEASES","text":""},{"location":"OLDERRELEASES/#version-xxx-features-under-consideration-all-unimplemented","title":"Version x.x.x (Features under consideration, all unimplemented)","text":"<ul> <li>Add the option to scrape from cached data purely originating from certain scraping modules</li> <li>Consider making aliasMap the global baseName instead of just the search term base name. This will fix missing brackets in alias names being ignored later on</li> <li>Make all artwork types custom meaning that their type can be whatever the user wants. The sources will create ones with known types such as 'screenshot' and 'cover', but the user can import other types they define themselves, such as 'cabinet' or whatever else. Internally artwork is then handled by a list of artwork instead of 4 hardcoded types in GameEntry</li> <li>Introduce the ability to use  in the 'file=\"somefolder/.png\"' in artwork.xml which would then look for a file in 'resources' with the game basename.png allowing users to use their own custom artwork data as a workaround to adding new types to import (Thank you to 'jueank' for suggesting this) <li>Add the option of scraping custom platforms by configuring them in the config with an alias to an already existing platform. Example: scrape 'pcenginecd' could be scraped as 'pcengine' in case you have those files in a 'roms/pcenginecd' folder instead of the pcengine folder. Check here: https://github.com/muldjord/skyscraper/issues/136</li> <li>Create a testmode for the artwork compositor that let's you quickly render an example to see if you got everything set up right in the artwork xml</li> <li>Allow 'region' to be a list similar to 'regionPrios'. When using 'region' it should simply keep the default priority list and add those from 'region' to the top. 'regionPrios' should still overwrite it entirely. Naming change probably a good idea, for instance rename 'region' to 'regionsPrefer' or something. 'regionPrios' should probably also be changed to 'regionsOverride'. (Thank you to 'corezon' for suggesting this).</li> <li>Implement a less rigid filename match for the 'import' module to allow for close match filenames</li> <li>Add support for grouping multi-disk games so they only have one entry in the gamelists. See issues/232 (Thank you to 'igno2k' for suggesting this)</li>"},{"location":"OLDERRELEASES/#version-377-2","title":"Version 3.7.7-2","text":"<ul> <li>Added script to quickly generate the mapMap.csv</li> <li>Added script to quickly generate the platforms.json from an existing platform.cpp file</li> <li>Moved the list of platforms and thier associated scrapers, file masks, and aliases to be loaded from a JSON file instead of hardcoded in CPP from torresflo/skyscraper-enhanced</li> <li>Added 'texture' image type to be stored in textures dir from InfiRandia/skyscraper</li> <li>Updated MAME map to 0.245</li> <li>Added 'actionmax', 'naomi2', 'ps3', 'ps4', 'ps5', and 'xbox' platforms</li> <li>Added '*.chd' to 'naomi' and 'naomi2'</li> <li>Added '*.nca' to 'switch'</li> <li>Fixed the 'pc88' and 'x1' ScreenScraper IDs</li> <li>Added automatic generation of compiled builds on new tag</li> </ul>"},{"location":"OLDERRELEASES/#version-377-28th-june-2022","title":"Version 3.7.7 (28th June 2022)","text":"<ul> <li>Added '*.m3u' to 'segacd' platform (Thank you to user 'bmn001' for suggesting it)</li> </ul>"},{"location":"OLDERRELEASES/#version-376-12th-june-2022","title":"Version 3.7.6 (12th June 2022)","text":"<ul> <li>Added 'pico8' platform (Thank you to user 'zerojay' for suggesting it)</li> </ul>"},{"location":"OLDERRELEASES/#version-375-31st-january-2022","title":"Version 3.7.5 (31st January 2022)","text":"<ul> <li>Now allows ':' in Pegasus command</li> </ul>"},{"location":"OLDERRELEASES/#version-374-23rd-january-2022","title":"Version 3.7.4 (23rd January 2022)","text":"<ul> <li>'--includefrom' and '--excludefrom' now works with relative paths (Thank you to use 'sleve_mcdichael' for reporting this</li> <li>Skipped file entries now conforms to same format as report files to allow using them with '--excludefrom' and '--includefrom' (Thank you to user 'TomFury' for suggesting this)</li> </ul>"},{"location":"OLDERRELEASES/#version-373-23rd-january-2022","title":"Version 3.7.3 (23rd January 2022)","text":"<ul> <li>Added 'switch' platform (Thank you to user 'Redemp' for providing info)</li> </ul>"},{"location":"OLDERRELEASES/#version-372-20th-january-2022","title":"Version 3.7.2 (20th January 2022)","text":"<ul> <li>Skyscraper now only ignore files when using the '.skyscraperignore[tree]' files when scraping for new data. They will NOT be ignored when generating game lists</li> </ul>"},{"location":"OLDERRELEASES/#version-371-19th-january-2022","title":"Version 3.7.1 (19th January 2022)","text":"<ul> <li>Skyscraper will now ignore an entire tree of subfolders where a file called '.skyscraperignoretree' is found (Thank you to user 'sromeroi' for suggesting this)</li> </ul>"},{"location":"OLDERRELEASES/#version-370-17th-january-2022","title":"Version 3.7.0 (17th January 2022)","text":"<ul> <li>Moved '--fromfile' option to '--includefrom'. '--fromfile' still works, but is considered deprecated</li> <li>Moved '--includefiles' option to '--includepattern'. '--includefiles' still works, but is considered deprecated</li> <li>Moved '--excludefiles' option to '--excludepattern'. '--excludefiles' still works, but is considered deprecated</li> <li>Added '--excludefrom' option similar to '--includefrom' only the opposite (Thank you to user 'TomFury' for suggesting this)</li> <li>Skyscraper will now ignore any subfolders within the input folder where a file called '.skyscraperignore' is found (Thank you to user 'sromeroi' for suggesting this)</li> <li>Added platform 'easyrpg', only usable using the 'screenscraper' scraping module (Thank you to user 'zerojay' for suggesting this)</li> </ul>"},{"location":"OLDERRELEASES/#version-3616-9th-november-2021","title":"Version 3.6.16 (9th November 2021)","text":"<ul> <li>Added platform 'moto' (Thank you to user 'Yserra' for suggesting it)</li> </ul>"},{"location":"OLDERRELEASES/#version-3615-25th-august-2021","title":"Version 3.6.15 (25th August 2021)","text":"<ul> <li>Added 'chd' extension to 'atomiswave' platform (Thank you to user 'smeegoan' for reporting this)</li> <li>Fixed bug that caused 'T000000' to be added multiple times when skipping entries in ES gamelists (Thank you to user 'sleve_mcdichael' for reporting this)</li> </ul>"},{"location":"OLDERRELEASES/#version-3614-5th-august-2021","title":"Version 3.6.14 (5th August 2021)","text":"<ul> <li>Added 'windows 3.x' as alias to Mobygames scraping module (Thank you to user 'ecto' for reporting this)</li> </ul>"},{"location":"OLDERRELEASES/#version-3613-2nd-june-2021","title":"Version 3.6.13 (2nd June 2021)","text":"<ul> <li>Added 'mediaFolderHidden' EmulationStation specific config option that will set the media folder to 'PLATFORM/.media' when set to true. This can speed up EmulationStation initial loading when using slow storage such as a network file system (Thank you to user 'XenuIsWatching' for suggesting this)</li> </ul>"},{"location":"OLDERRELEASES/#version-3612-15th-may-2021","title":"Version 3.6.12 (15th May 2021)","text":"<ul> <li>Removed 'Simple Mode' as it was broken and deprecated. Use RetroPie script instead</li> <li>Removed A LOT of deprecated (and hidden) CLI options</li> </ul>"},{"location":"OLDERRELEASES/#version-3611-6th-may-2021","title":"Version 3.6.11 (6th May 2021)","text":"<ul> <li>'--fromfile' now accepts both relative and absolute path to filename (Thank you to user 'sleve_mcdichael' for reporting this)</li> <li>Added platforms 'atarijaguarcd', 'pcenginecd' and 'channelf' (Thank you to user 'XenuIsWatching' for providing info)</li> </ul>"},{"location":"OLDERRELEASES/#version-3610-12th-april-2021","title":"Version 3.6.10 (12th April 2021)","text":"<ul> <li>Added 'naomi' as platform</li> <li>Added 'msx2' as platform</li> <li>Added 'atomiswave' as platform</li> </ul>"},{"location":"OLDERRELEASES/#version-369-1st-april-2021","title":"Version 3.6.9 (1st April 2021)","text":"<ul> <li>Probably fixed <code>--flags unpack</code> which broke with 3.6.8 due to deprecated Qt function calls</li> <li>Probably fixed video conversion which broke with 3.6.8 due to deprecated Qt function calls</li> </ul>"},{"location":"OLDERRELEASES/#version-368-31st-march-2021","title":"Version 3.6.8 (31st March 2021)","text":"<ul> <li>Added 'cacheRefresh' config.ini option and added it to default config.ini for 'esgamelist' module (Thank you to user 'penx' for suggesting this)</li> <li>'ScreenScraper APIv2 returned invalid / empty Json' message now no longer includes message to attach the error json file unless it's more than 64 bytes long</li> <li>Added 'ca' to region priority list (Thank you to user 'joaoluizcarvalho' for pointing this out)</li> <li>Added 'de', 'fr' and 'es' to default language priority list</li> <li>Added 'players' resource to '--cache report:missing' CLI option (Thank you to user 'peligwe' for reporting this)</li> <li>Added 'theInFront' config.ini option and 'theinfront' CLI flag (Thank you to user 'sleve_mcdichael' for suggesting this)</li> <li>'unattend' and 'unattendSkip' can now be used in a scraping module section in config.ini (Thank you to user 'sleve_mcdichael' for reporting this)</li> <li>Added Qt version pre-processor checks for deprecated Qt methods to avoid compilation warning on newer Qt installations</li> </ul>"},{"location":"OLDERRELEASES/#version-367-27th-january-2021","title":"Version 3.6.7 (27th January 2021)","text":"<ul> <li>Added '*.rvz' extension for 'wii' and 'gc' platforms (Thank you to user 'tcamargo' for reporting this)</li> <li>Added '*.chd' extension for '3do' platform (Thank you to user 'Roudaku' for reporting this)</li> <li>Added 'openbor' platform. Exists in RetroPie as experimental platform (as requested by user 'hahnmt')</li> <li>'neogeo' platform now uses 'box-2D' as cover instead of 'flyer' when scraping with the ScreenScraper module (Thank you to user 'retro81' for suggesting this)</li> </ul>"},{"location":"OLDERRELEASES/#version-366-21st-december-2020","title":"Version 3.6.6 (21st December 2020)","text":"<ul> <li>The 'esgamelist' module now looks for the 'gamelist.xml' file in the path set with '-g' instead of the path set with '-i' (Thank you to user 'c0d3h4x0r' for reporting this and helping me debug it)</li> </ul>"},{"location":"OLDERRELEASES/#version-365-18th-december-2020","title":"Version 3.6.5 (18th December 2020)","text":"<ul> <li>Now uses one shared networking instance, instead of one per thread</li> <li>'daphne' platform entries now added as '' entries instead of '' entries (Thank you to user 'clyde' for helping figure this out) <li>Added 'nocropblack' cli flag and 'cropBlack=\"BOOL\"' config.ini option that allows user to disable cropping of black borders around screenshots when compositing the final gamelist artwork (Thank you to user 'WindyWinston' for suggesting this)</li>"},{"location":"OLDERRELEASES/#version-361-27th-october-2020","title":"Version 3.6.1 (27th October 2020)","text":"<ul> <li>Added 'amigacd32' as a separate platform just because (Thank you to user 'HoraceAndTheSpider' for resetting The Matrix)</li> </ul>"},{"location":"OLDERRELEASES/#version-360-25th-october-2020","title":"Version 3.6.0 (25th October 2020)","text":"<ul> <li>Changed 'SecsSinceEpich' to 'MSecsSinceEpich' to support pre-5.8 Qt versions (Thank you to user 'Hazza4569' for reporting this)</li> </ul>"},{"location":"OLDERRELEASES/#version-359-24th-october-2020","title":"Version 3.5.9 (24th October 2020)","text":"<ul> <li>Implemented the new IGDB v4 authentication method. IGDB will now work again, and requires free credentials. Read more about that here</li> <li>Improved memory consumption when handing entries back to main thread</li> <li>Added '.au3' file extension to id script exception list (Thank you to 'o0alucard0o' for reporting this)</li> </ul>"},{"location":"OLDERRELEASES/#version-358-16th-august-2020","title":"Version 3.5.8 (16th August 2020)","text":"<ul> <li>Now supports spaces in Attract-Mode media paths (Thank you to user 'o0alucard0o' for pointing this out)</li> </ul>"},{"location":"OLDERRELEASES/#version-357-31st-july-2020","title":"Version 3.5.7 (31st July 2020)","text":"<ul> <li>Now uses regular expressions when converting text to Pegasus format for better compatibility</li> <li>Removed 'extensions' when generating Pegasus game list, as it isn't required</li> </ul>"},{"location":"OLDERRELEASES/#version-356-30th-july-2020","title":"Version 3.5.6 (30th July 2020)","text":"<ul> <li>Added 'neogeocd' platform (Thank you to 'igno2k' and 'meveric' for suggesting it)</li> <li>'screenscraper' module now supports region for screenshots (Thank you to 'cameronhimself' for pointing this out)</li> <li>Low disk space check for cache is now calculated from cache folder location</li> <li>Skyscraper initial output now shows frontend and extras when generating game lists</li> <li>Changed 'gamelistFolder' config.ini option to 'gameListFolder' but kept old variable name for backwards compatibility</li> <li>Added 'gameListBackup' config.ini option to allow for game list backups being created on each run (Thank you to 'igno2k' for suggesting it)</li> <li>Attract-Mode now recognizes '$HOME' in emulator file</li> <li>Refactored Attract-Mode media folder getters</li> <li>Fixed rare faulty matches from 'esgamelist' module in cases where last part of 'path' was a match with filename (Thank you to 'akamming' for reporting this)</li> <li>Exporting for Pegasus frontend now supports preservation of old game list key-value pairs (Thank you to user 'HugLifeTiZ' for suggesting this)</li> <li>'--cache report' now also adheres so excludeFiles and includeFiles (Thank you to user 'spilinek' for pointing this out)</li> </ul>"},{"location":"OLDERRELEASES/#version-355-18th-may-2020","title":"Version 3.5.5 (18th May 2020)","text":"<ul> <li>Fixed bug in 'igdb' module where it still used old hardcoded key (Thank you to 'stlbluesfan' for reporting this)</li> </ul>"},{"location":"OLDERRELEASES/#version-354-14th-may-2020","title":"Version 3.5.4 (14th May 2020)","text":"<ul> <li>Hints file converted to xml (hints.txt -&gt; hints.xml)</li> <li>Moved documentation resources into 'docs' folder</li> <li>Added 'videoPreferNormalized' config.ini option for use with the 'screenscraper' module</li> </ul>"},{"location":"OLDERRELEASES/#version-353-11th-may-2020","title":"Version 3.5.3 (11th May 2020)","text":"<ul> <li>MAJOR: Added video conversion support through config.ini option 'videoConvertCommand=\"COMMAND %i %o\"' option. See docs for more details</li> <li>Removed deprecated <code>&lt;cover&gt;</code> node and replaced it with <code>&lt;thumbnail&gt;</code> for ES gamelist generation (Thank you to 'yisraeldov' for letting me know)</li> <li>Added simple error handling for media network requests</li> <li>'--flags help' and '--cache help' no longer requires '-p PLATFORM' to be set</li> <li>Changed 'worldofspectrum' scraping module to use https</li> </ul>"},{"location":"OLDERRELEASES/#version-352-29th-april-2020","title":"Version 3.5.2 (29th April 2020)","text":"<ul> <li>Hid deprecated options from '--help'. Deprecated options still work just aren't shown</li> <li>Updated 'Simple Mode' to use the new '--flags' options</li> </ul>"},{"location":"OLDERRELEASES/#version-351-28th-april-2020","title":"Version 3.5.1 (28th April 2020)","text":"<ul> <li>Fixed minor bug in 'daphne' when it only has one rom in 'daphne/roms'</li> </ul>"},{"location":"OLDERRELEASES/#version-350-27th-april-2020","title":"Version 3.5.0 (27th April 2020)","text":"<ul> <li>For 'screenscraper', 'thegamesdb', 'mobygames' and 'arcadedb' Skyscraper will now no longer fetch the artworks if user has requested it to remain uncached (Thank you to user 'herbymachine' for the request)</li> <li>Added '--skipexistingmedia' option to allow for faster gamelist generation in cases where some artwork already exists in the gamelist media folder (Thank you to 'jacrify' for suggesting this)</li> <li>Added '--flags' command-line option that collects certain flag-like options into one</li> <li>Added deprecated warnings to all options that are now moved to the '--flags' option</li> <li>Added '*.cue' extension to '3do' platform (Thank you to 'therealdealneil' for the suggestion)</li> <li>Implemented a hack for the 'daphne' platform that will add the game info to the 'game.daphne' folders instead of the 'game.zip' files (Thank you to 'AlCzervik' for pointing this out)</li> </ul>"},{"location":"OLDERRELEASES/#version-3410-20th-april-2020","title":"Version 3.4.10 (20th April 2020)","text":"<ul> <li>Re-implemented double-check when saving artwork to cache to avoid 0-byte files on systems with a broken libpng (Thank you to 'jacrify' for letting me know)</li> </ul>"},{"location":"OLDERRELEASES/#version-349-17th-april-2020","title":"Version 3.4.9 (17th April 2020)","text":"<ul> <li>Added 'wiiu' platform (Thank you to 'minilandl' for suggesting it)</li> </ul>"},{"location":"OLDERRELEASES/#version-348-14th-april-2020","title":"Version 3.4.8 (14th April 2020)","text":"<ul> <li>Lowered sanity check limit of 1024 bytes for artwork from 'screenscraper' to 256 bytes (Thank you to user 'Paul-Colucci' for reporting this)</li> </ul>"},{"location":"OLDERRELEASES/#version-347-12th-april-2020","title":"Version 3.4.7 (12th April 2020)","text":"<ul> <li>If '--onlymissing' is set the initial first found rom check is ignored (Thank you to user 'Paul-Colucci' for reporting this)</li> </ul>"},{"location":"OLDERRELEASES/#version-346-9th-april-2020","title":"Version 3.4.6 (9th April 2020)","text":"<ul> <li>Implemented nameTemplate as config.ini option. See CONFIGINI.md doc for explanation (Thank you to user 'vg8020' for suggesting this)</li> </ul>"},{"location":"OLDERRELEASES/#version-345-7th-april-2020","title":"Version 3.4.5 (7th April 2020)","text":"<ul> <li>Minor fix to 'screenscraper' romnom query</li> </ul>"},{"location":"OLDERRELEASES/#version-344-7th-april-2020","title":"Version 3.4.4 (7th April 2020)","text":"<ul> <li>Remove '.bin' support for 'saturn' platform since '.cue' is already in there. This caused double-entries in gamelists (Thank you to user 'joaoluizcarvalho' for pointing this out)</li> <li>Now handles faulty login (incorrectly entered in config.ini) better with 'screenscraper'</li> <li>Fixed bug that caused 'pegasus' launch command to be entered incorrectly (Thank you to user 'Itetrel' for letting me know)</li> <li>Added '--onlymissing' CLI option which allows users to skip files that already have any kind of data cached from any source</li> <li>Now clearly states what happened when a request timed out when using 'screenscraper' (Thank you to 'seriema' for pointing this out)</li> </ul>"},{"location":"OLDERRELEASES/#version-343-14th-march-2020","title":"Version 3.4.3 (14th March 2020)","text":"<ul> <li>All arcade platforms now use 'flyer' from 'screenscraper' for cover artwork instead of 'box-2D' (Thank you to user 'aidy80s' for suggesting this)</li> </ul>"},{"location":"OLDERRELEASES/#version-342-26th-february-2020","title":"Version 3.4.2 (26th February 2020)","text":"<ul> <li>Improved filename versioning removal for optimal query generation</li> <li>Updated 'mameMap.csv' with latest Mame v0.218 listings</li> <li>Added support for 'wheel' artwork type in 'arcadedb' scraping module</li> <li>Now supports symlinked paths inside of the input folder (Thank you to rhunjadi for pointing this out)</li> </ul>"},{"location":"OLDERRELEASES/#version-341-11th-february-2020","title":"Version 3.4.1 (11th February 2020)","text":"<ul> <li>Further optimized artwork space requirements. Now checks if original takes up less space than resized artwork, then forces use of original for those cases</li> <li>The 'thegamesdb' module now also supports wheel and marquee for the games that have them (Thank you to 'tv21' for pointing this out)</li> <li>Updated developer and publisher json list for 'thegamesdb'</li> </ul>"},{"location":"OLDERRELEASES/#version-340-4th-february-2020","title":"Version 3.4.0 (4th February 2020)","text":"<ul> <li>Disabled config.ini migration as most people should be migrated now</li> <li>Added 'launcher' option to 'simple mode' when using 'pegasus' frontend</li> <li>Added 'excludeFiles' config option that allows excluding certain files when scraping (Thank you to 'timothybrown' for suggesting this)</li> <li>Added 'includeFiles' config option that allows only including certain files when scraping</li> <li>Added '--excludefiles' cli option that allows excluding certain files when scraping</li> <li>Added '--includefiles' cli option that allows only including certain files when scraping</li> <li>If 'noresize' is set all images are now saved to cache in their original format and size instead of always converting them to PNG's (Thank you to 'krcroft' for requesting this)</li> <li>Added 'jpgQuality' config option that sets the default JPG quality (0-100) when '--noresize' is NOT set. Screenshots and images with transparency are still saved as PNG's.</li> <li>Upped 'screenscraper' request limiter to 1.2 seconds per request to avoid 'maximum threads per minute reached' error message</li> </ul>"},{"location":"OLDERRELEASES/#version-338-12th-january-2020","title":"Version 3.3.8 (12th January 2020)","text":"<ul> <li>Fixed bug in platform alias for 'pc (microsoft windows)' which was missing the last ')' bracket (Thank you to 'o0alucard0o' for reporting this)</li> </ul>"},{"location":"OLDERRELEASES/#version-337-8th-january-2020","title":"Version 3.3.7 (8th January 2020)","text":"<ul> <li>Added the option to add frontend specific config sections to set artwork xml and other relevant configuration parameters per frontend</li> </ul>"},{"location":"OLDERRELEASES/#version-336-5th-january-2020","title":"Version 3.3.6 (5th January 2020)","text":"<ul> <li>Skipped file now includes platform in the filename (Thanks to 'parker-hemphill' for suggesting this)</li> <li>Now handles the '**' error message from ScreenScraper (Thank you to 'GiulioCentorame' for reporting this)</li> <li>Updated 'thegamesdb' to include the 'v1' prefix (Thank you to 'Clyde' for letting me know)</li> </ul>"},{"location":"OLDERRELEASES/#version-335-15th-december-2019","title":"Version 3.3.5 (15th December 2019)","text":"<ul> <li>Updated 'screenscraper' API to support new system name json format (Thank you to 'Micket' for letting me know)</li> </ul>"},{"location":"OLDERRELEASES/#version-334-8th-december-2019","title":"Version 3.3.4 (8th December 2019)","text":"<ul> <li>'igdb' module global key has been removed from Skyscraper. They have moved to free personal keys instead (this is good news!). To get one, register at https://api.igdb.com (Thank you to 'stlbluesfan' for letting me know)</li> <li>Fixed disk space check so it also works for 'attractmode' frontend</li> <li>Updated 'attractmode' to save overviews in correct location and format (Thanks to 'barolo' for letting me know, thanks to 'teeedubb' and 'barolo' for testing)</li> <li>For 'attractmode' added semicolon detection for 'snaps'/'video' parsing for determining resource folders (Thanks to 'barolo' for pointing this out)</li> <li>Removed rom limit on 'igdb' module</li> </ul>"},{"location":"OLDERRELEASES/#version-333-21st-november-2019","title":"Version 3.3.3 (21st November 2019)","text":"<ul> <li>Added support for the Nintendo 3DS platform as '3ds' (Thank you to 'barolo' for suggesting this)</li> <li>Fixed system id for 'coleco' platform when using the 'screenscraper' module causing roms not to be recognized (Thank you to 'DMahlon' for reporting this)</li> </ul>"},{"location":"OLDERRELEASES/#version-332-4th-november-2019","title":"Version 3.3.2 (4th November 2019)","text":"<ul> <li>Added '.gcm' file extension to Gamecube platform (Thank you to 'mrsilver76' for suggesting this)</li> <li>The '-e' option can now be used to optionally set the Pegasus launch command (Thank you to Sixdd6' for suggesting this)</li> <li>Refined 'Found/Skipped' output a bit</li> </ul>"},{"location":"OLDERRELEASES/#version-331-17th-october-2019","title":"Version 3.3.1 (17th October 2019)","text":"<ul> <li>Added new '--cache edit:new=' option for efficient batch adding of a resource of a certain type <li>Improved ctrl+c handling</li> <li>Protected cache write calls from ctrl+c obstruction</li>"},{"location":"OLDERRELEASES/#version-330-15th-september-2019","title":"Version 3.3.0 (15th September 2019)","text":"<ul> <li>MAJOR: File identification now uses new quick id method for up to 75% faster processing (Thank you to 'langest' for finally making me look into this)</li> <li>Added 'pc98' platform (Thank you to 'leosmeira' for suggesting it)</li> <li>Added 'pokemini' platform (Thank you to 'leosmeira' for suggesting it)</li> <li>Renamed all 'sha1' file id's to 'id' as sha1 was misleading</li> <li>Changed relevant defines to constexpr</li> <li>ScreenScraper now always prioritizes the 'video-normalized' above 'video' (Thank you to 'JuanVCS' for suggesting this)</li> <li>Fixed bug in ScreenScraper retry code which made it retry more than necessary</li> </ul>"},{"location":"OLDERRELEASES/#version-328-31st-august-2019","title":"Version 3.2.8 (31st August 2019)","text":"<ul> <li><code>--cache report</code> now supports symlinks (Thank you to 'vanativo' for reporting this)</li> </ul>"},{"location":"OLDERRELEASES/#version-327-31st-august-2019","title":"Version 3.2.7 (31st August 2019)","text":"<ul> <li>The '--cache report' option now adhere to the '--nosubdirs' option (Thank you to 'vanativo' for reporting this)</li> </ul>"},{"location":"OLDERRELEASES/#version-326-24th-august-2019","title":"Version 3.2.6 (24th August 2019)","text":"<ul> <li>Fixed bug where entering a correct fronted in simple mode would loop the question (Thank you to 'thadboyd' for reporting this)</li> </ul>"},{"location":"OLDERRELEASES/#version-325-21st-august-2019","title":"Version 3.2.5 (21st August 2019)","text":"<ul> <li>EmulationStation module now converts to '' entry for all supported platform suffixes (Thank you to 'kgonepostl' for reporting this)"},{"location":"OLDERRELEASES/#version-324-19th-august-2019","title":"Version 3.2.4 (19th August 2019)","text":"<ul> <li>Implemented JSON flaw workaround for the ScreenScraper module</li> </ul>"},{"location":"OLDERRELEASES/#version-323-13th-august-2019","title":"Version 3.2.3 (13th August 2019)","text":"<ul> <li>MAJOR: Added support for the 'Pegasus' frontend (set with '-f pegasus')</li> <li>Now checks for, and removes, double bracket notes in final game list title</li> <li>Fixed minor bug in the 3D gamebox effect renderer</li> <li>Completely transparent images are no longer saved when compositing (Thank you to metallkopf for getting me to finally fix this)</li> <li>Optimized the final game list assembling code to use game entry references instead of copies</li> <li>Optimized all cache resource iterations to use const references instead of copies</li> <li>Optimized the entire codebase by removing all Qt-centric foreach iterate-by-copy to use references instead</li> <li>Fixed bug where 'screenscraper' would only look for ESRB age classification</li> <li>Potential faulty JSON replies from Screenscraper are now saved to '/home/USER/.skyscraper/screenscraper_error.json' for easier debugging</li> </ul>"},{"location":"OLDERRELEASES/#version-322-3rd-august-2019","title":"Version 3.2.2 (3rd August 2019)","text":"<ul> <li>Added 'bat' scripts to sha1 special handling list (please purge platforms using 'bat' files and rescrape)</li> <li>Now discards 'ZZZ(notgame)' results from ScreenScraper</li> <li>Fixed double-quote issue when reading titles from scummvm.ini</li> <li>Made location of scummvm.ini configurable in config.ini</li> <li>Fixed bug in roman and integer numeral conversion functions</li> <li>Rewrote the entire 'screenscraper' module to use JSON instead of XML</li> </ul>"},{"location":"OLDERRELEASES/#version-321-15th-july-2019","title":"Version 3.2.1 (15th July 2019)","text":"<ul> <li>Fixed bug in 'mobygames' module that could cause an endless loop while getting cover</li> </ul>"},{"location":"OLDERRELEASES/#version-320-8th-july-2019","title":"Version 3.2.0 (8th July 2019)","text":"<ul> <li>Improved output of edit mode to show queue size and initial prioritized resources</li> <li>Now clearly shows missing resources when adding resources in editing mode</li> <li>Made '--cache vacuum' more verbose at verbosity level 2 or higher</li> <li>Removed platform check for screenscraper module as it wasn't really necessary</li> <li>Added 'videoSizeLimit' config variable (Thank you to 'silverfr0st' for suggesting this)</li> <li>Now also processes brackets for skipped games (Thanks to 'hexive' for pointing this out)</li> <li>Added 'arcadia' and 'astrocde' MESS platforms (Thank you to 'raphkoster' for suggesting these)</li> <li>Added '--cache report:missing=' option (Thank you to JaymesRS for suggesting this) <li>Added '--fromfile' option allowing you to work on a subset of files taken from a file. Compatible with files created using the '--cache report' option</li> <li>MobyGames module now includes 'platform' id query when relevant. Should improve result accuracy</li> <li>Added region support for MobyGames cover artwork</li> <li>Added A LOT of regions to region autodetection in general</li> <li>Now no longer creates media folders when in resource gathering mode</li> <li>Moved help texts for '--cache' options to '--cache help'</li>"},{"location":"OLDERRELEASES/#version-314-23rd-march-2019","title":"Version 3.1.4 (23rd March 2019)","text":"<ul> <li>Refactored network communication class</li> <li>Added request download size limit to work around possible bug in ScreenScraper API</li> </ul>"},{"location":"OLDERRELEASES/#version-313-12th-march-2019","title":"Version 3.1.3 (12th March 2019)","text":"<ul> <li>Improved 'screenscraper' error handling</li> </ul>"},{"location":"OLDERRELEASES/#version-312-10th-march-2019","title":"Version 3.1.2 (10th March 2019)","text":"<ul> <li>Added support for Moonlight '*.ml' extension for all platforms</li> <li>Added 'ps2' platform for use with Moonlight and all other supported Ps2 extensions</li> <li>Added 'steam' platform for use with Moonlight '*.ml' files</li> <li>Fixed minor bug in CRC checksum calculator for 'screenscraper'</li> <li>Improved workarounds for ScreenScraper XML errors</li> </ul>"},{"location":"OLDERRELEASES/#version-311-8th-march-2019","title":"Version 3.1.1 (8th March 2019)","text":"<ul> <li>Worked around a bug in the 'screenscraper' xml output improving stability</li> <li>Added limiter to media getter functions for 'screenscraper' which should improve stability</li> </ul>"},{"location":"OLDERRELEASES/#version-310-2th-march-2019","title":"Version 3.1.0 (2th March 2019)","text":"<ul> <li>MAJOR: Added '--cache edit' command line option which allows viewing, editing and deleting cached resources for the roms in the queue. Narrow the queue down by providing file names on command line or by using '--startat ' and '--endat ' <li>Added 'zx81' platform. Note! The only module that supports it is the 'screenscraper' module</li>"},{"location":"OLDERRELEASES/#version-305-26th-february-2019","title":"Version 3.0.5 (26th February 2019)","text":"<ul> <li>Fixed and improved ES metadata preservation code</li> </ul>"},{"location":"OLDERRELEASES/#version-304-18th-february-2019","title":"Version 3.0.4 (18th February 2019)","text":"<ul> <li>Improved Amiga CD32 disc image support to prep for the upcoming support in Amiberry (Thank you to 'HoraceAndTheSpider' for the heads up)</li> <li>Added check for Qt5.4.0 and ignores QStorageInfo include if requirement not met (Thank you to 'ByteThis' for reporting this issue)</li> <li>Improved work around to fix invalid XML returned by ScreenScraper</li> </ul>"},{"location":"OLDERRELEASES/#version-303-16th-february-2019","title":"Version 3.0.3 (16th February 2019)","text":"<ul> <li>Worked around a flaw in the returned screenscraper xml results which caused many games to not be recognized due to invalid xml being returned (Thank you to 'Brunnis' for reporting this)</li> <li>Improved SIGINT handler to now allow unclean exit if user is VERY adament about it</li> </ul>"},{"location":"OLDERRELEASES/#version-302-14th-february-2019","title":"Version 3.0.2 (14th February 2019)","text":"<ul> <li>Upped the rom limit from 5 to 35 for the \"igdb\" module</li> <li>Upped the rom limit from 25 to 35 for the \"mobygames\" module</li> <li>Added media cache config options to module section</li> <li>Add Sharp X1 platform as \"x1\"</li> <li>Now exits nicely when running low on disk space</li> <li>Added 'spaceCheck=' to config.ini <li>Fixed crash when using '--startat' and '--endat' where the '--endat' file name came before the '--startat' file name. Note! What 'ls' reports in alphabetical order is not always what Skyscraper see as it it locale specific. So be aware of this. A huge thanks to 'Gemba' for taking the time to investigate this bug thoroughly.</li> <li>Fixed bug in game list metadata preservation when using relativePaths and '' entries (thank you to 'HumanRob' for reporting this) <li>Fixed game list entries skipping for 'relativePaths' and '' instances <li>Skyscraper now saves the cache and exits nicely on ctrl+c (SIGINT) (thanks to 'krcroft' for pointing this out)</li> <li>The 'screenscraper' module now includes 'systemeid' in the query for better results</li> <li>Now skips the game list assembling when in gathering mode</li> <li>Now skips cache saving when in game list generation mode</li> <li>Output now says whether it was a gathering run or a game list generation run</li>"},{"location":"OLDERRELEASES/#version-301-27th-january-2019","title":"Version 3.0.1 (27th January 2019)","text":"<ul> <li>Added note for '--query' option when user forgets to add a file name on command line</li> <li>Fixed minor bugs in aliasMap, mameMap and whdLoad map lookups</li> </ul>"},{"location":"OLDERRELEASES/#version-300-23rd-january-2019","title":"Version 3.0.0 (23rd January 2019)","text":"<ul> <li>Game list creation and media compositing now only processed when leaving out the \"-s\" option</li> <li>Now converts textual \"\\n\" in descriptions to newlines. Useful when importing textual data (Thank you to \"scthirouin\" for requesting it)</li> <li>Added disk space check. Now aborts if disk has less than 200 megs left</li> <li>Updated \"igdb\" API til APIv3000. Key now global for all users</li> <li>Fixed ES game list release dates by adding \"T000000\" (Thank you to \"michaelbaudino\" for noticing)</li> <li>Added \"subdirs\" to config.ini (Thank you to \"otherguy\" for noticing it was missing)</li> <li>\"--startat\" and \"--endat\" now supports current workdir file paths</li> <li>Changed \"allowExtension\" config variable to \"addExtensions\"</li> <li>Changed \"noHints\" config variable to \"hints\"</li> <li>Changed \"noBrackets\" config variable to \"brackets\"</li> <li>Changed \"noResize\" config variable to \"resize\"</li> <li>Removed \"--updatedb\" cli option as it was deprecated (use \"--cache refresh\" instead)</li> <li>Removed \"--nolocaldb\" cli option as it is irrelevant after 3.0.0 usage changes</li> <li>Changed \"--allowext\" cli option to \"--addext\"</li> <li>Removed \"localDb\"/\"cache\" config sections and moved options to \"main\"</li> <li>Removed \"userCreds\" option from main and platform sections in config.ini. They should be set in scraping module section instead</li> <li>Removed \"scraper\" config.ini variable as it made no sense to ever set it like that</li> <li>Changed \"startat\" config.ini option to \"startAt\" to conform with style of other variables</li> <li>Changed \"endat\" config.ini option to \"endAt\" to conform with style of other variables</li> <li>Fixed \"--relative\" option when combined with roms in subdirs</li> <li>\"--unattend\" options now answers \"y\" to all \"--cache purge:\" prompts automatically</li> <li>Added \"regionPrios\" and \"langPrios\" variables to config.ini for main and platform sections</li> <li>Added auto-migration from old config.ini format to v3.0.0 format</li> <li>Added auto-migration from \"dbs\" folder to \"cache\" folder</li> <li>Optimized \"--cache validate\" A LOT</li> <li>Now converts ES game list entries to  entries if a .cue or .m3u file is found in a subfolder. This causes the information and artwork to be shown when selecting the folder in ES rather than the .cue or .m3u file inside the subfolder. This is very useful for psx scraping"},{"location":"OLDERRELEASES/#version-295-22nd-december-2018","title":"Version 2.9.5 (22nd December 2018)","text":"<ul> <li>MAJOR: Added option \"--purgedb vacuum\" which vacuums all resources not related to your current romset. Remember to make backups of your cache before using this</li> <li>MAJOR: Added option \"--purgedb all\" that purges all resources for the selected platform. Remember to make backups of your cache before using this</li> <li>MAJOR: Added \"--symlink\" option which forces cached videos to be symlinked to destination instead of being copied when scraping with the \"localdb\" scraping module</li> <li>MAJOR: Added \"esgamelist\" emulationstation gamelist.xml scraping module. Contributed by \"mgerhardy\". Rewritten by me to better conform to Skyscraper design</li> <li>MAJOR: Added aliasMap.csv that forces the use of a title alias when searching for specific filenames</li> <li>Removed version bracket tag for Amiga lha files</li> <li>Improved getCompareTitle for mame games and lha files</li> <li>Code cleanup for sqrNotes</li> <li>Added the \"ti99\" platform. (Thank you to \"jhbeskow\" for suggesting it)</li> </ul>"},{"location":"OLDERRELEASES/#version-291-15th-december-2018","title":"Version 2.9.1 (15th December 2018)","text":"<ul> <li>Fixed bug in \"screenscraper\" module when using --unpack where files exceeding limits would get checksummed as the \"Point Blank\" game. (Thank you to CookiePLMonster for reporting this issue)</li> <li>Raised --unpack size limit to 8 megs</li> </ul>"},{"location":"OLDERRELEASES/#version-290-13th-december-2018","title":"Version 2.9.0 (13th December 2018)","text":"<ul> <li>MAJOR: Now looks up Amiga lha files in the Amiberry \"whdload_db.xml\" and retrieves data from \"openretro.org\" based on the uuid from the xml</li> <li>Added search based fallback pass for Amiga when game isn't found via uuid</li> <li>Added \"\" effect to compositor. Check here for more info (Thank you to \"jakejm79\" for suggesting this) <li>\"mobygames\" module now uses https</li> <li>Fixed bug in \"openretro\" module where \"developer\" would potentially scrape wrong under certain circumstances</li> <li>Improved \"description\" scraping for \"openretro\" module</li> <li>Improved bracket tag handling for Amiga lha files A LOT</li> <li>Fixed minor pass 2 bug when using search based sources</li> <li>Added a pass for integer to roman conversion for search based sources (eg. \"4\" converts to \"IV\")</li> <li>\"the\" matching now uses regular expression for better precision</li> <li>Added \"mame-*\" platforms to \"mameMap\" name load list</li>"},{"location":"OLDERRELEASES/#version-283-8th-december-2018","title":"Version 2.8.3 (8th December 2018)","text":"<ul> <li>Added \"region\" and \"lang\" options to \"[platform]\" section of config.ini</li> <li>Added \"noResize\" variable to \"[localDb]\" config.ini section</li> <li>Fixed bug where \"--query\" would stop working when region was autodetected</li> </ul>"},{"location":"OLDERRELEASES/#version-282-7th-december-2018","title":"Version 2.8.2 (7th December 2018)","text":"<ul> <li>Now autodetects region from filename and prioritizes it when scraping with \"screenscraper\" unless user has forced region with \"--region\" option (thank you to \"movisman\" for suggesting this)</li> <li>Fixed issue where \"wheel\" artwork would not be fetched for specified region even though it exists</li> <li>Added \".cue\" file extension to Amiga</li> </ul>"},{"location":"OLDERRELEASES/#version-281-25th-november-2018","title":"Version 2.8.1 (25th November 2018)","text":"<ul> <li>Now loads tgdb json files from \"~/.skyscraper\"</li> </ul>"},{"location":"OLDERRELEASES/#version-280-4th-november-2018","title":"Version 2.8.0 (4th November 2018)","text":"<ul> <li>Now tries to preserve EmulationStaton gamelist.xml metadata unless new incoming data exists</li> <li>Now tries to preserve AttractMode romlist metadata unless new incoming data exists</li> <li>Improved terminal output a bit with fflush and progress dots</li> <li>Now looks for 'definitions.dat' in base import folder before trying import/[platform] folder</li> </ul>"},{"location":"OLDERRELEASES/#version-278-21st-october-2018","title":"Version 2.7.8 (21st October 2018)","text":"<ul> <li>Added CRC32 checksum attribute to 'screenscraper' pass</li> <li>Changed the 'import' folder to also look into 'import/[platform]' if it exists so users can create imports per platform. Old method also works (Thanks to tacodog for suggesting this)</li> <li>Added 'mpixels' attribute to compositor layers that allows users to scale images to a desired area size instead of using width and height (Thank you to Vynce for suggesting this)</li> </ul>"},{"location":"OLDERRELEASES/#version-277-10th-october-2018","title":"Version 2.7.7 (10th October 2018)","text":"<ul> <li>Fixed instances where '--query' would be applied to all roms if a faulty filename was given on command line (Thank you to Razile89 for reporting this)</li> </ul>"},{"location":"OLDERRELEASES/#version-276-7th-october-2018","title":"Version 2.7.6 (7th October 2018)","text":"<ul> <li>Added 'Found', 'Not found' and 'Total' to output</li> <li>Re-added 'aga' Amiga detection for OpenRetro after refactoring</li> <li>Added 'resource' attribute to 'output' nodes which enables user to directly export wheel as marquee by adding a  node to artwork.xml</li> </ul>"},{"location":"OLDERRELEASES/#version-275-21st-september-2018","title":"Version 2.7.5 (21st September 2018)","text":"<ul> <li>Fixed a bug where 'brackets=\"false\"' in config.ini would be flipped (Thanks to Vynce for reporting this)</li> <li>Completely refactored pass procedures for cleaner code and to enable '--query' option</li> <li>Added '--query' command line option. This option requires a single rom file to be passed on command line aswell, otherwise it will be ignored (Thank you to AnalogHero and Vynce for suggesting this)</li> <li>Added scrapers to 'psx' and 'pc' platforms when using Simple Mode</li> </ul>"},{"location":"OLDERRELEASES/#version-274-11th-september-2018","title":"Version 2.7.4 (11th September 2018)","text":"<ul> <li>Added '--unpack' command line option and config.ini options which enables the calculation of the checksum of the file inside 7z and zip files instead of the base file itself. Only relevant for 'screenscraper' module and requires 'p7zip' installed. (<code>$ sudo apt-get install p7zip-full</code> for Debian base systems)</li> <li>Added 'inputFolder' to [main] section of config.ini</li> <li>Added 'gamelistFolder' to [main] section of config.ini</li> <li>Added 'mediaFolder' to [main] section of config.ini</li> </ul>"},{"location":"OLDERRELEASES/#version-273-4th-september-2018","title":"Version 2.7.3 (4th September 2018)","text":"<ul> <li>Improved image cropping to now also crop black borders, but only for screenshots (Thank you to 'chipsnblip' for suggesting this)</li> <li>Made 'import' base folder configurable in config.ini</li> <li>Fixed bug in 'import' scraping module that caused dummy titles to be saved to localdb when scraping media resources</li> <li>Changed 'curl' to 'wget' in update_skyscraper.sh script to avoid curl requirement</li> </ul>"},{"location":"OLDERRELEASES/#version-272-2nd-september-2018","title":"Version 2.7.2 (2nd September 2018)","text":"<ul> <li>Fixed bug that caused the  nodes to disappear from gamelist.xml when skipping entries (Thanks to ozy24 for reporting this) <li>Added ###TITLE### tag to import scraping module (Thanks to ozy24 for suggesting this)</li> <li>Updated import definition examples and documentation to include ###TITLE### tag and ###AGES### tag</li> <li>Updated priorities.xml.example to also include 'import' under 'title'</li> <li>Added 'Did you know' hints when running Skyscraper</li> <li>Added '--nohints' to disable hints. Can also be set in config.ini</li>"},{"location":"OLDERRELEASES/#version-271-28th-august-2018","title":"Version 2.7.1 (28th August 2018)","text":"<ul> <li>Made sure 'Skyscraper's choice' only appears once per entry when using interactive mode</li> <li>Added 'sidescaling' attribute to 'gamebox' compositor effect node (Thanks to darkvader for suggesting this)</li> </ul>"},{"location":"OLDERRELEASES/#version-270-27th-august-2018","title":"Version 2.7.0 (27th August 2018)","text":"<ul> <li>Added scraping module specific configs in config.ini to allow different userCreds per scraping module</li> <li>Added 'igdb' scraping module</li> <li>Added '--interactive' mode which will ask user to choose the best result</li> <li>Changed release date patterns to regexps for cleaner code</li> <li>Fixed bug which caused  tags to disappear when skipping entries with emulationstation (thank you to ozy24 for reporting this) <li>Reached commit number 1000!!! I'm gonna celebrate by coding some more</li> <li>Conformed [homedir] to be '~' everywhere</li> <li>Added several aliases to platforms to better support all scraping modules</li> <li>Added option for custom header when initiating network requests</li> <li>When generating search names, all instances of ' v.X' and ' rev.X' are now removed prior to search</li> <li>Added '--unattendskip' option to allow for always skipping existing entries without user input (thank you to ozy24 for suggesting this)</li>"},{"location":"OLDERRELEASES/#version-260-25th-august-2018","title":"Version 2.6.0 (25th August 2018)","text":"<ul> <li>Added 'mobygames' scraping module</li> </ul>"},{"location":"OLDERRELEASES/#version-258-24th-august-2018","title":"Version 2.5.8 (24th August 2018)","text":"<ul> <li>Fixed bug in 'genesis' platform when using the 'screenscraper' module</li> <li>Added 'megacd' platform support</li> </ul>"},{"location":"OLDERRELEASES/#version-257-21st-august-2018","title":"Version 2.5.7 (21st August 2018)","text":"<ul> <li>Added 'Super Famicom' as alias to 'Super Nintendo'</li> <li>Added restrictions for 'openretro' scraping module and removed it from Simple Mode</li> </ul>"},{"location":"OLDERRELEASES/#version-256-20th-august-2018","title":"Version 2.5.6 (20th August 2018)","text":"<ul> <li>Added 'atari800' platform support</li> </ul>"},{"location":"OLDERRELEASES/#version-255-18th-august-2018","title":"Version 2.5.5 (18th August 2018)","text":"<ul> <li>Changed '--updatedb' to '--refresh' as the name confused users. '--updatedb' still works, but is considered deprecated</li> <li>Added 'ss' and 'uk' regions to 'screenscraper' module which should fix A LOT of games that weren't found when using this module</li> <li>Added unofficial OSX support to the install script</li> </ul>"},{"location":"OLDERRELEASES/#version-254-10th-august-2018","title":"Version 2.5.4 (10th August 2018)","text":"<ul> <li>Added 'extensions=' to platform sections of config.ini to allow overwriting the default extensions for any platform</li> <li>Added '--maxfails [int]' command line option and 'maxFails=[int]' config.ini option to allow user to set a higher allowed initial 'Not found' before quitting</li> </ul>"},{"location":"OLDERRELEASES/#version-253-24th-july-2018","title":"Version 2.5.3 (24th July 2018)","text":"<ul> <li>Added '--allowext' option which will force allow a file extension for the given platform. Thank you to 'herbymachine' for suggesting this</li> <li>Added 'allowExtension' to the '~/.skyscraper/config.ini' variables for both 'main' and 'platform' specific sections. This is useful if you wish to permanently add a file extension to all or one platform when scraping</li> <li>Implemented 'developers' change in 'thegamesdb' API</li> <li>Implemented 'publishers' change in 'thegamesdb' API</li> <li>Fixed 'Tags' bug in 'screenscraper' module</li> </ul>"},{"location":"OLDERRELEASES/#version-252-13th-july-2018","title":"Version 2.5.2 (13th July 2018)","text":"<ul> <li>Fixed bug in 'thegamesdb' module that broke platform and genre detection</li> </ul>"},{"location":"OLDERRELEASES/#version-251-10th-july-2018","title":"Version 2.5.1 (10th July 2018)","text":"<ul> <li>Added '--relative' option which forces rom relative paths in gamelist for EmulationStation</li> </ul>"},{"location":"OLDERRELEASES/#version-250-8th-july-2018","title":"Version 2.5.0 (8th July 2018)","text":"<ul> <li>'thegamesdb' removed from Simple Mode scraping scripts due to new api restrictions</li> <li>Implemented new 'thegamesdb' api, be wary of monthly request limit!</li> <li>Made sure 'remaining requests' is clearly stated when using 'thegamesdb'</li> <li>Implemented request limit test which makes Skyscraper stop if limit is reached</li> <li>Made sure cli header always has correct number of dashes</li> </ul>"},{"location":"OLDERRELEASES/#version-2411-17th-june-2018","title":"Version 2.4.11 (17th June 2018)","text":"<ul> <li>Added 'mega-cd' as alias for 'segacd' platform. Thank you to user trevor7oaks for reporting this</li> </ul>"},{"location":"OLDERRELEASES/#version-2410-14th-june-2018","title":"Version 2.4.10 (14th June 2018)","text":"<ul> <li>'/home/pi' is no longer hardcoded anywhere in Skyscraper. Now always uses current user home dir</li> <li>Changed 'Estimated time total' to 'Estimated time left' in terminal output</li> </ul>"},{"location":"OLDERRELEASES/#version-249-9th-june-2018","title":"Version 2.4.9 (9th June 2018)","text":"<ul> <li>Added 'mame-advmame', 'mame-mame4all' and 'mame-libretro' platforms</li> </ul>"},{"location":"OLDERRELEASES/#version-248-31st-may-2018","title":"Version 2.4.8 (31st May 2018)","text":"<ul> <li>Fixed bug that made region default to 'wor' instead of 'eu' and 'us' if unset</li> </ul>"},{"location":"OLDERRELEASES/#version-247-30th-may-2018","title":"Version 2.4.7 (30th May 2018)","text":"<ul> <li>Added c16, c128 and vic20 platforms. c16 and c128 will scrape using c64 alias as they aren't directly supported by the sources</li> </ul>"},{"location":"OLDERRELEASES/#version-246-25th-may-2018","title":"Version 2.4.6 (25th May 2018)","text":"<ul> <li>Added 'overview' support for AttractMode. It will now create the necessary cfg files to show the game descriptions</li> <li>Added '<code>&lt;kidgame&gt;bool&lt;/kidgame&gt;</code>' output to Emulationstation gamelist generation</li> <li>Added 'ages' support in 'screenscraper' module. Will convert PEGI and ESRB to numeric</li> <li>Added 'ages' support in 'thegamesdb' module. Will convert PEGI and ESRB to numeric</li> </ul>"},{"location":"OLDERRELEASES/#version-245-8th-may-2018","title":"Version 2.4.5 (8th May 2018)","text":"<ul> <li>Added support for the 'x68000' platform</li> </ul>"},{"location":"OLDERRELEASES/#version-244-2nd-april-2018","title":"Version 2.4.4 (2nd April 2018)","text":"<ul> <li>Changed openretro 'wheel' type to 'marquee' type. It wasn't really a wheel</li> <li>'openretro' now filters out variants to avoid bad screenshots (Thank you AnalogHero)</li> <li>Now allows you to set custom dbFolder in config.ini both under main and platform sections</li> <li>For Amiga it now searches for \"Demo\", \"aga\", \"cdtv\" and \"cd32\" in filenames and converts to [] bracket names (Thanks Dom)</li> <li>Region 'wor' has been moved below 'eu' and 'us' for Screenscraper since it often returns Japanese titles (Thanks maroonout09)</li> <li>Now turns '-' into ' ' in filenames before doing searches (Thanks maroonout09)</li> <li>Simplified thread result communication with main thread from two functions to just one</li> <li>Now again properly tests for a scraping run with 30 consecutive misses, then exits</li> </ul>"},{"location":"OLDERRELEASES/#version-243-25th-march-2018","title":"Version 2.4.3 (25th March 2018)","text":"<ul> <li>Fixed modules that aren't filename based to just always return first entry (Thank you AnalogHero)</li> </ul>"},{"location":"OLDERRELEASES/#version-242-25th-march-2018","title":"Version 2.4.2 (25th March 2018)","text":"<ul> <li>Reordered options in '--help' output</li> <li>Changed help text for certain options for clarity</li> <li>Made sure import scraper uses complete baseName in case filenames have more than one dots (Thank you AnalogHero)</li> </ul>"},{"location":"OLDERRELEASES/#version-241-25th-march-2018","title":"Version 2.4.1 (25th March 2018)","text":"<ul> <li>Now auto-adds '--videos' option when using 'import' scraping module (Thank you AnalogHero)</li> <li>Fixed bug in import scraper that would hand it the wrong filename to look for</li> </ul>"},{"location":"OLDERRELEASES/#version-240-24rd-march-2018","title":"Version 2.4.0 (24rd March 2018)","text":"<ul> <li>Fixed bugs in overloaded functions for import and localdb...</li> </ul>"},{"location":"OLDERRELEASES/#version-239-23rd-march-2018","title":"Version 2.3.9 (23rd March 2018)","text":"<ul> <li>Fixed bug in network communicator that would cause everything to stall</li> </ul>"},{"location":"OLDERRELEASES/#version-238-23rd-march-2018","title":"Version 2.3.8 (23rd March 2018)","text":"<ul> <li>Implemented user credentials ('-u user:password') to set up threads for 'screenscraper' module</li> <li>Made sure artwork output gets exported, even if entry has no base artwork resource</li> <li>Changed 'verbose' to 'verbosity' to allow levels and made terminal output more useful overall</li> <li>Added '--dbstats' command line option that prints stats for the selected local dabatase cache</li> <li>Added '--purgedb' command line option that allows purging resources from localdb</li> <li>Fixed bugs in mergedb command line option</li> <li>Fixed bug in Simle Mode where 'attractmode' would not work properly (thank you Humayun)</li> </ul>"},{"location":"OLDERRELEASES/#version-237-18th-march-2018","title":"Version 2.3.7 (18th March 2018)","text":"<ul> <li>Implemented user credentials ('-u user:password') to set up threads for 'screenscraper' module</li> <li>Now checks for .lha suffix and adds spaces where appropriate to get better results</li> <li>Improved returned image data validity check (libpng errors still happen, but can be ignored)</li> <li>Rewrote the worker to main thread communication a bit</li> <li>Implemented '--startat' option that tells Skyscraper the first file to scrape</li> <li>Implemented '--endat' option that tells Skyscraper the last file to scrape</li> <li>Added thread id to terminal output</li> <li>Applied serverside artwork size limit to openretro module to avoid running out of memory</li> <li>Improved network communication class</li> </ul>"},{"location":"OLDERRELEASES/#version-236-12th-march-2018","title":"Version 2.3.6 (12th March 2018)","text":"<ul> <li>Completely rewrote the openretro parser to make use of the 'edit' page instead</li> <li>Added '*.lha' suffix to amiga platform</li> <li>Changed default scraping module for all platforms to 'localdb'</li> <li>Added 'wheel' support to 'openretro' scraping module</li> <li>Rewrote thread queue so entries are always taken alphabetically</li> <li>Now forces 4 threads for 'screenscraper' scraping module to accomodate their limits</li> <li>Updated screenscraper API to use v2</li> <li>Added 'rating' to screenscraper scraping module</li> </ul>"},{"location":"OLDERRELEASES/#version-235-24th-february-2018","title":"Version 2.3.5 (24th February 2018)","text":"<ul> <li>IMPORTANT: Fixed bug that caused resources to be mixed up between games because Qt's network cache wasn't cleared (Probably not a Qt bug, but a DAMN hard bug to spot either way). All previous Skyscraper releases have this bug, SO PLEASE UPDATE!!!</li> <li>Made 'scummvm' parsing look for config in homedir aswell ('.scummvmrc')</li> <li>Now always removes brackets from returned titles</li> <li>Now always shows current scraping module in output</li> <li>Optimized search matching even more</li> <li>No longer asks user about skipping entries if filenames are provided on command line</li> </ul>"},{"location":"OLDERRELEASES/#version-234-19th-february-2018","title":"Version 2.3.4 (19th February 2018)","text":"<ul> <li>'gamebox' effect no longer cuts top and bottom from source layer</li> <li>'gamebox' effect now handles side artwork that is too tall</li> <li>Optimized localdb mutexes</li> <li>Fixed issue where searchName could be empty and cause Skyscraper to stall for 15 minutes</li> <li>Now no longer runs screenscraper sha1 and md5 passes if filesize is 0</li> </ul>"},{"location":"OLDERRELEASES/#version-233-17th-february-2018","title":"Version 2.3.3 (17th February 2018)","text":"<ul> <li>Added 'hue' effect which changes the hue of the image</li> <li>Added 'saturation' effect which changes the color saturation of the image</li> <li>Added 'colorize' effect which renders the image using a single hue</li> <li>Added 'rotate' effect that rotates the parent layer around the x, y or z axis</li> <li>Added layer render 'mode' attribute ('overlay', 'colordodge', 'hardlight' and so on)</li> <li>Added layer 'opacity' attribute (0-100)</li> <li>Improved front and side textures for the 'gamebox' effect</li> <li>Optimized search passes a bit</li> <li>Re-added platform checking on 'screenscraper' and added all arcade platforms as aliases</li> </ul>"},{"location":"OLDERRELEASES/#version-232-13th-february-2018","title":"Version 2.3.2 (13th February 2018)","text":"<ul> <li>Added support for 'wii' and 'gc' platforms</li> <li>Added '.chd' format to a bunch of platforms</li> <li>Added more robust filtering of the faulty screenscraper 'hack-Link' results</li> <li>Added 'update_skyscraper.sh' script which enables auto-updating to latest version</li> </ul>"},{"location":"OLDERRELEASES/#version-231-13th-february-2018","title":"Version 2.3.1 (13th February 2018)","text":"<ul> <li>Fixed 'players' tag to always conform to a 1-digit format</li> <li>Now filters out \".hack-Link\" results from 'screenscraper' to avoid bad localdb data</li> <li>Added note to output about how many new resources have been added during scraping run</li> <li>Added 'color=\"#fffff\"' option to stroke effect for the geeky people (including me of course)</li> <li>Conformed 'game tags' to 'Platform, Action' format</li> <li>Fixed so 'localdb' folder isn't created inside dbs media folders</li> <li>Optimized the mameMap a bit</li> <li>Improved the searchMatch system to also consider numerals</li> <li>Now looks up 'scummvm' dummy files in 'scummvm.ini' and uses the correct game name</li> </ul>"},{"location":"OLDERRELEASES/#version-230-7th-february-2018","title":"Version 2.3.0 (7th February 2018)","text":"<p>The ARTWORK release. Check artwork documentation here * MAJOR: Completely rewrote the artwork compositing engine     * Now supports nested layers which anchors to the parent layer for easy placement     * Implemented 'balance' effect that adjusts the colors of the parent layer     * Implemented 'blur' effect that blurs the parent layer     * Implemented 'brightness' effect that adjusts the brightness of the parent layer     * Implemented 'contrast' effect that adjusts the contrast of the parent layer     * Implemented 'frame' effect that allows you to add a graphical frame to the parent layer     * Implemented 'gamebox' effect that turns the parent layer into a nice looking 3D game box     * Implemented 'mask' effect that allows you to mask out certain parts of the parent layer     * Implemented 'opacity' effect that adjusts the opacity of the parent layer     * Implemented 'rounded' effect that rounds the corners of the parent layer     * Implemented 'stroke' effect that outlines the parent layer     * Improved 'shadow' effect to adhere perfectly to softness as radius * Added '-a' command line option for setting custom artwork xml config file * Added 'artworkXml' config file options for setting custom artwork xml config file * Implemented resource system that allows user to place files in '~/.skyscraper/resources' and use them in the '~/.skyscraper/artwork.xml' layers and effects * Added 'From cache' boolean to output plus note about '--updatedb' * 'simple mode' now also accepts \"Y\" as a yes answer instead of just \"y\" * Now also looks for 'jp' region if no english region media is found for 'screenscraper' module * Now always accepts 'screenscraper' results no matter if platform matches or not * Now sets 'minMatch' to 0 by default for 'localdb' , 'arcadedb' and 'screenscraper' scraping modules. Can be overruled on command line and in config file * Made localdb more thread safe, might've fixed rare issues of resources being mixed up internally * Now works with filenames provided on command line even if they don't include full path * Added resource sources to output * Added 'wonderswan' and 'wonderswancolor' platforms</p>"},{"location":"OLDERRELEASES/#version-227-31st-january-2018","title":"Version 2.2.7 (31st January 2018)","text":"<ul> <li>Optimized shadow rendering A LOT! WROOOOOOOOOM!!!</li> <li>'simple mode' 'Do you want to run the script' answer now defaults to Y</li> <li>Fixed bug in 'simple mode' where answering 'y' to adding brackets would actually remove them</li> </ul>"},{"location":"OLDERRELEASES/#version-226a-18th-january-2018","title":"Version 2.2.6a (18th January 2018)","text":"<ul> <li>Now always sets '--updatedb' when using the import scraper</li> </ul>"},{"location":"OLDERRELEASES/#version-226-17th-january-2018","title":"Version 2.2.6 (17th January 2018)","text":"<ul> <li>Now always caches resources locally, even if pretend is set</li> <li>Optimized 'simple mode' generated script. Now has '--pretend' set for all non-local modules to avoid artwork processing on those runs. This is a lot faster and provides the same result</li> <li>Added the possibility to supply one or more filenames on the command line - it will then ONLY scrape those particular files. Platform still has to be set with '-p' for this to work</li> <li>Fixed bug where [tags] would be appended twice when using '--forcefilename'</li> </ul>"},{"location":"OLDERRELEASES/#version-225-3rd-january-2018","title":"Version 2.2.5 (3rd January 2018)","text":"<ul> <li>Improved artwork 'shadow' effect. Now renders correctly on artwork with transparency</li> <li>Added '(uncached)' to terminal output for media types that user has disabled for caching</li> <li>Now always uses existing cached resources when scraping with any scraping module. Use '--updatedb' to force a refresh</li> <li>Improved 'artwork.xml' parser to better handle xml syntax problems</li> <li>Improved '--cleandb' so it always resaves the db after a cleaning run</li> <li>Updated 'simple mode' to also include questions about '--forcefilename' and '--updatedb'</li> <li>Now always converts images to 16bit externally. Still uses 32bit internally</li> <li>Added 'pc' and 'ports' platform</li> </ul>"},{"location":"OLDERRELEASES/#version-220-31st-of-december-2017","title":"Version 2.2.0 (31st of December 2017)","text":"<ul> <li>Completely rewrote how artwork is handled. Now uses '~/.skyscraper/artwork.xml' for everything.</li> <li>Implemented 'wheel' and 'marquee' media types and rewrote EVERYTHING to make use of them. :D (this was a damn long rewrite!!!!)</li> <li>Added 'wheel' and 'marquee' media types to local database</li> <li>Added 'nocovers', 'noscreenshots', 'nowheels' and 'nomarquees' options to allow user to disable caching of those resources locally.</li> <li>Added 'noresize' option to disable resizing artwork resources when saving them to localdb. NOTE! This it NOT directly related to how artwork is rendered. Check the artwork documentation if you want to disable them when exporting the frontend artwork.</li> <li>Added support for 'fba' platform</li> </ul>"},{"location":"OLDERRELEASES/#version-211-27th-december-2017","title":"Version 2.1.1 (27th December 2017)","text":"<ul> <li>Added support for '3do', 'amstradcpc', 'coco', 'daphne', 'dragon32', 'dreamcast', 'fds' and 'gameandwatch', 'intellivision', 'ngp', 'oric', 'pc88', 'pcfx', 'saturn', 'sg-1000', 'trs-80' and 'zmachine' platforms</li> <li>Added 'forcefilename' option which forces the file name to be used in the frontend instead of the one returned by the scraping module</li> <li>Changed 'gamelist.xml' to 'game list' in 'simple mode' question</li> </ul>"},{"location":"OLDERRELEASES/#version-210-26th-december-2017","title":"Version 2.1.0 (26th December 2017)","text":"<ul> <li>Added 'simple mode' that allows users a more automated way of running Skyscraper. Invoke it by running Skyscraper with no options by simply typing 'Skyscraper'</li> <li>A bunch of code refactoring to make platform related code easier to maintain and enable better platform checking</li> </ul>"},{"location":"OLDERRELEASES/#version-206-23rd-december-2017","title":"Version 2.0.6 (23rd December 2017)","text":"<ul> <li>Added support for atarilynx, vectrex, ngpc (Neo Geo Pocket Color), sega32x, virtualboy and videopac platforms</li> <li>Changed all 'qDebug' call to 'printf' calls</li> </ul>"},{"location":"OLDERRELEASES/#version-205c-23rd-december-2017","title":"Version 2.0.5c (23rd December 2017)","text":"<ul> <li>Fixed a bug where the import module wouldn't look for all resource types during the same run. Thank you to dylosaur for discovering this.</li> </ul>"},{"location":"OLDERRELEASES/#version-205b-5th-december-2017","title":"Version 2.0.5b (5th December 2017)","text":"<ul> <li>Added support for *.7z files for all platforms.</li> </ul>"},{"location":"OLDERRELEASES/#version-205a-15th-november-2017","title":"Version 2.0.5a (15th November 2017)","text":"<ul> <li>Fixed Amiga 'adf' files not being scraped because I messed up and typed it as 'afd'. Thank you to James Kerridge for letting me know about this.</li> </ul>"},{"location":"OLDERRELEASES/#version-205-14th-november-2017","title":"Version 2.0.5 (14th November 2017)","text":"<ul> <li>Added support for 'scummvm' platform in scraping module 'thegamesdb' or 'openretro'.</li> <li>Now only removes 'the' from searchName if longer than 10 chars.</li> <li>Now always converts underscores to spaces in search- and compare names.</li> <li>Added edit distance optimization ('the sequel' will now match 'some game: the sequel' 100%).</li> </ul>"},{"location":"OLDERRELEASES/#version-204-5th-november-2017","title":"Version 2.0.4 (5th November 2017)","text":"<ul> <li>Default language is now 'en' instead of 'us'.</li> <li>Empty video tags no longer added to gamelist.xml for emulationstation.</li> </ul>"},{"location":"OLDERRELEASES/#version-203-5th-october-2017","title":"Version 2.0.3 (5th October 2017)","text":"<ul> <li>Added '--lang' and '--region' command line options. Defaults to 'us' and 'wor' if none is provided.</li> <li>Language and region support now implemented for 'screenscraper' module.</li> <li>Removed 'stats' option as it didn't make much sense anymore.</li> </ul>"},{"location":"OLDERRELEASES/#version-202-4th-october-2017","title":"Version 2.0.2 (4th October 2017)","text":"<ul> <li>Updated 'arcadedb' result parsing to fit new format</li> <li>Now scrapes 'msx' platform families correctly with the 'screenscraper' module</li> <li>Optimized file checksumming</li> <li>Fixed a bug in 'screenscraper' module not allowing platforms with multiple platform name to be recognized. (thanks to 'qqplayer' for pointing this out!)</li> </ul>"},{"location":"OLDERRELEASES/#version-201-15th-september-2017","title":"Version 2.0.1 (15th September 2017)","text":"<ul> <li>Removed 'mamedb' source files as they were no longer in use</li> <li>Slightly changed help text for scraping modules</li> <li>'thegamesdb' now properly uses Qt's XML parser</li> <li>'screenscraper' now properly uses Qt's XML parser</li> <li>Started implementing region and lang support for 'screenscraper', but still not enabled</li> </ul>"},{"location":"OLDERRELEASES/#version-200-7th-september-2017","title":"Version 2.0.0 (7th September 2017)","text":"<ul> <li>Back to basics: Removed several web sources. Now only allows the ones I have explicit permission to use.</li> <li>Properly implemented official API for 'arcadedb' module</li> <li>Added scraping module info to output per result but only when using '--verbose'</li> <li>Added check for unreasonably bad scraping runs, making Skyscraper exit if 30 of 30 files miss from the get-go</li> </ul>"},{"location":"OLDERRELEASES/#older-unsupported-releases-no-longer-available-and-dont-ask-for-them","title":"Older unsupported releases (no longer available and don't ask for them)","text":""},{"location":"OLDERRELEASES/#version-182-27th-august-2017","title":"Version 1.8.2 (27th August 2017)","text":"<ul> <li>Added support for 'coleco' platform</li> <li>Added support for 'pcengine' platform</li> <li>Added zip support to all platforms per request from users. :)</li> </ul>"},{"location":"OLDERRELEASES/#version-181-22nd-august-2017","title":"Version 1.8.1 (22nd August 2017)","text":"<ul> <li>Added 'rating' scraping to 'thegamesdb'</li> </ul>"},{"location":"OLDERRELEASES/#version-180-14th-august-2017","title":"Version 1.8.0 (14th August 2017)","text":"<ul> <li>Added 'arcadedb' scraper module with video support</li> <li>Vastly improved scraping of 'neogeo' and 'arcade' platforms in general by mapping the filenames to real names from mameMap.csv</li> <li>Improved 'neogeo' and 'arcade' search platform matching</li> </ul>"},{"location":"OLDERRELEASES/#version-174-10th-august-2017","title":"Version 1.7.4 (10th August 2017)","text":"<ul> <li>Added textual import with 'import' scraper using '~/.skyscraper/important/definitions.dat' file</li> <li>Added video import with 'import' scraper</li> <li>Improved 'uvlist' description scraping</li> <li>Now properly handles empty nodes in EmulationStation gamelist.xml export</li> </ul>"},{"location":"OLDERRELEASES/#version-173-8th-august-2017","title":"Version 1.7.3 (8th August 2017)","text":"<ul> <li>Added 'developer' support for 'uvlist' scraper</li> <li>Improved html unescaping a lot</li> <li>Cleaned up xml escaping</li> <li>Added 'import' scraper, scraping from resources located in '~/.skyscraper/import' folder</li> </ul>"},{"location":"OLDERRELEASES/#version-172-7th-august-2017","title":"Version 1.7.2 (7th August 2017)","text":"<ul> <li>Added 'uvlist' scraping module</li> <li>Added rating resource and support</li> <li>Added rating support to lemonamiga</li> <li>Added rating support to lemon64</li> <li>Added rating support to mobygames</li> </ul>"},{"location":"OLDERRELEASES/#version-171c-7th-august-2017","title":"Version 1.7.1c (7th August 2017)","text":"<ul> <li>Fixed make install</li> </ul>"},{"location":"OLDERRELEASES/#version-171-7th-august-2017","title":"Version 1.7.1 (7th August 2017)","text":"<ul> <li>Moved all source files to 'src' folder</li> <li>'~/.skyscraper' is now default folder for all files used by Skyscraper</li> <li>'/usr/local/bin/Skyscraper' is now default location for Skyscraper executable</li> <li>Refined '--help' output a bit</li> <li>Fixed lemon64 scraping</li> <li>Added 'lemonamiga' scraping module</li> <li>Added '--skipped' command line option</li> <li>Added 'make install' for correct installation of files</li> </ul>"},{"location":"OLDERRELEASES/#version-170-5th-august-2017","title":"Version 1.7.0 (5th August 2017)","text":"<ul> <li>MAJOR: Fixed and refined 'attractmode' frontend implementation, now works in a basic manner</li> <li>'attractmode' can now skip existing entries</li> <li>'emulationstation' now properly add brackets to 'name' on skipped entries</li> <li>Added check for 'db.xml' when doing '--cleandb'</li> <li>Refactored GameEntry variables</li> <li>Changed GameEntry from struct to class</li> <li>Added 'Overall title similarity' to final output</li> <li>Added 'Overall completeness' to final output</li> <li>Code refactoring here, there and everywhere</li> <li>Now accepts results where we have low editDistance, but high similarity (For instance \"Disney's Darkwing Duck\" with fileName \"Darkwing Duck\").</li> <li>Added '--nobrackets' option that disables and [] and () tags in the frontend game titles. (Thanks for the feedback 'incunabula')</li> <li>Fixed bracket parsing</li> <li>Now always uses completeBaseName since some filenames have more than one '.'</li> <li>Completely rewrote sorting algorithm. 30 lines became one with a nifty C++11 lambda :D</li> <li>Added zip format to GameGear and MSX platforms</li> <li>Now uses filenames for output image files again</li> </ul>"},{"location":"OLDERRELEASES/#version-160-1st-august-2017","title":"Version 1.6.0 (1st August 2017)","text":"<ul> <li>Now allows more resources of same type, as long as 'source' differs</li> <li>Now allows user to set priorities for local resource sources</li> <li>Fixed a bug that would nullify timestamp of local resources</li> <li>Optimized LocalDb communication to improve scraping speed</li> <li>Added README.md to dbs subfolder</li> <li>Added priorities.xml.example file to dbs subfolder. Automatically copies this to new databases when they are created if none already exists.</li> <li>Implemented '--cleandb' command line option that removes files with no resource entry</li> <li>Implemented '--mergedb' command line option that merges two local databases together</li> <li>Now no longer does sha1 for roms bigger than 50 MBs (Pi runs out of ram when reading them). Instead does sha1 on filename for those special cases.</li> <li>Removed default platform when scraping. You are now forced to put in a valid platform with '-p [platform]'</li> <li>Added more initial info when running Skyscraper</li> <li>Added '--unattend' command line option</li> <li>Added 'source' attribute to local database resources</li> <li>Removed 'mobygames' descriptions from 'openretro' scraper. Now uses native descriptions.</li> <li>Improved cover and screenshot scraping for 'openretro' module</li> <li>Disabled filling in missing data when scraping from web sources. User is meant to use 'localdb' scraping module for this.</li> <li>Implemented date formats to standardize output and better support EmulationStation requirements</li> </ul>"},{"location":"OLDERRELEASES/#version-150-27th-july-2017","title":"Version 1.5.0 (27th July 2017)","text":"<ul> <li>MAJOR: Added support for local database resources</li> <li>MAJOR: Added support for video scraping (currently supported in the 'screenscraper' scraping module)</li> <li>MAJOR: Added 'localdb' scraping module</li> <li>Added video tag in EmulationStation gamelist.xml output. Beware though, the Pi's are having a difficult time showing the videos properly.</li> <li>Added several new command line options relevant to the new video and localdb features</li> <li>Added cover, screenshot and video as part of the result output with \"YES\" or \"NO\" depending on whether they were found or not</li> <li>Fixed a bug where image tag in gamelist.xml had wrong path when using non-default path</li> <li>Now uses rom or filename (for .uae) sha1 for image filename, in case people have several roms with the same name under subdirs</li> <li>Added 'players' scraping for 'mobygames' module and improved screenshot getter even more</li> </ul>"},{"location":"OLDERRELEASES/#version-118b-24th-july-2017","title":"Version 1.1.8b (24th July 2017)","text":"<ul> <li>Implemented a slightly hacky fix that removes some (but not all) warnings caused by a known Qt bug</li> <li>Improved final sorting algorithm</li> <li>Code refactoring / polishing</li> </ul>"},{"location":"OLDERRELEASES/#version-118a-23rd-july-2017","title":"Version 1.1.8a (23rd July 2017)","text":"<ul> <li>Hardcoded screenscraper devid and password, since this seems to be the right way of doing it</li> </ul>"},{"location":"OLDERRELEASES/#version-118-23rd-july-2017","title":"Version 1.1.8 (23rd July 2017)","text":"<ul> <li>Refactored internal config handling to be MUCH cleaner</li> <li>Fixed bug in xml escaping</li> <li>Fixed the final sorting algorithm so it no longer outputs double entries</li> </ul>"},{"location":"OLDERRELEASES/#version-117-21st-july-2017","title":"Version 1.1.7 (21st July 2017)","text":"<ul> <li>Added '--nosubdirs' command line argument to exclude subdirs when scraping</li> <li>Slightly changed screen output colors and text</li> <li>Implemented generic AbstractFrontend class</li> <li>Added support for multiple frontends set with '-f'</li> <li>Changed default scraper for certain platforms based on new stats</li> </ul>"},{"location":"OLDERRELEASES/#version-116-20th-july-2017","title":"Version 1.1.6 (20th July 2017)","text":"<ul> <li>Corrected max threads from 4 to 8 in command line help text</li> <li>Fixed default config value bug</li> </ul>"},{"location":"OLDERRELEASES/#version-115-20th-july-2017","title":"Version 1.1.5 (20th July 2017)","text":"<ul> <li>Added 'msx' platform support</li> <li>Added 'psp' platform support</li> <li>Added possibility for one input platform to match many different scraper source platforms</li> </ul>"},{"location":"OLDERRELEASES/#version-114-20th-july-2017","title":"Version 1.1.4 (20th July 2017)","text":"<ul> <li>Added 'atarist' support</li> <li>Improved mobygames getScreenshot function</li> </ul>"},{"location":"OLDERRELEASES/#version-113-19th-july-2017","title":"Version 1.1.3 (19th July 2017)","text":"<ul> <li>Improved sorting by always moving \"The\" to end of game title</li> </ul>"},{"location":"OLDERRELEASES/#version-112-19th-july-2017","title":"Version 1.1.2 (19th July 2017)","text":"<ul> <li>Upped allowed number of threads to 8 (Wrooooooom!!!)</li> <li>Fixed a nasty race condition related to config file access that caused regular crashes</li> <li>Refactored config default loading to be easier to understand</li> <li>Fixed a silly memory hog that caused memory to be eaten up (not a leak, just really silly)</li> </ul>"},{"location":"OLDERRELEASES/#version-111-18th-july-2017","title":"Version 1.1.1 (18th July 2017)","text":"<ul> <li>Now allows user to skip existing entries</li> <li>Now allows user to set max description length with '-l'</li> <li>Refactored thread result communication to be much cleaner</li> </ul>"},{"location":"OLDERRELEASES/#version-110a-16th-july-2017","title":"Version 1.1.0a (16th July 2017)","text":"<ul> <li>Fixed a bug where Skyscraper would get caught in an endless loop when scraping 'amiga' using the 'openretro' scraping module.</li> </ul>"},{"location":"OLDERRELEASES/#version-110-14th-july-2017","title":"Version 1.1.0 (14th July 2017)","text":"<ul> <li>Now quits if GamesDatabase has blocked you.</li> <li>Added support for user ID and KEY when using scrapers that require it</li> <li>Added 'screenscraper' scraping module</li> <li>Mobygames scraping module no longer truncates descriptions</li> <li>OpenRetro scraping module no longer truncates descriptions</li> </ul>"},{"location":"OLDERRELEASES/#version-101-4th-july-2017","title":"Version 1.0.1 (4th July 2017)","text":"<ul> <li>OpenRetro now always removes '[AGA]' from search results, since it will be appended later</li> <li>Now supports multitags of both the '()' and '[]' variety</li> <li>Now properly removes html tags from game descriptions in various scraper modules</li> <li>Fixed situations where using OpenRetro would result in a few blank covers</li> </ul>"},{"location":"OLDERRELEASES/#version-100-3rd-july-2017","title":"Version 1.0.0 (3rd July 2017)","text":"<ul> <li>Added 'worldofspectrum' scraping module (Have fun, Dom! :D)</li> <li>Now also handles filename parenthesis comments (eg. '(disc 1 of 2)')</li> <li>Now properly handles number of threads if number of files are less than allowed threads</li> <li>Changed default scraping module for a number of platforms based on stats</li> </ul>"},{"location":"OLDERRELEASES/#version-099-2nd-july-2017","title":"Version 0.9.9 (2nd July 2017)","text":"<ul> <li>Added 'gamesdatabase' scraping module</li> <li>Now detects if a game is a sequel and pays more attention to it when looking for matches</li> <li>Now properly appends tag such as [AGA] back into the title name when writing the xml</li> <li>Added '--stats' command line option for exporting platform scraping stats</li> <li>Changed default scraper for a bunch of platforms based on stats</li> <li>Added support for the 'apple2' platform</li> <li>Added support for the 'atari5200' platform</li> <li>Added support for the 'atarijaguar' platform</li> <li>Added support for the 'gb' platform</li> <li>Added support for the 'gbc' platform</li> <li>Added support for the 'n64' platform</li> <li>Added support for the 'nds' platform</li> <li>Added support for the 'segacd' platform</li> </ul>"},{"location":"OLDERRELEASES/#version-098-29th-june-2017","title":"Version 0.9.8 (29th June 2017)","text":"<ul> <li>Added MameDB scraper module</li> <li>Added support for the 'neogeo' platform</li> <li>Added support for the 'arcade' platform</li> <li>Added support for the 'atari2600' platform</li> <li>Added support for the 'atari7800' platform</li> <li>Added support for the 'gamegear' platform</li> <li>Added support for the 'mastersystem' platform</li> <li>Added 'Estimated time' to output</li> <li>Redesigned thread initialization</li> <li>FINALLY found and fixed memory leak :) Verified with 'ps'</li> </ul>"},{"location":"OLDERRELEASES/#version-097a-27th-june-2017","title":"Version 0.9.7a (27th June 2017)","text":"<ul> <li>Probably fixed a memory leak... I hope. :S</li> </ul>"},{"location":"OLDERRELEASES/#version-097-26th-june-2017","title":"Version 0.9.7 (26th June 2017):","text":"<ul> <li>Artwork is now fully customizable (check 'config.ini.example')</li> <li>Added artwork dropshadow effect</li> <li>Added artwork config examples</li> <li>Added support for megadrive / genesis</li> </ul>"},{"location":"OLDERRELEASES/#version-096-25th-june-2017","title":"Version 0.9.6 (25th June 2017):","text":"<ul> <li>HOL scraping module added</li> </ul>"},{"location":"OLDERRELEASES/#version-095-23rd-june-2017","title":"Version 0.9.5 (23rd June 2017):","text":"<ul> <li>Now properly supports config file setup using '-c' (see 'config.ini.example')</li> <li>Now allows user to force a certain scraper module using '-s'</li> <li>MobyGames scraping support added</li> <li>Added support for psx, nes, snes and zxspectrum</li> <li>Now provide 'config.ini.example'</li> </ul>"},{"location":"OLDERRELEASES/#version-094-21st-june-2017","title":"Version 0.9.4 (21st June 2017):","text":"<ul> <li>Lemon64 scraping support added (now default for 'c64')</li> </ul>"},{"location":"OLDERRELEASES/#version-093-19th-june-2017","title":"Version 0.9.3 (19th June 2017):","text":"<ul> <li>Fixed major bug in Amiga scraping which caused it to skip more than half :S</li> </ul>"},{"location":"OLDERRELEASES/#version-092-19th-june-2017","title":"Version 0.9.2 (19th June 2017):","text":"<ul> <li>Fixed minor error in command line descriptions</li> <li>Now prints chosen platform when starting</li> </ul>"},{"location":"OLDERRELEASES/#version-091-19th-june-2017","title":"Version 0.9.1 (19th June 2017):","text":"<ul> <li>Removed 'unpublished' command line option, as it was too specific</li> </ul>"},{"location":"OLDERRELEASES/#version-090-19th-june-2017","title":"Version 0.9.0 (19th June 2017):","text":"<ul> <li>Now supports both Amiga and C64 scraping. Automatically chooses best scraper for each platform</li> <li>Modularized scraping definitions</li> <li>TheGamesDb scraping support added (default for 'c64')</li> <li>OpenRetro + MobyGames (for descriptions) scraping support added (default for Amiga)</li> </ul>"},{"location":"OLDERRELEASES/#version-080-15th-june-2017","title":"Version 0.8.0 (15th June 2017):","text":"<ul> <li>Added threaded scraping! Set number of threads with \"-t\" command line option. Check \"--help\" for more info</li> </ul>"},{"location":"OLDERRELEASES/#version-072-12th-june-2017","title":"Version 0.7.2 (12th June 2017):","text":"<ul> <li>Added options for gamelist and images folder</li> </ul>"},{"location":"OLDERRELEASES/#version-070-11th-june-2017","title":"Version 0.7.0 (11th June 2017):","text":"<ul> <li>First public release</li> </ul>"},{"location":"PATHHANDLING/","title":"Path Processing","text":""},{"location":"PATHHANDLING/#path-logic-in-skyscraper","title":"Path Logic in Skyscraper","text":"<p>This page describes how Skyscraper processes the different paths and especially how the absolute path is calculated when a you provide a relative path.</p> <p>Do not get confused by the lenghty flow diagram below. It covers game list folder, input folder and media folder handling. You wiil notice that input folder and media folder are processed in the same manner.</p> <p> </p> Path processing flowchart <p>Ah, good you made it to the end of the flow.</p> <p>Pay attention to the connectors A-A, B-B and C-C in the diagram.</p> <p>Normalization means any surplus <code>./</code> and <code>../</code> are removed from the path. However, at this stage it is not verified if the filepath does exists. Also, any symbolic links are not resolved.</p> <p>Remember the precedence of CLI and configuration options when you read through this document.</p> <p>Now, let's see how Skyscraper handles relative path configuration options.</p>"},{"location":"PATHHANDLING/#computing-the-absolute-path-from-a-relative-path","title":"Computing the Absolute Path From a Relative Path","text":"<p>The next subsections are summarizing the absolute path calculation Skyscraper applies for the different path and file options.</p>"},{"location":"PATHHANDLING/#by-using-current-working-directory","title":"By Using Current Working Directory","text":"<p>The current working directory (CWD) is the directory from where you run Skyscraper. The absolute path is computed as <code>&lt;CWD&gt;/&lt;parameter-value&gt;</code> for these CLI parameters and their values:</p> <p><code>-a &lt;artwork.xml&gt;</code> <code>-c &lt;configfile&gt;</code> <code>-g &lt;gamelistfolder&gt;</code> <code>-d &lt;cachefolder&gt;</code></p> <p>This means the first part of the flow diagram (resolution of Gamelist folder) also applies to <code>-a</code> and <code>-d</code> options and their configfile counterparts.</p> <p>In contrast, when you use one of the three parameters (<code>&lt;artwork.xml&gt;</code>,<code>&lt;gamelistfolder&gt;</code> and <code>&lt;cachefolder&gt;</code>) in a configuration INI-file the absolute path it determined from the absolute path of the config file. See below.</p>"},{"location":"PATHHANDLING/#by-using-skyscrapers-built-in-config-directory","title":"By Using Skyscraper's Built-in Config Directory","text":"<p>This is usually <code>/home/&lt;USER&gt;/.skyscraper/</code> (=base). With XDG it is slightly different. The files provided with these options</p> <p><code>--excludeFrom &lt;excludes.txt&gt;</code> <code>--includeFrom &lt;includes.txt&gt;</code></p> <p>are searched by concatenating the base and for example the exclude file. If not found, Skyscraper tries to access it with the current working directory as base. If it is not found in any of these locations Skyscraper end with an error message.</p>"},{"location":"PATHHANDLING/#by-using-the-gamelist-folder","title":"By Using the Gamelist Folder","text":"<p>If you define a relative path Gamelist folder either via <code>-g</code> or via <code>gameListFolder=</code> (INI-file) and are using a frontend for EmulationStation (or any other frontend, which is not Pegasus) then the configuration for input folder must be provided absolute and can not be relative. In turn, the media folder, if it is a relative path, is then assumed to be relative to the input folder.</p> <p>However, if you selected the Pegasus frontend then the input folder may be relative. The input folder and media folder, when relative, are then interpreted by Skyscraper to be relative to the game list folder.</p> <p>This is also depicted in the diagram above.</p>"},{"location":"PATHHANDLING/#by-using-the-input-folder-rom-gamefile-path","title":"By Using the Input Folder (ROM-/gamefile-path)","text":"<p>The files provided with these options</p> <p><code>--startAt &lt;ROM-or-game-file-A&gt;</code> <code>--endAt &lt;ROM-or-game-file-B&gt;</code></p> <p>are first searched in the current working directory. If not found, Skyscraper tries to access them in the input folder. If they are not found at all Skyscraper silently assumes that <code>--startAt</code> respective <code>--endAt</code> are not set.</p>"},{"location":"PATHHANDLING/#by-using-an-option-in-a-configuration-ini-file","title":"By Using an Option in a Configuration INI File","text":"<p>When you have set one of the four following parameters in the default configuration file (<code>/home/&lt;USER&gt;/.skyscraper/config.ini</code>) or in a custom config file defined with <code>-c &lt;configfile&gt;</code> the path is calculated from the absolute path of the location of the config INI-file.</p> <pre><code>artworkXml=&lt;artwork.xml&gt;\ngameListFolder=&lt;gamelistfolder&gt;\ncacheFolder=cachefolder&gt;\nimportFolder=&lt;importfolder&gt;\n</code></pre> <p>Remember, that the path calculation for the paramters <code>artworkXml</code>, <code>gameListFolder</code> and <code>cacheFolder</code> differs when using their CLI counterparts, see CLI options above.</p> <p>Note</p> <p>The <code>importFolder=</code> parameter has no counterpart on the command line.</p>"},{"location":"PLATFORMS/","title":"Platforms","text":""},{"location":"PLATFORMS/#supported-platforms","title":"Supported Platforms","text":"<p>Get a list of supported platforms with <code>Skyscraper --help</code>. The set of supported platforms can be adapted to your needs by configuration files.</p>"},{"location":"PLATFORMS/#file-one-platformnames-aliases-and-gamefile-extensions","title":"File One: Platformnames, -aliases and Gamefile Extensions","text":"<p>After the initial work from torresflo @ GitHub it was possible to add new platforms by editing the <code>platforms.json</code> file. However, since version 3.9.0 of Skyscraper this file is replaced by <code>peas.json</code>. in the same folder. The filename is an acronym for platforms, extensions/formats, aliases and scrapers. However, the scrapers list has been removed with 3.13.0 as it did not have any use.</p> <p>Take this example from the <code>peas.json</code> file:</p> <pre><code>    [...]\n    \"megadrive\": {\n        \"aliases\": [\n            \"genesis\",\n            \"mega drive\",\n            \"sega mega drive\",\n            \"sega mega drive/genesis\"\n        ],\n        \"formats\": [\n            \"*.bin\",\n            \"*.gen\",\n            \"*.md\",\n            \"*.sg\",\n            \"*.smd\"\n        ]\n    },\n    [...]\n</code></pre> <ul> <li><code>&lt;key&gt;</code>: the key (<code>megadrive</code> in the example) reflects the platform/folder   name (or more generally the handle), usually provided with <code>-p</code> on the command   line.</li> <li><code>aliases</code>: these aliases can be used to allow additional hits for a search.   The use of aliases is handy especially for scraping websites which do not   provide a web API. Currently Screenscraper, Mobygames or The Games DB are   providing an web API. See also section about   <code>platforms_idmap.csv</code> and Updating the   files below.</li> <li><code>formats</code>: set of ROM file extensions which will be included in scraping if   a ROM file is not provided explicitly via command line.</li> </ul> <p>Since Skyscraper 3.13.0 you should maintain local changes to the <code>peas.json</code> in a separate file called <code>peas_local.json</code> alongside to the <code>peas.json</code>. The format is identical to the <code>peas.json</code>. Since Skyscraper 3.15 you can also maintain local changes to the <code>platforms_idmap.csv</code> in a separate file with a <code>_local</code> postfix. </p> <p>The order of precedence</p> <p>Any platform entry from <code>peas_local.json</code> with the same platform name as in <code>peas.json</code> overwrites the one from <code>peas.json</code>. The same applies for the platforms ID-mapping (see next section).</p> <p>Tip</p> <p>If you need a specific folder name for a platform (on your setup or due to an EmulationStation theme) use a symbolic link (for example <code>megadrive</code> (=folder) and <code>genesis</code> (=symlink) on RetroPie setups or another example: <code>plus4</code> (=folder) and <code>c16</code> (=symlink)) instead of duplicating the platform in the JSON file.</p>"},{"location":"PLATFORMS/#file-two-exact-platform-mapping","title":"File Two: Exact platform mapping","text":"<p>The second file is used for to instruct scrapers to lookup games by the numeric platform identifier the scraping site uses for queries. The file <code>platforms_idmap.csv</code> defines exact platform id for the web APIs of Screenscraper, MobyGames and the GamesDB. It is a CSV file which maps the platform handle (e.g. <code>megadrive</code>) to the respective platform id of the scraping site (selected with the CLI option <code>-s</code>):</p> <pre><code>folder,screenscraper_id,mobygames_id,tgdb_id\n[...]\nmegadrive,1,16,36\n[...]\n</code></pre> <p>You can display the number with their platform name on each of the three scraping sites in a more readable format with the script <code>peas_and_idmap_verify.py</code>. Find the script sibling to the Skyscraper executable. Below is a part of the output (ScrS refers to the Screenscraper site):</p> <pre><code>[...]\n    \u251c\u2500\u2500 megadrive\n    \u2502   \u251c\u2500\u2500 ScrS    1: Megadrive\n    \u2502   \u251c\u2500\u2500 Moby   16: Genesis\n    \u2502   \u2514\u2500\u2500 TGDB   36: Sega Mega Drive\n[...]\n</code></pre>"},{"location":"PLATFORMS/#how-to-change-platform-aliases-or-gamefile-extensions","title":"How to Change Platform Aliases or Gamefile Extensions","text":"<p>Follow instructions in this section if you only want to overwrite platform alias names or gamefile extensions.</p> <ol> <li>If you don't have a <code>peas_local.json</code> file: Create the file <code>peas_local.json</code>    sibling to <code>peas.json</code>. Enter in this file an empty JSON object <code>{}</code> (=just    curly braces).</li> <li>Create a new platform block in <code>peas_local.json</code> inside these curly braces    (you created in step 1) by copying an existing platform block from the    <code>peas.json</code> and adapt to your needs, but keep the platform name.</li> </ol> <p>Example: Copy this excerpt from <code>peas.json</code>...</p> <pre><code>    [...]\n    \"psx\": {            &lt;-- begin of platform block\n        \"aliases\": [\n            \"playstation\",\n            \"sony playstation\"\n        ],\n        \"formats\": [\n            \"*.cbn\",\n            \"*.chd\",\n            \"*.cue\",\n            \"*.img\",\n            \"*.iso\",\n            \"*.m3u\",\n            \"*.mdf\",\n            \"*.pbp\",\n            \"*.toc\",\n            \"*.z\",\n            \"*.znx\"\n        ]\n    },                  &lt;-- end of platform block\n    [...]\n</code></pre> <p>...into <code>peas_local.json</code> and add <code>*.bin</code> as recognized extension. </p> <pre><code>{\n    \"psx\": {\n        \"aliases\": [\n            \"playstation\",\n            \"sony playstation\"\n        ],\n        \"formats\": [\n            \"*.bin\",    &lt;-- added extenstion\n            \"*.cbn\",\n            \"*.chd\",\n            \"*.cue\",\n            \"*.img\",\n            \"*.iso\",\n            \"*.m3u\",\n            \"*.mdf\",\n            \"*.pbp\",\n            \"*.toc\",\n            \"*.z\",\n            \"*.znx\"\n        ]\n    }                   &lt;-- comma needed here if not last in platform list\n}\n</code></pre> <p>If you have multiple platforms defined in your local file make sure the platform blocks are separated by a comma <code>,</code>.</p> <p>Tip</p> <p>On RetroPie you may also have to edit <code>~/.emulationstation/es_systems.cfg</code> and add <code>.bin</code> and <code>.BIN</code>.</p>"},{"location":"PLATFORMS/#how-to-add-platforms-for-scraping","title":"How to Add Platforms For Scraping","text":"<p>Outline:</p> <ol> <li>Create a file <code>peas_local.json</code> sibling to <code>peas.json</code>. Enter in this file an    empty <code>{}</code> JSON object.</li> <li>Create a new platform block in <code>peas_local.json</code> inside the outer (empty)    block created before, or copy an existing block and adapt to your needs. For    RetroPie your chosen <code>&lt;platform_name&gt;</code> must match the folder in    <code>~/RetroPie/roms/&lt;platform_name&gt;</code>.</li> <li>Use <code>&lt;platform_name&gt;</code> also in <code>platforms_idmap_local.csv</code>. If you need to    create an <code>platforms_idmap_local.csv</code> put in the column names    <code>folder,screenscraper_id,mobygames_id,tgdb_id</code> (i.e. the first line of    <code>platforms_idmap.csv</code>) . See also below for details of this CSV-file.</li> <li>If you use RetroPie do add the platform/system also to your <code>es_systems.cfg</code>    as documented in the     RetroPie documentation.</li> </ol> <p>There is also a an verbatim example, you may skip the next section initially and can continue with the hands-on example.</p>"},{"location":"PLATFORMS/#updating-peas_localjson-and-platforms_idmap_localcsv","title":"Updating <code>peas_local.json</code> and <code>platforms_idmap_local.csv</code>","text":"<p>These two files are ment to be locally edited and extended for additional platforms. Whenever you add a new platform block to the <code>peas_local.json</code> do also lookup the corresponding platform ids and add them to <code>platforms_idmap_local.csv</code> for the scraping sites via a web-API.</p> <p>From Skyscraper 3.15 onwards creating/editing the <code>peas_local.json</code> and <code>platforms_idmap_local.csv</code> is the preferred way. In any case both files (e.g. <code>peas.json</code> and <code>peas_local.json</code>) will be evalutated but the <code>_local</code> configuration has precedence over the distributed <code>peas.json</code>. The same rule applies to <code>platforms_idmap.csv</code> and <code>platforms_idmap_local.csv</code>. If you have made local changes before Skyscraper 3.15 to either <code>peas.json</code> or <code>platforms_idmap.csv</code> Skyscraper will inform you with an warning. Read the section Transferring Local Platform Changes on how to transfer your changes to the corresponding <code>*_local.*</code> files.</p> <p>To find the platform ids for Screenscraper, Mobygames and The Games DB, please consult the files <code>screenscraper_platforms.json</code>, <code>mobygames_platforms.json</code> and <code>tgdb_platforms.json</code> which are located sibling to your <code>config.ini</code> of the Skyscraper installation. If you can not identify an ID in these files use <code>-1</code> as value in the CSV. If you add <code>-1</code> to CSV, the <code>aliases</code> from peas are tried to find a match upon scraping. Edits in <code>screenscraper_platforms.json</code>, <code>mobygames_platforms.json</code> and <code>tgdb_platforms.json</code> are not needed. Moreover, they will be overwritten with each Skyscraper update as these files are only a reference for finding the id values for the <code>platforms_idmap[_local].csv</code>.</p> <p>For those scraping sites without a web-API or without exact ID match do use the platform name which is used on the respective scraping source site and put it into the in the <code>aliases</code> list in the <code>peas_local.json</code> for the respective platform/system at <code>&lt;platform_name&gt;</code>. The <code>&lt;platform_name&gt;</code> is identical to the folder on your filesystem where you keep your games.</p> <p>Use of Aliases</p> <p>The platforms ScummVM and Steam do not have an exact match on Mobygames, however you may scrape successfully for ScummVM and Steam games if you use 'PC', 'DOS', 'Windows', 'Linux' or similar as <code>\"aliases\": ...</code> in the <code>\"scummvm\": ...</code> or <code>\"steam\": ...</code> section of <code>peas.json</code>. Usually you find the platforms a game runs on if you lookup the game manually on the scraping website.</p>"},{"location":"PLATFORMS/#sample-usecase-adding-platform-satellaview","title":"Sample Usecase: Adding Platform Satellaview","text":"<p>Let the platform/systemname be <code>satellaview</code>. You may read about this SNES enhancing peripheral in Wikipedia.</p>"},{"location":"PLATFORMS/#step-1-add-a-section-to-peas_localjson","title":"Step 1: Add a Section to <code>peas_local.json</code>","text":"<p>Actually, this is a copy of the <code>\"snes: ...\"</code> block, with slight modifications.</p> <pre><code>...\n\"satellaview\": {\n    \"aliases\": [\n        \"snes\",\n        \"nintendo power\",\n        \"snes - super mario world hacks\",\n        \"sufami turbo\",\n        \"super famicom\",\n        \"super nintendo\",\n        \"super nintendo (snes)\",\n        \"super nintendo entertainment system (snes)\",\n        \"super nintendo msu-1\"\n    ],\n    \"formats\": [\n        \"*.bin\",\n        \"*.fig\",\n        \"*.mgd\",\n        \"*.sfc\",\n        \"*.smc\",\n        \"*.swc\"\n    ]\n}\n...\n</code></pre> <ul> <li>Line 2 defines the platform name</li> <li>Line 4 adds an alias to SNES as Satellaview is an hardware addon to a SNES</li> </ul>"},{"location":"PLATFORMS/#step-2-lookup-values-for-satellaview-and-update-platforms_idmapcsv","title":"Step 2: Lookup Values for Satellaview and Update <code>platforms_idmap.csv</code>","text":"<p>To fill in the values into the CSV file do consult the <code>screenscraper_platforms.json</code>, <code>mobygames_platforms.json</code> and <code>tgdb_platforms.json</code> files. Try to find the ID for the platform in these files. For <code>satellaview</code> only Screenscraper has an exact match: <code>107</code>. Use <code>-1</code> as ID when no exact match is provided for the scraping site. Whenever an <code>-1</code> is encountered Skyscraper tries the <code>\"aliases\":</code> from <code>peas.json</code> (and from <code>peas_local.json</code> if present) to find scraping data.</p> <p>Add this information to your <code>platforms_idmap_local.csv</code>: <pre><code>satellaview,107,-1,-1\n</code></pre></p>"},{"location":"PLATFORMS/#step-3-create-the-system-in-retropieemulationstation-and-populate-the-rom-folder","title":"Step 3: Create the System in RetroPie/EmulationStation and Populate the ROM Folder","text":"<p>This part should be added to your <code>~/.emulationstation/es_systems.cfg</code>. See the RetroPie documentation for additional information on this.</p> <p>Warning</p> <p>Stop EmulationStation before editing the config file.</p> <pre><code>...\n&lt;system&gt;\n    &lt;name&gt;satellaview&lt;/name&gt;\n    &lt;fullname&gt;Satellaview&lt;/fullname&gt;\n    &lt;path&gt;/home/pi/RetroPie/roms/Nintendo - Satellaview&lt;/path&gt;\n    &lt;extension&gt;.7z .bin .bs .smc .sfc .fig .swc .mgd .zip .7Z .BIN .BS .SMC .SFC .FIG .SWC .MGD .ZIP&lt;/extension&gt;\n    &lt;command&gt;/opt/retropie/supplementary/runcommand/runcommand.sh 0 _SYS_ snes %ROM%&lt;/command&gt;\n    &lt;platform&gt;satellaview,snes&lt;/platform&gt; &lt;!--Not used by Screenscraper, but by built-in ES scraper and maybe others--&gt;\n    &lt;theme&gt;satellaview&lt;/theme&gt;\n&lt;/system&gt;\n...\n</code></pre> <ul> <li>Line 3 defines the platform name, respective the folder name for your ROMs.   Thus, Skyscraper expects to find ROMs in <code>/home/pi/RetroPie/roms/satellaview</code>.</li> <li>Line 6 contains the extensions which are recognized by EmulationStation. These   extensions should be also be present in the <code>\"formats\":</code> block of <code>peas.json</code>.   However, Skyscraper uses case insensitive file extension mapping. The   extensions <code>.7z</code> and <code>.zip</code> are added automagically by Skyscraper, thus the   <code>\"formats\":</code> list is usually shorter than the EmulationStation <code>&lt;extension/&gt;</code>   list.</li> <li>Line 9: If your theme doesn't support Satellaview, you can also use <code>snes</code> as    value. <p>Note</p> <p>If you run a different frontend than EmulationStation, consult the documentation for your frontend on how to add additional systems.</p>"},{"location":"PLATFORMS/#step-4-happy-scraping","title":"Step 4: Happy Scraping","text":"<ol> <li>Scrape and generate the <code>satellaview/gamelist.xml</code> as in the introductive    use case using <code>Skyscraper -p satellaview -s screenscraper</code> and    then <code>Skyscraper -p satellaview</code></li> <li>Restart EmulationStation, respective trigger reload of the gamelist in your    frontend.</li> <li>Smile :)</li> </ol> <p>Kudos</p> <p>Thanks to retrobit @ GitHub for contributing this usecase.</p>"},{"location":"PLATFORMS/#transferring-local-platform-changes","title":"Transferring Local Platform Changes","text":"<p>This section describes how to transfer your changes from <code>peas.json</code> and <code>platforms_idmap.csv</code> to <code>*_local.*</code> files with the same format. If you never changed the first two files, you can safely ignore this section. Introduction: Whenever there is an update and maybe upstream changes to <code>peas.json</code> and <code>platforms_idmap.csv</code> Skyscraper will place the upstream/distribution files as <code>peas.json.rp-dist</code> and <code>platforms_idmap.csv.rp-dist</code>. Before Skyscraper 3.15 you had to manually transfer updates from <code>peas.json.rp-dist</code> and <code>platforms_idmap.csv.rp-dist</code> to the actual files. With Skyscraper 3.15 onwards there is a semi-automated approach.</p> <p>Note</p> <p>If you are using Skyscraper in a non-RetroPie setup these files will have the suffix <code>.dist</code>. The manual will use <code>.rp-dist</code> as synonym for both.</p>"},{"location":"PLATFORMS/#step-1-transfer-platform-information-peas-to-local-file","title":"Step 1: Transfer Platform Information (<code>peas</code>) to Local File","text":"<p>Install Python Deepdiff: <code>sudo apt install python3-deepdiff</code>. Then navigate to <code>/opt/retropie/supplementary/skyscraper/</code> and find the script <code>deepdiff_peas_jsonfiles.py</code>.</p> <p>Tip</p> <p>If you are using Skyscraper without RetroPie context the you can find the Python script in the source-tree below the <code>supplementary/scraperdata</code> folder.</p> <p>The script expects at least two parameters:</p> <ol> <li><code>&lt;source_peas.json&gt;</code>: The pristiine/baseline file with all platform    information (most likely <code>peas.json.rp-dist</code>)</li> <li><code>&lt;dest_peas.json&gt;</code>: The file with your current local changes (most likely    <code>peas.json</code>)</li> <li>Optionally <code>&lt;outfile_peas.json&gt;</code>: Once you have reviewed the changes provide    this file to store the platform \"diff\" between the pristine file and your    changes</li> </ol> <p>Example(s)</p> <p>Create a diff on the console: <pre><code>python3 deepdiff_peas_jsonfiles.py peas.json.rp-dist peas.json\n</code></pre></p> <p>Review the diff, then run: <pre><code>python3 deepdiff_peas_jsonfiles.py peas.json.rp-dist peas.json peas_local.json\n</code></pre></p> <p>Backup your <code>peas.json</code> if needed and when satisfied with the content of <code>peas_local.json</code> move <code>peas.json.rp-dist</code> to <code>peas.json</code>.</p>"},{"location":"PLATFORMS/#step-2-transfer-platform-scraper-ids-platforms_idmap-to-local-file","title":"Step 2: Transfer Platform Scraper IDs (<code>platforms_idmap</code>) to Local File","text":"<p>The logic is the same as before and provides an output of the lines you have changed in <code>platforms_idmap.csv</code> in relation to the baseline <code>platforms_idmap.csv.rp-dist</code>.</p> <p>Warning</p> <p>If you already have an existing <code>platforms_idmap_local.csv</code> make a backup as the following command will create a new one. You may also alter the file redirect to a different file to avoid the file to be overwritten.</p> <p>Navigate to the folder with the <code>platforms_idmap.csv</code>. Then run:</p> <pre><code>[[ -e platforms_idmap_local.csv ]] &amp;&amp; mv platforms_idmap_local.csv platforms_idmap_local.csv.backup\ndiff \\\n  --new-line-format=\"%L\" \\\n  --old-line-format=\"\" \\\n  --unchanged-line-format=\"\" \\\n  platforms_idmap.csv.rp-dist platforms_idmap.csv &gt; platforms_idmap_local.csv\n</code></pre> <p>Also add the column header (folder, screenscraper_id, mobygames_id, tgdb_id) to the <code>platforms_idmap_local.csv</code> file, for example with:</p> <pre><code>echo folder,screenscraper_id,mobygames_id,tgdb_id | \\\ncat - platforms_idmap_local.csv &gt; tmp_piggy.csv &amp;&amp; \\\nmv tmp_piggy.csv platforms_idmap_local.csv\n</code></pre> <p>Backup your <code>platforms_idmap.csv</code> if needed and when satisfied with the content of your <code>platforms_idmap_local.csv</code> move <code>platforms_idmap.csv.rp-dist</code> to <code>platforms_idmap.csv</code>.</p>"},{"location":"PLATFORMS/#finish","title":"Finish","text":"<p>From now on upstream changes will be placed in <code>peas.json</code> and <code>platforms_idmap.csv</code> and your local additions or changes are kept in the <code>*_local.*</code> counterparts. However, remember when platforms are defined in both files the <code>*_local.*</code> platform configuration wins.</p>"},{"location":"PLATFORMS/#one-more-thing","title":"One More Thing...","text":"<p>If you have changes which would be beneficial for the community, feel free to file an issue with the proposed additions/changes or table it in the RetroPie Forum/Skyscraper Thread. Thank you!</p>"},{"location":"PLATFORMS/#migrating-platformsjson-and-screenscraperjson","title":"Migrating <code>platforms.json</code> and <code>screenscraper.json</code>","text":"<p>This section is only applicable if you update from Skyscraper 3.7.7-2.</p> <p>Tip</p> <p>If you neither edited <code>platforms.json</code> nor <code>screenscraper.json</code> or do not have these files in the Skyscraper config folder (sibling to the <code>config.ini</code>) you can safely ignore this section.</p> <p>If you have local changes in these files you can transfer your local changes to the new files. The new <code>peas.json</code> is the <code>platforms.json</code> but in a more compact form which has less visual overhead and also allows faster parsing. The <code>platforms_idmap.csv</code> maps the former <code>screenscraper.json</code> platform ids plus the platform ids of two more web API sites.</p> <p>Use the script <code>convert_platforms_json.py</code> (sibling to the Skyscraper executable) to convert the <code>platforms.json</code> to a <code>peas_mine.json</code> file which you can then diff to the <code>peas.json</code> and transfer your changes to <code>peas_local.json</code>.</p> <p>Use the script <code>check_screenscraper_json_to_idmap.py</code> to identify differences from your <code>screenscraper.json</code>. Then use the three <code>&lt;scraper&gt;_platforms.json</code> files to identify the matching platform ids to be entered in <code>platforms_idmap_local.csv</code>. Use <code>-1</code> in this file, if there is no matching platform id.</p>"},{"location":"PLATFORMS/#summary-of-changes-in-the-config-files","title":"Summary of Changes in the Config Files","text":"<p>Filenames shown strikethrough are superseded. Filenames shown italic are user editable.</p> File Introduced with Version Notes (version) <code>mobygames.json</code> 3.8.0 superseded by <code>mobygames_platforms.json</code> (v3.9.0); not to be edited; IDs are used in <code>platforms_idmap.csv</code> <code>platforms.json</code> 3.7.7-2 (@detain) superseded by <code>peas.json</code> (3.9.0) and <code>peas_local.json</code> (3.13.0); do edit the latter to add/change platforms; these files use a leaner format than the initially used <code>platforms.json</code> <code>platforms_idmap.csv</code> 3.9.0 maps the platform names (handles) from <code>peas.json</code> / <code>peas_local.json</code> to exact platform IDs used in scrapers MobyGames, Screenscraper or TGDB; do edit to add new platforms <code>peas.json</code> 3.9.0 maps platform names (read: ROM folder names) to extensions and aliases for that platform <code>peas_local.json</code> 3.13.0 same as usage as <code>peas.json</code>, the <code>_local.json</code> file will not be altered by Skyscraper updates. Entries in this file have higher precedence than the distribution file <code>peas.json</code> <code>platforms_idmap_local.csv</code> 3.15.2 same as usage as <code>platforms_idmap.csv</code>, the <code>_local.csv</code> file will not be altered by Skyscraper updates. Entries in this file have higher precedence than the distribution file <code>platforms_idmap.csv</code> <code>screenscraper.json</code> 3.7.7-2 (@detain) IDs formerly used in here are part of <code>platforms_idmap.csv</code> (3.9.0); superseded by <code>screenscraper_platforms.json</code> (3.9.0) which is not to be edited <code>tgdb_developers.json</code> 2.5.3 (@muldjord) API mapping of 'Developers'; Uses leaner format as before (3.9.0); not to be edited <code>tgdb_genres.json</code> 3.9.0 API mapping of 'Genres' (3.9.0); not to be edited <code>tgdb_platforms.json</code> 3.9.0 API mapping of 'Platforms' (3.9.0); not to be edited; IDs are used in <code>platforms_idmap.csv</code> <code>tgdb_publishers.json</code> 2.5.3 (@muldjord) API mapping of 'Publishers'; Uses leaner format as before (3.9.0); not to be edited"},{"location":"REGIONS/","title":"Regions","text":""},{"location":"REGIONS/#overview","title":"Overview","text":"<p>Some game information and / or game media is region-based. Skyscraper provides several ways of configuring these for your convenience. But most importantly; it supports region auto-detection directly from the file names. Read on for more information about how regions are handled by Skyscraper.</p>"},{"location":"REGIONS/#scraping-modules-that-support-regions","title":"Scraping modules that support regions","text":"<ul> <li>screenscraper (pretty much all game information and media)</li> <li>igdb (only release date)</li> <li>mobygames (only cover artwork)</li> </ul> <p>Below follows a general list of supported regions. Not all regions are supported by all modules: The supporting modules are checkmarked for each region.</p> <p>When configuring regions be sure to use the short-names as shown (eg. 'fr' for France).</p>"},{"location":"REGIONS/#list-of-supported-regions","title":"List of supported regions","text":"Region Key Country/Region ScreenScraper IGDB MobyGames ame American continent \u2713 asi Asia \u2713 \u2713 au Australia \u2713 \u2713 \u2713 bg Bulgaria \u2713 \u2713 br Brazil \u2713 \u2713 ca Canada \u2713 \u2713 cl Chile \u2713 \u2713 cn China \u2713 \u2713 \u2713 cus Custom \u2713 cz Czech republic \u2713 \u2713 de Germany \u2713 \u2713 dk Denmark \u2713 \u2713 eu Europe \u2713 \u2713 fi Finland \u2713 \u2713 fr France \u2713 \u2713 gr Greece \u2713 \u2713 hu Hungary \u2713 \u2713 il Israel \u2713 \u2713 it Italy \u2713 \u2713 jp Japan \u2713 \u2713 \u2713 kr Korea \u2713 \u2713 kw Kuwait \u2713 mor Middle East \u2713 nl Netherlands \u2713 \u2713 no Norway \u2713 \u2713 nz New Zealand \u2713 \u2713 \u2713 oce Oceania \u2713 pe Peru \u2713 pl Poland \u2713 \u2713 pt Portugal \u2713 \u2713 ru Russia \u2713 \u2713 se Sweden \u2713 \u2713 sk Slovakia \u2713 \u2713 sp Spain \u2713 \u2713 ss ScreenScraper \u2713 tr Turkey \u2713 \u2713 tw Taiwan \u2713 \u2713 uk United Kingdom \u2713 \u2713 us USA \u2713 \u2713 \u2713 wor World \u2713 \u2713 \u2713"},{"location":"REGIONS/#region-auto-detection","title":"Region auto-detection","text":"<p>Skyscraper will try to auto-detect the region from the file name. It will look for designations such as <code>(Europe)</code> or <code>(e)</code> and set the region accordingly. This currently works for the following regions and / or countries:</p> <ul> <li>asi, au, br, ca, cn</li> <li>de, dk, eu, fr, it</li> <li>jp, kr, nl, se, sp</li> <li>tw, us, wor</li> </ul> <p>So if your files are named like <code>Game Name (Europe).zip</code>, there's no need to configure regions manually. Skyscraper will recognize <code>Europe</code> and add it to the top of the internal region priority list. If info or media isn't found for the auto-detected region, it will move down the list and check the next region on the list until it finds one that has data for the requested resource.</p>"},{"location":"REGIONS/#default-region-prioritization","title":"Default Region Prioritization","text":"<p>Skyscraper's default internal region priority list is as follows. Topmost region has highest priority and so forth.</p> <ul> <li>User-specified region set with <code>--region &lt;REGION&gt;</code> (command line) or <code>region=\"&lt;REGION&gt;\"</code> (config.ini)</li> <li>If no user-specified region is set, the auto-detected region will be added here</li> <li>Then this list is processed in order: eu, us, ss (Screenscraper specific), uk, wor, jp, au, ame, de, cus, cn, kr, asi, br, sp, fr, gr, it, no, dk, nz, nl, pl, ru, se, tw, ca</li> </ul>"},{"location":"REGIONS/#configuring-region-manually","title":"Configuring Region Manually","text":"<p>If you insist, of course you can configure the region manually. You can either do this on command-line or through <code>/home/&lt;USER&gt;/.skyscraper/config.ini</code>. It is recommended to set it in <code>config.ini</code> for a permanent setup.</p>"},{"location":"REGIONS/#configini","title":"config.ini","text":"<p>Read about the <code>region</code> and <code>regionprios</code> setting.</p>"},{"location":"REGIONS/#command-line","title":"Command line","text":"<p>Read about the <code>--region</code> option.</p>"},{"location":"SCRAPINGMODULES/","title":"Scrapers","text":""},{"location":"SCRAPINGMODULES/#scraping-module-overview","title":"Scraping Module Overview","text":"<p>Skyscraper supports several online and local sources when scraping data for your roms. This makes Skyscraper a hugely versatile tool since it also caches any resources that are gathered from any of the modules. The cached data can then be used to generate a game list and composite artwork later.</p> <p>Choosing a scraping module is as simply as setting the <code>-s &lt;MODULE&gt;</code> option when running Skyscraper on the command line. It also requires a platform to be set with <code>-p &lt;PLATFORM&gt;</code>. If you leave out the <code>-s</code> option Skyscraper goes into game list generation mode and combines your cached data into a game list for the chosen platform and frontend. Read more about the resource cache if needed.</p> <p>For scraping modules that support or require user credentials you have the option of either setting it on commandline with <code>-u &lt;USER:PASSWD&gt;</code> or <code>-u &lt;KEY&gt;</code> or better yet, by adding it permanently to the Skyscraper configuration at <code>/home/&lt;USER&gt;/.skyscraper/config.ini</code> as described in the configuration documentation</p>"},{"location":"SCRAPINGMODULES/#capabilities-of-scrapers","title":"Capabilities of Scrapers","text":"<p>This table summarizes the game metadata provided by each scraping module. Hover over a table cell to display the scraper as tooltip:</p> Capability \u2192Scraper \u2193 Title Release Date Description Max. Players Developer Publisher Genre/Tags Rating Age Recommend. Cover Screenshot Video Wheel/Logo Marquee Manual (PDF) Texture Fan Art Arcade DB \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u00b9 \u2713 \u2713 \u2713 \u2713 ES GameList \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 GameBase \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u00b2 \u2713 \u2713 Internet Game DB (IGDB) \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 File Import \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 See \u2074 MobyGames \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 OpenRetro \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 ScreenScraper \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 See \u2074 The Games DB \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 See \u2074 ZXInfo \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u2713 \u00b3 \u2713 \u2713 Coverage 10/10 10/10 8/10 10/10 9/10 10/10 10/10 8/10 8/10 10/10 10/10 4/10 4/10 5/10 3/10 2/10 <p>Remarks:  \u00b9 Skyscraper uses ArcadeDB's Flyer and as a failsafe the Title screen, as Arcade games usually where not sold in a box  \u00b2 GameBase provides only an adult flag, thus it is either 18 or no age rating  \u00b3 The source zxinfo.dk provides only an x-rated flag, thus it is either 18 or no age rating  \u2074 Planned for a future release of Skyscraper</p>"},{"location":"SCRAPINGMODULES/#recognized-keywords-in-query","title":"Recognized Keywords in Query","text":"Module Supported Formats <code>--query=\"\"</code> Parameter arcadedb Only title esgamelist No query supported gamebase Game filename, Game title and Game CRC (automatically detected). Except for CRC, globbing patterns (<code>*</code> and <code>'?</code>) can be used. igdb Title or use id=... to query by IGDB game ID import No query supported mobygames Title or numeric MobyGames ID (see Identifiers section their website / on game details) openretro Only title screenscraper romnom=, crc=, md5=, sha1=; see Screenscraper documentation for description thegamesdb, tgdb Only title zxinfo (worldofspectrum) Title, game Id (id=...) or game filehash (MD5 or SHA512) <p>Aliases for Game Filenames</p> <p>Except for the Import and EmulationStation Gamelist scraper you can also define aliases for each game filename. If an alias is found it is applied for searching the game's metadata. Consult the file <code>aliasMap.csv</code> for details.</p> <p>Successor of 'World of Spectrum' is 'ZXInfo'</p> <p>Thanks to some kind soul there is a fully functional ZXSpectrum scraping source again and you can use it with Skyscraper 3.17 onwards. For you as an user nothing changes: You may continue the <code>-s</code> scraper values <code>worldofspectrum</code>, <code>wos</code> or <code>zxinfo</code> (preferred) to use this scraper. Plus, you may now also scrape by game id and game hash (see the <code>--query</code> option for details).</p>"},{"location":"SCRAPINGMODULES/#characteristics-for-each-scraping-module","title":"Characteristics for Each Scraping Module","text":""},{"location":"SCRAPINGMODULES/#screenscraper","title":"ScreenScraper","text":"<ul> <li>Shortname: <code>screenscraper</code></li> <li>Type: Online</li> <li>Website: www.screenscraper.fr</li> <li>Type: Rom checksum based, Exact file name based</li> <li>User credential support: Yes, and strongly recommended, but not required</li> <li>API request limit: 20k per day for registered users</li> <li>Thread limit: 1 or more depending on user credentials</li> <li>Platform support: Check list under \"Syst\u00e9mes\" or see <code>screenscraper_platforms.json</code> sibling to your <code>config.ini</code></li> <li>Media support: <code>cover</code>, <code>screenshot</code>, <code>wheel</code>, <code>manual</code>, <code>marquee</code>, <code>video</code></li> <li>Example use: <code>Skyscraper -p snes -s screenscraper</code></li> </ul> <p>ScreenScraper is probably the most versatile and complete retro gaming database out there. It searches for games using either the checksums of the files or by comparing the exact file name to entries in their database.</p> <p>It can be used for gathering data for pretty much all platforms, but it does have issues with platforms that are ISO based. Still, even for those platforms, it does locate some games.</p> <p>It has the best support for the <code>wheel</code> and <code>marquee</code> artwork types of any of the databases, and also contains videos and manuals for a lot of the games.</p> <p>I strongly recommend supporting them by contributing data to the database, or by supporting them with a bit of money. This can also give you more threads to scrape with.</p> <p>Note</p> <p>Exact file name matching does not work well for the <code>arcade</code> derived platforms in cases where a data checksum doesn't match. The reason being that <code>arcade</code> and other arcade-like platforms are made up of several subplatforms. Each of those subplatforms have a high chance of containing the same file name entry. In those cases ScreenScraper can't determine a unique game and will return an empty result.</p>"},{"location":"SCRAPINGMODULES/#thegamesdb-tgdb","title":"TheGamesDB (TGDB)","text":"<ul> <li>Shortname: <code>thegamesdb</code>, <code>tgdb</code></li> <li>Type: Online</li> <li>Website: www.thegamesdb.net</li> <li>Type: File name search based</li> <li>User credential support: Not required</li> <li>API request limit: Limited to 3000 requests per IP per month</li> <li>Thread limit: None</li> <li>Platform support: Link to list or see <code>tgdb_platforms.json</code> sibling to your <code>config.ini</code></li> <li>Media support: <code>cover</code>, <code>screenshot</code>, <code>wheel</code>, <code>marquee</code></li> <li>Example use: <code>Skyscraper -p snes -s thegamesdb</code></li> </ul> <p>For newer games there's no way around TheGamesDb. It recently had a huge redesign and their database remains one of the best out there. I would recommend scraping your roms with <code>screenscraper</code> first, and then use <code>thegamesdb</code> to fill out the gaps in your cache.</p> <p>There's a small caveat to this module, as it has a monthly request limit (see above) per IP per month. But this should be plenty for most people.</p> <p>Their API is based on a file name search. This means that the returned results do have a chance of being faulty. Skyscraper does a lot internally to make sure accepted data is for the correct game. But it is impossible to ensure 100% correct results, so do keep that in mind when using it. Consider using the <code>--flags interactive</code> command line flag if you want complete control of the accepted entries.</p>"},{"location":"SCRAPINGMODULES/#arcadedb-by-motoschifo","title":"ArcadeDB (by motoschifo)","text":"<ul> <li>Shortname: <code>arcadedb</code></li> <li>Type: Online</li> <li>Website: adb.arcadeitalia.net, youtube</li> <li>Contact: arcadedatabase@gmail.com</li> <li>Type: Mame file name id based</li> <li>User credential support: None required</li> <li>API request limit: None</li> <li>Thread limit: 1</li> <li>Platform support: Exclusively arcade platforms using official MAME files</li> <li>Media support: <code>cover</code>, <code>screenshot</code>, <code>wheel</code>, <code>marquee</code>, <code>video</code></li> <li>Example use: <code>Skyscraper -p fba -s arcadedb</code></li> </ul> <p>Several Arcade databases using the MAME file name id's have existed throughout the years. Currently the best one, in my opinion, is the ArcadeDB made by motoschifo. It goes without saying that this module is best used for arcade platforms such as <code>fba</code>, <code>arcade</code> and any of the mame sub-platforms.</p> <p>As it relies on the MAME file name id when searching, there's no use trying to use this module for any non-MAME files. It won't give you any results.</p> <p>This module also supports videos for many games.</p>"},{"location":"SCRAPINGMODULES/#openretro","title":"OpenRetro","text":"<ul> <li>Shortname: <code>openretro</code></li> <li>Type: Online</li> <li>Website: www.openretro.org</li> <li>Type: WHDLoad uuid based, File name search based</li> <li>User credential support: None required</li> <li>API request limit: None</li> <li>Thread limit: 1</li> <li>Platform support: Primarily Amiga, but supports others as well. Check list here to the right</li> <li>Media support: <code>cover</code>, <code>screenshot</code>, <code>marquee</code></li> <li>Example use: <code>Skyscraper -p amiga -s openretro</code></li> </ul> <p>If you're looking to scrape the Amiga RetroPlay LHA files, there's no better way to do this than using the <code>openretro</code> module. It is by far the best WHDLoad Amiga database on the internet when it comes to data scraping, and maybe even the best Amiga game info database overall.</p> <p>The database also supports many non-Amiga platforms, but there's no doubt that Amiga is the strong point.</p>"},{"location":"SCRAPINGMODULES/#mobygames","title":"MobyGames","text":"<ul> <li>Shortname: <code>mobygames</code></li> <li>Type: Online</li> <li>Website: www.mobygames.com</li> <li>Type: File name or Moby Games ID search based</li> <li>User credential support: None required</li> <li>API request limit: 1 request per 5 seconds (Hobbyist subscription)</li> <li>Thread limit: 1</li> <li>Platform support: List or see <code>mobygames_platforms.json</code> sibling to your <code>config.ini</code></li> <li>Media support: <code>cover</code>, <code>screenshot</code></li> <li>Example use:</li> <li><code>Skyscraper -p fba -s mobygames &lt;SINGLE FILE TO SCRAPE&gt;</code></li> <li><code>Skyscraper -p fba -s mobygames --startat &lt;FILE TO START AT&gt; --endat &lt;FILE TO END AT&gt;</code></li> </ul> <p>MobyGames. What can I say. If you haven't heard about this database before you've been missing out. It's one of the best and oldest games databases on the internet. You'll probably come across references to MobyGames on other sites when searching for retro games. There's a reason for that - it's that good.</p> <p>There's a caveat to the module as it requires a subscription to get an API key, but you get well curated game information especially for hard to find titles. Examine the possible options: https://www.mobygames.com/api/subscribe/. Once you have obtained an API key add it to the userCreds configuration (without any colon) in the [mobygames] INI section.</p>"},{"location":"SCRAPINGMODULES/#igdb","title":"IGDB","text":"<ul> <li>Shortname: <code>igdb</code></li> <li>Type: Online</li> <li>Website: www.igdb.com</li> <li>Type: File name or IGDB Game Id search based</li> <li>User credential support: Yes, free private API client-id and secret-key required! Read more below</li> <li>API request limit: A maximum of 4 requests per seconds is allowed</li> <li>Thread limit: 4 (each being limited to 1 request per second)</li> <li>Platform support: List</li> <li>Media support: <code>cover</code>, <code>screenshot</code></li> <li>Example use:</li> <li><code>Skyscraper -p fba -s igdb &lt;SINGLE FILE TO SCRAPE&gt;</code></li> <li><code>Skyscraper -p fba -s igdb --startat &lt;FILE TO START AT&gt; --endat &lt;FILE TO END AT&gt;</code></li> </ul> <p>IGDB is a relatively new database on the market. But absolutely not a bad one at that. It has a couple caveats though, as the database doesn't distinguish between platform versions of the same game when it comes to any artwork resources (they are working to implement this at some point). This makes it less usable in a retro game scraping context as many of the games differ drastically visually between the old platforms. For that reason alone, this module will only provide textual data for your roms for the time being.</p> <p>It is required to register with the Twitch dev program (IGDB is owned by Twitch) and create a free client-id and secret-key pair for use with Skyscraper. The process of getting this free client-id and secret-key pair is quite easy. Just follow the following steps:</p> <ul> <li>Signup at Twitch</li> <li>Enable two-factor authentication (mandatory)</li> <li>Register an application (call it whatever you like)</li> <li>Manage your newly created application</li> <li>Add <code>https://localhost</code> as OAuth redirect URL</li> <li>Generate a secret-key by selecting the button <code>New secret</code></li> <li>Add your client-id and secret-key pair to the Skyscraper config ini (<code>/home/&lt;USER&gt;/.skyscraper/config.ini</code>):</li> </ul> <pre><code>[igdb]\nuserCreds=\"CLIENTID:SECRETKEY\"\n</code></pre> <p>Substitute CLIENTID and SECRETKEY with your own details. And that's it, you should now be able to use the IGDB module.</p>"},{"location":"SCRAPINGMODULES/#zxinfo-formerly-world-of-spectrum","title":"ZXInfo (formerly World of Spectrum)","text":"<ul> <li>Shortname:  <code>zxinfo</code>, <code>worldofspectrum</code>, <code>wos</code></li> <li>Type: Online</li> <li>Website: zxinfo.dk</li> <li>Type: File name search, Game Id search or Game hash search</li> <li>User credential support: None required</li> <li>API request limit: None</li> <li>Thread limit: None</li> <li>Platform support: Exclusively ZX Spectrum games</li> <li>Media support: <code>cover</code>, <code>screenshot</code></li> <li>Example use: <code>Skyscraper -p zxspectrum -s zxinfo</code></li> </ul> <p>If you're looking specifically for ZX Spectrum data, this is the module to use. ZXInfo is probably the most complete ZX Spectrum resource and information database in existence. I strongly recommend visiting the site if you have any interest in these little machines. It's a cornucopia of information on the platform.</p>"},{"location":"SCRAPINGMODULES/#emulationstation-game-list","title":"EmulationStation Game List","text":"<ul> <li>Shortname: <code>esgamelist</code></li> <li>Type: Local</li> <li>Website: https://emulationstation.org</li> <li>Type: Exact file name match</li> <li>User credential support: None required</li> <li>API request limit: None</li> <li>Thread limit: None</li> <li>Platform support: All</li> <li>Media support: <code>screenshot</code>, <code>manual</code>, <code>marquee</code>, <code>video</code></li> <li>Example use: <code>Skyscraper -p snes -s esgamelist</code></li> </ul> <p>This module allows you to import data from an existing EmulationStation game list into the Skyscraper cache. This is useful if you already have a lot of data and artwork in a gamelist.xml file and you wish to use it with Skyscraper.</p> <p>Skyscraper will search for the <code>gamelist.xml</code> file at <code>&lt;INPUT FOLDER&gt;/gamelist.xml</code> which by default is <code>/home/&lt;USER&gt;/RetroPie/roms/&lt;PLATFORM&gt;/gamelist.xml</code>. If that file isn't found it will look for it at <code>/home/&lt;USER&gt;/.skyscraper/import/&lt;PLATFORM&gt;/gamelist.xml</code>.</p>"},{"location":"SCRAPINGMODULES/#custom-resource-import","title":"Custom Resource Import","text":"<ul> <li>Shortname: <code>import</code></li> <li>Type: Local</li> <li>Website: Documentation@github</li> <li>Type: Exact file name match</li> <li>User credential support: None required</li> <li>API request limit: None</li> <li>Thread limit: None</li> <li>Platform support: All</li> <li>Media support: <code>cover</code>, <code>screenshot</code>, <code>wheel</code>, <code>manual</code>, <code>marquee</code>, <code>video</code></li> <li>Example use: <code>Skyscraper -p snes -s import</code></li> </ul> <p>Read a thorough description of the import module to recognize all capabilities.</p>"},{"location":"SCRAPINGMODULES/#gamebase-db","title":"GameBase DB","text":"<ul> <li>Shortname: <code>gamebase</code></li> <li>Type: Local</li> <li>Website: about the format</li> <li>Type: filename, title or CRC match, for filename and title wildcards '*' and '?' can be applied anywhere</li> <li>User credential support: None required</li> <li>API request limit: None</li> <li>Thread limit: 1</li> <li>Platform support: For those platforms where the community has compiled a GameBase database, several dozen platforms do have a GameBase database. Some examples: Commodore Machines (VC-20,C64,Plus/4,Amiga), Sinclair Spectrum (\"Speccy\"), see the most comprehensive list</li> <li>Media support: <code>cover</code>, <code>screenshot</code></li> <li>Example use: <code>Skyscraper -p zxspectrum -s gamebase</code></li> </ul> <p>A GameBase DB is a community driven effort to collect game information of the common game releases for a platform, but also more importantly for Homebrew and Indie released games. It is a great source to find much information about the games and other media in one place, which is otherwise cluttered over the internet. Skyscraper only uses the game information, but a GameBase DB also contains information and files of the platform's former magazines and short manuals for example. The usual GameBase DB Frontend is Windows based and a database is in Microsoft Access (<code>*.mdb</code>) format. Binary data is held in subfolders (e.g. Screenshots, Cover) on the filesystem.</p> <p>Read the setup and config description of the GameBase DB module.</p>"},{"location":"USECASE/","title":"Sample Use Case","text":""},{"location":"USECASE/#a-typical-skyscraper-usecase","title":"A Typical Skyscraper Usecase","text":"<p>The following describes a typical way of using Skyscraper. It's really simple to use once you understand the core concept. It has a couple of layers you should familiarize yourself with in order to get the best results.</p> <p>Info</p> <p>Always remember to close your frontend before using Skyscraper! Otherwise any game list generated by Skyscraper will be overwritten when you exit the frontend.</p> <p>Info</p> <p>Some of the scraping modules either require or work best when you have registered a user with their service and configured Skyscraper to make use of these credentials when scraping with the module. The suggested <code>screenscraper</code> source used in the command a bit further down will work without credentials. But when the service is busy, it will give you an error! So consider registering users with the relevant sources and configure Skyscraper to make use of them. Read about all scraping modules.</p> <p>Now, let's dig in!</p>"},{"location":"USECASE/#you-have-some-files-but-no-information","title":"You Have Some Files but no Information","text":"<p>You probably installed Skyscraper in order to get some data and artwork on your frontend game lists. So let's say that you have a bunch of Super Nintendo files you wish to populate with data. You'd first gather some data into the Skyscraper resource cache and then generate a game list using the cached data afterwards. So it's a two-step process.</p> <p> </p> Skyscraper flowchart"},{"location":"USECASE/#the-gathering-phase","title":"The Gathering Phase","text":"<p>Skyscraper can gather data from several scraping modules / sources (set with <code>-s &lt;MODULE&gt;</code>). So you'd start by scraping the <code>snes</code> platform (set with <code>-p &lt;PLATFORM&gt;</code>) with one or more of those modules. Each time you do so, all of the data will be saved in the Skyscraper cache.</p> <pre><code>$ Skyscraper -p snes -s screenscraper\n</code></pre> <p>This should have given you a lot of data for your games. But some of it might still be missing. So let's continue gathering some data from another module.</p> <pre><code>$ Skyscraper -p snes -s thegamesdb\n</code></pre> <p>Each time you scrape your roms with a new scraping module, all of the data that was gathered will be cached inside Skyscraper's internal resource cache. The cache can contain one of each resource for each of the scraping modules.</p>"},{"location":"USECASE/#the-game-list-generation-phase","title":"The Game List Generation Phase","text":"<p>By having gathered data from both sources (<code>screenscraper</code> and <code>thegamesdb</code>) there's a good chance that you will get a complete result if the data from both is combined. And that's exactly what Skyscraper can do for you.</p> <pre><code>$ Skyscraper -p snes\n</code></pre> <p>Running that command will generate a game list for the chosen frontend (default is EmulationStation). It combines all of the cached data into the most complete results. This phase also includes the artwork compositing. If you use a non-default frontend, you can configure this in Skyscraper's configuration. Or you can set it on the command-line.</p> <p>The source priority for each resource is defined per-platform and can be changed at any time. Read more about the priorities file.</p>"},{"location":"USECASE/#so-what-then","title":"So What Then?","text":"<p>You're done! The game list has been generated and you can relaunch your frontend to enjoy the game data and artwork. Or you can move on and scrape data for another platform. Just remember to distinguish between the gathering phase and the game list generation phase. Always gather first, then generate the game list afterwards.</p> <p>Tip</p> <p>You can always re-generate a game list if you changed the artwork configuration or gathered new data for any of your roms. Simply rerun the <code>Skyscraper -p &lt;PLATFORM&gt;</code> command again, and the game list will be re-generated with your new settings using all of the previously cached data.</p> <p>Tip</p> <p>If you re-gather data for a platform, it will skip games that already have data in the resource cache to save bandwidth for the online sources. To force a refresh of the data directly from the source, you need to set the <code>--refresh</code> option.</p>"},{"location":"USECASE/#but-what-about","title":"But What About...","text":"<p>Yes, yes, yes. This is just the basics. You can customize the artwork completely to your liking. You can prioritize the different cached resources any way you like. You can scrape single games in order to gather information for just that one game. You can enable video scraping. You can import your own data into the cache. You can edit the cached data. You can clean your cache. You can create aliases for games that are difficult to scrape (see <code>aliasMap.csv</code> sibling to your <code>config.ini</code>). You can change your preferred region and language for the modules that support it. You can set up keys or user id's and password for the scraping modules that take advantage of this. There's a lot you can do if you want to.</p> <p>The important thing to note is that the defaults for Skyscraper is set to work well for most users. So unless you see something you want to change, you don't have to. But it's equally important to know that you can.</p> <p>If this piqued your interest, please read the entire documentation thorougly. Everything is documented to the last detail. It can seem overwhelming. But it gives you some really powerful options to scrape just the way you want. You can start from the quick run-down of Skyscraper and explore your path from there.</p>"},{"location":"XDG/","title":"XDG Base Directory Support","text":""},{"location":"XDG/#overview","title":"Overview","text":"<p>If you are a fellow Linux user you may be familiar with the XDG Base Directory Specification (BDS) as part of the freedesktop.org project. If not, you may read the brief specification, the ArchWiki has also additional information and list tools that support the specification. You may also bend over to wikipedia which has a brief section on the topic.</p> <p>Tip</p> <p>In this documentation you will note paths and file locations which relate to the \"genuine Skyscraper\" approach. With the table below you can map these locations to their counterpart in XDG BDS.</p>"},{"location":"XDG/#file-locations-genuine-and-xdg-skyscraper","title":"File Locations: Genuine- and XDG-Skyscraper","text":"Type Genuine Skyscraper Location XDG BDS Location CONFIG All files, but no subfolders of <code>~/.skyscraper/*</code> <code>$XDG_CONFIG_HOME/skyscraper/</code> CACHE All of <code>~/.skyscraper/cache/</code> <code>$XDG_CACHE_HOME/skyscraper/</code> IMPORT All of <code>~/.skyscraper/import/</code> <code>$XDG_DATA_HOME/skyscraper/import/</code> RESOURCE All of <code>~/.skyscraper/resources/</code> <code>$XDG_DATA_HOME/skyscraper/resources/</code> LOG Skipped files/games during processing <code>~/.skyscraper/skipped*.txt</code> <code>$XDG_STATE_HOME/skyscraper/</code> REPORT Cache reports <code>~/.skyscraper/reports/*</code> <code>$XDG_STATE_HOME/skyscraper/reports/</code> LOG Rare Screenscraper error log <code>~/.skyscraper/screenscraper_error.txt</code> <code>$XDG_STATE_HOME/skyscraper/</code> <p>Skyscraper is strict</p> <p>As per specification: All paths must be absolute, relative paths will be ignored by Skyscraper. Non-existing paths will be created by Skyscraper.</p>"},{"location":"XDG/#how-to-enable-xdg","title":"How to Enable XDG","text":"<p>The XDG feature can be used with any modern Linux distribution, but should not be enabled on RetroPie installments as they rely on the genuine Skyscraper folder structure.</p> <p>Review the Skyscraper project file (<code>skyscraper.pro</code>). Enable the line <code>DEFINES+=XDG</code>, rebuild and install Skyscraper. Then transfer the files from the genuine Skyscraper location to their XDG counterpart. If you start from scratch Skyscraper will be deploy its configuration files to the XDG destinations (by default sourced from <code>/usr/local/etc/skyscraper</code>).</p> <p>If you want to verify if Skyscraper is compiled with XDG support run <code>Skyscraper --version</code>. If you see a XDG label below the version number it means XDG is enabled and supported.</p> <p>To disable XDG support undo the steps above.</p> <p>The Fine Print</p> <p>Skyscraper supports all user directories of the XDG BDS (except <code>$HOME/.local/bin</code> for user binaries). The system directories properties (<code>XDG_DATA_DIRS</code> and <code>XDG_CONFIG_DIRS</code>) are not utilized by Skyscraper.</p>"}]}